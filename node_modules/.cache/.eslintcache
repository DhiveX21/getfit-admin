[{"D:\\project ardhi\\getfit-admin\\src\\index.js":"1","D:\\project ardhi\\getfit-admin\\src\\App.js":"2","D:\\project ardhi\\getfit-admin\\src\\context\\index.js":"3","D:\\project ardhi\\getfit-admin\\src\\routes.js":"4","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\index.js":"5","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\index.js":"6","D:\\project ardhi\\getfit-admin\\src\\examples\\Configurator\\index.js":"7","D:\\project ardhi\\getfit-admin\\src\\components\\MDBox\\index.js":"8","D:\\project ardhi\\getfit-admin\\src\\components\\extend\\Sidenav\\index.js":"9","D:\\project ardhi\\getfit-admin\\src\\redux\\store.jsx":"10","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\breakpoints.js":"11","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\colors.js":"12","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\globals.js":"13","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\boxShadows.js":"14","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\borders.js":"15","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\typography.js":"16","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\functions\\boxShadow.js":"17","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\functions\\hexToRgb.js":"18","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\functions\\rgba.js":"19","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\functions\\pxToRem.js":"20","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\iconButton.js":"21","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\divider.js":"22","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\linearProgress.js":"23","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\sidenav.js":"24","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\functions\\linearGradient.js":"25","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\breadcrumbs.js":"26","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\tooltip.js":"27","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\slider.js":"28","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\avatar.js":"29","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\appBar.js":"30","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\container.js":"31","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\popover.js":"32","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\buttonBase.js":"33","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\icon.js":"34","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\svgIcon.js":"35","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\link.js":"36","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\card\\cardMedia.js":"37","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\list\\listItem.js":"38","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\card\\cardContent.js":"39","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\list\\listItemText.js":"40","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\inputLabel.js":"41","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\input.js":"42","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\inputOutlined.js":"43","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\switchButton.js":"44","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\textField.js":"45","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\select.js":"46","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\formControlLabel.js":"47","D:\\project ardhi\\getfit-admin\\src\\RoutesValidation.jsx":"48","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\checkbox.js":"49","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\formLabel.js":"50","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\radio.js":"51","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\table\\tableHead.js":"52","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\autocomplete.js":"53","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\tabs\\tab.js":"54","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\table\\tableContainer.js":"55","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\table\\tableCell.js":"56","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\menu\\menuItem.js":"57","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\typography.js":"58","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\breakpoints.js":"59","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\colors.js":"60","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\boxShadows.js":"61","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\stepper\\step.js":"62","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\dialog\\dialogTitle.js":"63","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\stepper\\stepIcon.js":"64","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\stepper\\stepConnector.js":"65","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\dialog\\dialogContentText.js":"66","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\dialog\\dialogContent.js":"67","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\dialog\\dialogActions.js":"68","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\stepper\\stepLabel.js":"69","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\borders.js":"70","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\globals.js":"71","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\functions\\linearGradient.js":"72","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\functions\\boxShadow.js":"73","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\functions\\hexToRgb.js":"74","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\functions\\pxToRem.js":"75","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\functions\\rgba.js":"76","D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\index.js":"77","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\sidenav.js":"78","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\iconButton.js":"79","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\index.jsx":"80","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\list\\listItemText.js":"81","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\card\\cardContent.js":"82","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\card\\cardMedia.js":"83","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\list\\listItem.js":"84","D:\\project ardhi\\getfit-admin\\src\\layouts\\authentication\\sign-in\\index.js":"85","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\inputOutlined.js":"86","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\input.js":"87","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\textField.js":"88","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\inputLabel.js":"89","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\index.jsx":"90","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\breadcrumbs.js":"91","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\divider.js":"92","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\slider.js":"93","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\avatar.js":"94","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\appBar.js":"95","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\tooltip.js":"96","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\linearProgress.js":"97","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\container.js":"98","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\popover.js":"99","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\buttonBase.js":"100","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\list\\index.js":"101","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\menu\\menuItem.js":"102","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\card\\index.js":"103","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\tabs\\index.js":"104","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\menu\\index.js":"105","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\stepper\\index.js":"106","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\formControlLabel.js":"107","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\dialog\\index.js":"108","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\switchButton.js":"109","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\formLabel.js":"110","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\select.js":"111","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\button\\index.js":"112","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\checkbox.js":"113","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\table\\tableContainer.js":"114","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\table\\tableHead.js":"115","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\svgIcon.js":"116","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\link.js":"117","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\icon.js":"118","D:\\project ardhi\\getfit-admin\\src\\examples\\Configurator\\ConfiguratorRoot.js":"119","D:\\project ardhi\\getfit-admin\\src\\components\\MDBox\\MDBoxRoot.js":"120","D:\\project ardhi\\getfit-admin\\src\\examples\\Sidenav\\SidenavRoot.js":"121","D:\\project ardhi\\getfit-admin\\src\\examples\\Sidenav\\SidenavCollapse.js":"122","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\radio.js":"123","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\table\\tableCell.js":"124","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\card\\index.js":"125","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\autocomplete.js":"126","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\stepper\\step.js":"127","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\list\\index.js":"128","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\menu\\index.js":"129","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\stepper\\stepConnector.js":"130","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\stepper\\stepLabel.js":"131","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\stepper\\stepIcon.js":"132","D:\\project ardhi\\getfit-admin\\src\\components\\MDButton\\index.js":"133","D:\\project ardhi\\getfit-admin\\src\\components\\MDTypography\\index.js":"134","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\tabs\\tab.js":"135","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\dialog\\dialogContent.js":"136","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\dialog\\dialogTitle.js":"137","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\button\\index.js":"138","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\stepper\\index.js":"139","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\dialog\\dialogContentText.js":"140","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\dialog\\dialogActions.js":"141","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\tabs\\index.js":"142","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\dialog\\index.js":"143","D:\\project ardhi\\getfit-admin\\src\\examples\\Sidenav\\styles\\sidenav.js":"144","D:\\project ardhi\\getfit-admin\\src\\helpers\\LocalStorageHelpers.jsx":"145","D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\data\\reportsBarChartData.js":"146","D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\data\\reportsLineChartData.js":"147","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\button\\outlined.js":"148","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\button\\root.js":"149","D:\\project ardhi\\getfit-admin\\src\\examples\\Footer\\index.js":"150","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\button\\contained.js":"151","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\button\\text.js":"152","D:\\project ardhi\\getfit-admin\\src\\components\\extend\\Footer\\index.js":"153","D:\\project ardhi\\getfit-admin\\src\\examples\\Navbars\\DashboardNavbar\\index.js":"154","D:\\project ardhi\\getfit-admin\\src\\examples\\LayoutContainers\\DashboardLayout\\index.js":"155","D:\\project ardhi\\getfit-admin\\src\\components\\MDInput\\index.js":"156","D:\\project ardhi\\getfit-admin\\src\\components\\MDTypography\\MDTypographyRoot.js":"157","D:\\project ardhi\\getfit-admin\\src\\components\\MDButton\\MDButtonRoot.js":"158","D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\components\\Projects\\index.js":"159","D:\\project ardhi\\getfit-admin\\src\\components\\extend\\LayoutContainers\\DashboardLayout\\index.js":"160","D:\\project ardhi\\getfit-admin\\src\\examples\\Charts\\BarCharts\\ReportsBarChart\\index.js":"161","D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\components\\OrdersOverview\\index.js":"162","D:\\project ardhi\\getfit-admin\\src\\components\\extend\\Navbars\\DashboardNavbar\\index.js":"163","D:\\project ardhi\\getfit-admin\\src\\examples\\Charts\\LineCharts\\ReportsLineChart\\index.js":"164","D:\\project ardhi\\getfit-admin\\src\\examples\\Cards\\StatisticsCards\\ComplexStatisticsCard\\index.js":"165","D:\\project ardhi\\getfit-admin\\src\\examples\\Sidenav\\styles\\sidenavCollapse.js":"166","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\index.jsx":"167","D:\\project ardhi\\getfit-admin\\src\\components\\extend\\Button\\BackButton\\index.jsx":"168","D:\\project ardhi\\getfit-admin\\src\\layouts\\authentication\\components\\BasicLayout\\index.js":"169","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\index.jsx":"170","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\index.jsx":"171","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\button\\root.js":"172","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\button\\text.js":"173","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\button\\outlined.js":"174","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\button\\contained.js":"175","D:\\project ardhi\\getfit-admin\\src\\components\\MDInput\\MDInputRoot.js":"176","D:\\project ardhi\\getfit-admin\\src\\examples\\Navbars\\DashboardNavbar\\styles.js":"177","D:\\project ardhi\\getfit-admin\\src\\examples\\Breadcrumbs\\index.js":"178","D:\\project ardhi\\getfit-admin\\src\\examples\\Items\\NotificationItem\\index.js":"179","D:\\project ardhi\\getfit-admin\\src\\examples\\Tables\\DataTable\\index.js":"180","D:\\project ardhi\\getfit-admin\\src\\examples\\Timeline\\TimelineItem\\index.js":"181","D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\components\\Projects\\data\\index.js":"182","D:\\project ardhi\\getfit-admin\\src\\examples\\Charts\\BarCharts\\ReportsBarChart\\configs\\index.js":"183","D:\\project ardhi\\getfit-admin\\src\\examples\\Charts\\LineCharts\\ReportsLineChart\\configs\\index.js":"184","D:\\project ardhi\\getfit-admin\\src\\examples\\LayoutContainers\\PageLayout\\index.js":"185","D:\\project ardhi\\getfit-admin\\src\\components\\extend\\Tables\\DataTable\\index.js":"186","D:\\project ardhi\\getfit-admin\\src\\layouts\\authentication\\components\\Footer\\index.js":"187","D:\\project ardhi\\getfit-admin\\src\\examples\\Tables\\DataTable\\DataTableHeadCell.js":"188","D:\\project ardhi\\getfit-admin\\src\\examples\\Tables\\DataTable\\DataTableBodyCell.js":"189","D:\\project ardhi\\getfit-admin\\src\\examples\\Items\\NotificationItem\\styles.js":"190","D:\\project ardhi\\getfit-admin\\src\\examples\\Timeline\\TimelineItem\\styles.js":"191","D:\\project ardhi\\getfit-admin\\src\\components\\MDBadge\\index.js":"192","D:\\project ardhi\\getfit-admin\\src\\components\\MDAvatar\\index.js":"193","D:\\project ardhi\\getfit-admin\\src\\components\\MDProgress\\index.js":"194","D:\\project ardhi\\getfit-admin\\src\\components\\MDPagination\\index.js":"195","D:\\project ardhi\\getfit-admin\\src\\examples\\Timeline\\context\\index.js":"196","D:\\project ardhi\\getfit-admin\\src\\components\\MDBadge\\MDBadgeRoot.js":"197","D:\\project ardhi\\getfit-admin\\src\\components\\MDAvatar\\MDAvatarRoot.js":"198","D:\\project ardhi\\getfit-admin\\src\\components\\MDProgress\\MDProgressRoot.js":"199","D:\\project ardhi\\getfit-admin\\src\\components\\MDPagination\\MDPaginationItemRoot.js":"200","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\ListTableMedicalRecord\\index.jsx":"201","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\ListTableMedicalRecord\\data\\medicalRecordTableData.jsx":"202","D:\\project ardhi\\getfit-admin\\src\\examples\\Sidenav\\index.js":"203","D:\\project ardhi\\getfit-admin\\src\\_api\\medicalRecordApi.jsx":"204","D:\\project ardhi\\getfit-admin\\src\\_slices\\medicalRecordSlice.jsx":"205","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\medicalRecordAction.jsx":"206","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\ListTableMedicalRecord\\data\\formatter\\timeFormatter.jsx":"207","D:\\project ardhi\\getfit-admin\\src\\_slices\\appointmentSlice.jsx":"208","D:\\project ardhi\\getfit-admin\\src\\_slices\\orderSlice.jsx":"209","D:\\project ardhi\\getfit-admin\\src\\_slices\\patientSlice.jsx":"210","D:\\project ardhi\\getfit-admin\\src\\_slices\\userSlice.jsx":"211","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\index.jsx":"212","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\index.jsx":"213","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\medicalRecordUIContext.jsx":"214","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\orderUIContext.jsx":"215","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\patientUIContext.jsx":"216","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\appointmentUIContext.jsx":"217","D:\\project ardhi\\getfit-admin\\src\\layouts\\authentication\\sign-in\\action\\userAction.jsx":"218","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\DetailPatient\\Index.jsx":"219","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\index.jsx":"220","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\DetailAppointment\\index.jsx":"221","D:\\project ardhi\\getfit-admin\\src\\layouts\\authentication\\sign-in\\reduxSlice\\signInSlice.js":"222","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\medicalRecordShareVar.jsx":"223","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\patientShareVar.jsx":"224","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\patientAction.jsx":"225","D:\\project ardhi\\getfit-admin\\src\\_api\\userApi.jsx":"226","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\orderAction.jsx":"227","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\appointmentAction.jsx":"228","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\patientTableData.jsx":"229","D:\\project ardhi\\getfit-admin\\src\\_shareVar\\index.jsx":"230","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\orderTableData.jsx":"231","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\appointmentTableData.jsx":"232","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\DetailPatient\\partial\\DetailAccount\\index.jsx":"233","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\DetailPatient\\partial\\Header\\index.jsx":"234","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\DetailPatient\\partial\\DetailProfile\\index.jsx":"235","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\DetailPatient\\partial\\PlatformSettings\\index.jsx":"236","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\partial\\index.jsx":"237","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\partial\\ProgressStatus\\index.jsx":"238","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\DetailAppointment\\partial\\ProgressStatus\\index.jsx":"239","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\DetailAppointment\\partial\\Header\\index.jsx":"240","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\DetailAppointment\\partial\\AppointmentDetail\\index.jsx":"241","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\DetailAppointment\\partial\\PatientDetail\\index.jsx":"242","D:\\project ardhi\\getfit-admin\\src\\_api\\patientApi.jsx":"243","D:\\project ardhi\\getfit-admin\\src\\_api\\orderApi.jsx":"244","D:\\project ardhi\\getfit-admin\\src\\_api\\appointmentApi.jsx":"245","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\ListTableMedicalRecord\\data\\formatter\\nameFormatter.jsx":"246","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\formatter\\index.jsx":"247","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\index.jsx":"248","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\index.jsx":"249","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\partial\\Header\\index.jsx":"250","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\partial\\PatientDetail\\index.jsx":"251","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\partial\\ProductDetail\\index.jsx":"252","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\formatter\\statusFormatter.jsx":"253","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\formatter\\nameFormatter.jsx":"254","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\formatter\\actionFormatter.jsx":"255","D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\formatter\\birthDateFormatter.jsx":"256","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\actionFormatter.jsx":"257","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\orderDateFormatter.jsx":"258","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\nameFormatter.jsx":"259","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\statusFormatter.jsx":"260","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\priceFormatter.jsx":"261","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\AddressColumnFormatter.jsx":"262","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\NameColumnFormatter.jsx":"263","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\BadgeColumnFormatter.jsx":"264","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\ActionColumnFormatter.jsx":"265","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\TimeColumnFormatter.jsx":"266","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\TypeColumnFormatter.jsx":"267","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\StatusColumnFormatter.jsx":"268","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\DetailMedicalRecord\\index.jsx":"269","D:\\project ardhi\\getfit-admin\\src\\helpers\\DateHelpers.jsx":"270","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\DetailMedicalRecord\\EditMedicalRecordForm\\index.jsx":"271","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\DetailMedicalRecord\\EditMedicalRecordForm\\DynamicForm\\index.jsx":"272","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\CreateMedicalRecord\\index.jsx":"273","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\CreateMedicalRecord\\DynamicForm\\index.jsx":"274","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\index.jsx":"275","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\notificationUIContext.jsx":"276","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\notificationShareVar.jsx":"277","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\ListTableNotification\\index.jsx":"278","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\notificationAction.jsx":"279","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\ListTableNotification\\data\\notificationTableData.jsx":"280","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\ListTableNotification\\data\\formatter\\nameFormatter.jsx":"281","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\ListTableNotification\\data\\formatter\\timeFormatter.jsx":"282","D:\\project ardhi\\getfit-admin\\src\\_api\\notificationApi.jsx":"283","D:\\project ardhi\\getfit-admin\\src\\_slices\\notificationSlice.jsx":"284","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\CreateNotification\\index.jsx":"285","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\CreateNotification\\notificationForm\\index.jsx":"286","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\CreateNotification\\categoryForm\\index.jsx":"287","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\CreateNotification\\whatsAppForm\\index.jsx":"288"},{"size":991,"mtime":1667373973790,"results":"289","hashOfConfig":"290"},{"size":4636,"mtime":1667628258432,"results":"291","hashOfConfig":"290"},{"size":4486,"mtime":1667373973744,"results":"292","hashOfConfig":"290"},{"size":6075,"mtime":1667717811479,"results":"293","hashOfConfig":"290"},{"size":6710,"mtime":1667373973687,"results":"294","hashOfConfig":"290"},{"size":7058,"mtime":1667373973653,"results":"295","hashOfConfig":"290"},{"size":11883,"mtime":1667373973773,"results":"296","hashOfConfig":"290"},{"size":1747,"mtime":1667373973693,"results":"297","hashOfConfig":"290"},{"size":6247,"mtime":1667378184555,"results":"298","hashOfConfig":"290"},{"size":622,"mtime":1667719787603,"results":"299","hashOfConfig":"290"},{"size":928,"mtime":1667373973655,"results":"300","hashOfConfig":"290"},{"size":4352,"mtime":1667373973656,"results":"301","hashOfConfig":"290"},{"size":1188,"mtime":1667373973656,"results":"302","hashOfConfig":"290"},{"size":3341,"mtime":1667373973655,"results":"303","hashOfConfig":"290"},{"size":1428,"mtime":1667373973654,"results":"304","hashOfConfig":"290"},{"size":4759,"mtime":1667373973656,"results":"305","hashOfConfig":"290"},{"size":1075,"mtime":1667373973685,"results":"306","hashOfConfig":"290"},{"size":867,"mtime":1667373973686,"results":"307","hashOfConfig":"290"},{"size":940,"mtime":1667373973687,"results":"308","hashOfConfig":"290"},{"size":739,"mtime":1667373973686,"results":"309","hashOfConfig":"290"},{"size":844,"mtime":1667373973672,"results":"310","hashOfConfig":"290"},{"size":2021,"mtime":1667373973666,"results":"311","hashOfConfig":"290"},{"size":1433,"mtime":1667373973673,"results":"312","hashOfConfig":"290"},{"size":1320,"mtime":1667373973677,"results":"313","hashOfConfig":"290"},{"size":801,"mtime":1667373973686,"results":"314","hashOfConfig":"290"},{"size":950,"mtime":1667373973658,"results":"315","hashOfConfig":"290"},{"size":1566,"mtime":1667373973684,"results":"316","hashOfConfig":"290"},{"size":2165,"mtime":1667373973677,"results":"317","hashOfConfig":"290"},{"size":919,"mtime":1667373973658,"results":"318","hashOfConfig":"290"},{"size":714,"mtime":1667373973657,"results":"319","hashOfConfig":"290"},{"size":1912,"mtime":1667373973663,"results":"320","hashOfConfig":"290"},{"size":1169,"mtime":1667373973677,"results":"321","hashOfConfig":"290"},{"size":646,"mtime":1667373973661,"results":"322","hashOfConfig":"290"},{"size":1038,"mtime":1667373973672,"results":"323","hashOfConfig":"290"},{"size":1000,"mtime":1667373973681,"results":"324","hashOfConfig":"290"},{"size":654,"mtime":1667373973673,"results":"325","hashOfConfig":"290"},{"size":1011,"mtime":1667373973662,"results":"326","hashOfConfig":"290"},{"size":739,"mtime":1667373973675,"results":"327","hashOfConfig":"290"},{"size":857,"mtime":1667373973661,"results":"328","hashOfConfig":"290"},{"size":691,"mtime":1667373973675,"results":"329","hashOfConfig":"290"},{"size":1517,"mtime":1667373973669,"results":"330","hashOfConfig":"290"},{"size":1264,"mtime":1667373973669,"results":"331","hashOfConfig":"290"},{"size":1778,"mtime":1667373973670,"results":"332","hashOfConfig":"290"},{"size":2410,"mtime":1667373973671,"results":"333","hashOfConfig":"290"},{"size":810,"mtime":1667373973672,"results":"334","hashOfConfig":"290"},{"size":1231,"mtime":1667373973671,"results":"335","hashOfConfig":"290"},{"size":1379,"mtime":1667373973668,"results":"336","hashOfConfig":"290"},{"size":466,"mtime":1667373973494,"results":"337","hashOfConfig":"290"},{"size":2657,"mtime":1667373973668,"results":"338","hashOfConfig":"290"},{"size":786,"mtime":1667373973669,"results":"339","hashOfConfig":"290"},{"size":2387,"mtime":1667373973671,"results":"340","hashOfConfig":"290"},{"size":1035,"mtime":1667373973683,"results":"341","hashOfConfig":"290"},{"size":2702,"mtime":1667373973667,"results":"342","hashOfConfig":"290"},{"size":1854,"mtime":1667373973684,"results":"343","hashOfConfig":"290"},{"size":1037,"mtime":1667373973682,"results":"344","hashOfConfig":"290"},{"size":1062,"mtime":1667373973682,"results":"345","hashOfConfig":"290"},{"size":1479,"mtime":1667373973676,"results":"346","hashOfConfig":"290"},{"size":4772,"mtime":1667373973623,"results":"347","hashOfConfig":"290"},{"size":928,"mtime":1667373973622,"results":"348","hashOfConfig":"290"},{"size":4407,"mtime":1667373973622,"results":"349","hashOfConfig":"290"},{"size":3396,"mtime":1667373973621,"results":"350","hashOfConfig":"290"},{"size":770,"mtime":1667373973679,"results":"351","hashOfConfig":"290"},{"size":937,"mtime":1667373973665,"results":"352","hashOfConfig":"290"},{"size":1625,"mtime":1667373973680,"results":"353","hashOfConfig":"290"},{"size":1279,"mtime":1667373973679,"results":"354","hashOfConfig":"290"},{"size":1022,"mtime":1667373973665,"results":"355","hashOfConfig":"290"},{"size":1287,"mtime":1667373973664,"results":"356","hashOfConfig":"290"},{"size":782,"mtime":1667373973664,"results":"357","hashOfConfig":"290"},{"size":1491,"mtime":1667373973680,"results":"358","hashOfConfig":"290"},{"size":1505,"mtime":1667373973621,"results":"359","hashOfConfig":"290"},{"size":1193,"mtime":1667373973623,"results":"360","hashOfConfig":"290"},{"size":801,"mtime":1667373973651,"results":"361","hashOfConfig":"290"},{"size":1085,"mtime":1667373973650,"results":"362","hashOfConfig":"290"},{"size":867,"mtime":1667373973651,"results":"363","hashOfConfig":"290"},{"size":739,"mtime":1667373973652,"results":"364","hashOfConfig":"290"},{"size":945,"mtime":1667373973652,"results":"365","hashOfConfig":"290"},{"size":5335,"mtime":1667373973811,"results":"366","hashOfConfig":"290"},{"size":1348,"mtime":1667373973642,"results":"367","hashOfConfig":"290"},{"size":849,"mtime":1667373973638,"results":"368","hashOfConfig":"290"},{"size":2132,"mtime":1667674745153,"results":"369","hashOfConfig":"290"},{"size":691,"mtime":1667373973640,"results":"370","hashOfConfig":"290"},{"size":862,"mtime":1667373973628,"results":"371","hashOfConfig":"290"},{"size":1021,"mtime":1667373973628,"results":"372","hashOfConfig":"290"},{"size":739,"mtime":1667373973640,"results":"373","hashOfConfig":"290"},{"size":5511,"mtime":1667378184570,"results":"374","hashOfConfig":"290"},{"size":1962,"mtime":1667373973635,"results":"375","hashOfConfig":"290"},{"size":1560,"mtime":1667373973634,"results":"376","hashOfConfig":"290"},{"size":815,"mtime":1667373973637,"results":"377","hashOfConfig":"290"},{"size":1527,"mtime":1667373973635,"results":"378","hashOfConfig":"290"},{"size":1331,"mtime":1667378184584,"results":"379","hashOfConfig":"290"},{"size":960,"mtime":1667373973625,"results":"380","hashOfConfig":"290"},{"size":2036,"mtime":1667373973632,"results":"381","hashOfConfig":"290"},{"size":1893,"mtime":1667373973642,"results":"382","hashOfConfig":"290"},{"size":924,"mtime":1667373973624,"results":"383","hashOfConfig":"290"},{"size":714,"mtime":1667373973624,"results":"384","hashOfConfig":"290"},{"size":1586,"mtime":1667373973649,"results":"385","hashOfConfig":"290"},{"size":1448,"mtime":1667373973638,"results":"386","hashOfConfig":"290"},{"size":1922,"mtime":1667373973629,"results":"387","hashOfConfig":"290"},{"size":1189,"mtime":1667373973642,"results":"388","hashOfConfig":"290"},{"size":646,"mtime":1667373973627,"results":"389","hashOfConfig":"290"},{"size":680,"mtime":1667373973674,"results":"390","hashOfConfig":"290"},{"size":1559,"mtime":1667373973641,"results":"391","hashOfConfig":"290"},{"size":1405,"mtime":1667373973662,"results":"392","hashOfConfig":"290"},{"size":1701,"mtime":1667373973683,"results":"393","hashOfConfig":"290"},{"size":1447,"mtime":1667373973676,"results":"394","hashOfConfig":"290"},{"size":1406,"mtime":1667373973678,"results":"395","hashOfConfig":"290"},{"size":1397,"mtime":1667373973634,"results":"396","hashOfConfig":"290"},{"size":971,"mtime":1667373973665,"results":"397","hashOfConfig":"290"},{"size":2440,"mtime":1667373973636,"results":"398","hashOfConfig":"290"},{"size":791,"mtime":1667373973634,"results":"399","hashOfConfig":"290"},{"size":1241,"mtime":1667373973636,"results":"400","hashOfConfig":"290"},{"size":1675,"mtime":1667373973659,"results":"401","hashOfConfig":"290"},{"size":2677,"mtime":1667373973633,"results":"402","hashOfConfig":"290"},{"size":1062,"mtime":1667373973647,"results":"403","hashOfConfig":"290"},{"size":1045,"mtime":1667373973647,"results":"404","hashOfConfig":"290"},{"size":1005,"mtime":1667373973646,"results":"405","hashOfConfig":"290"},{"size":654,"mtime":1667373973639,"results":"406","hashOfConfig":"290"},{"size":1043,"mtime":1667373973637,"results":"407","hashOfConfig":"290"},{"size":1798,"mtime":1667373973772,"results":"408","hashOfConfig":"290"},{"size":3255,"mtime":1667373973693,"results":"409","hashOfConfig":"290"},{"size":3000,"mtime":1667373973782,"results":"410","hashOfConfig":"290"},{"size":2733,"mtime":1667373973782,"results":"411","hashOfConfig":"290"},{"size":2407,"mtime":1667373973636,"results":"412","hashOfConfig":"290"},{"size":1077,"mtime":1667373973646,"results":"413","hashOfConfig":"290"},{"size":1467,"mtime":1667373973629,"results":"414","hashOfConfig":"290"},{"size":2938,"mtime":1667373973633,"results":"415","hashOfConfig":"290"},{"size":775,"mtime":1667373973644,"results":"416","hashOfConfig":"290"},{"size":680,"mtime":1667373973639,"results":"417","hashOfConfig":"290"},{"size":1482,"mtime":1667373973641,"results":"418","hashOfConfig":"290"},{"size":1289,"mtime":1667373973644,"results":"419","hashOfConfig":"290"},{"size":1511,"mtime":1667373973645,"results":"420","hashOfConfig":"290"},{"size":1640,"mtime":1667373973645,"results":"421","hashOfConfig":"290"},{"size":2084,"mtime":1667373973695,"results":"422","hashOfConfig":"290"},{"size":2450,"mtime":1667373973701,"results":"423","hashOfConfig":"290"},{"size":1876,"mtime":1667373973648,"results":"424","hashOfConfig":"290"},{"size":1396,"mtime":1667373973631,"results":"425","hashOfConfig":"290"},{"size":947,"mtime":1667373973631,"results":"426","hashOfConfig":"290"},{"size":1695,"mtime":1667373973626,"results":"427","hashOfConfig":"290"},{"size":1431,"mtime":1667373973643,"results":"428","hashOfConfig":"290"},{"size":1041,"mtime":1667373973631,"results":"429","hashOfConfig":"290"},{"size":787,"mtime":1667373973630,"results":"430","hashOfConfig":"290"},{"size":1702,"mtime":1667373973648,"results":"431","hashOfConfig":"290"},{"size":981,"mtime":1667373973632,"results":"432","hashOfConfig":"290"},{"size":1120,"mtime":1667373973783,"results":"433","hashOfConfig":"290"},{"size":2439,"mtime":1667373973789,"results":"434","hashOfConfig":"290"},{"size":677,"mtime":1667373973810,"results":"435","hashOfConfig":"290"},{"size":937,"mtime":1667373973810,"results":"436","hashOfConfig":"290"},{"size":2073,"mtime":1667373973659,"results":"437","hashOfConfig":"290"},{"size":1520,"mtime":1667373973660,"results":"438","hashOfConfig":"290"},{"size":3409,"mtime":1667373973774,"results":"439","hashOfConfig":"290"},{"size":2202,"mtime":1667373973659,"results":"440","hashOfConfig":"290"},{"size":2401,"mtime":1667373973660,"results":"441","hashOfConfig":"290"},{"size":3409,"mtime":1667373973729,"results":"442","hashOfConfig":"290"},{"size":6762,"mtime":1667373973779,"results":"443","hashOfConfig":"290"},{"size":1876,"mtime":1667373973776,"results":"444","hashOfConfig":"290"},{"size":1243,"mtime":1667373973696,"results":"445","hashOfConfig":"290"},{"size":2297,"mtime":1667373973701,"results":"446","hashOfConfig":"290"},{"size":7989,"mtime":1667373973694,"results":"447","hashOfConfig":"290"},{"size":3069,"mtime":1667373973809,"results":"448","hashOfConfig":"290"},{"size":1876,"mtime":1667373973731,"results":"449","hashOfConfig":"290"},{"size":3162,"mtime":1667373973755,"results":"450","hashOfConfig":"290"},{"size":2646,"mtime":1667373973808,"results":"451","hashOfConfig":"290"},{"size":6921,"mtime":1667669923844,"results":"452","hashOfConfig":"290"},{"size":3173,"mtime":1667373973766,"results":"453","hashOfConfig":"290"},{"size":3270,"mtime":1667373973752,"results":"454","hashOfConfig":"290"},{"size":4191,"mtime":1667373973784,"results":"455","hashOfConfig":"290"},{"size":2173,"mtime":1667378184569,"results":"456","hashOfConfig":"290"},{"size":671,"mtime":1667373973703,"results":"457","hashOfConfig":"290"},{"size":2133,"mtime":1667373973795,"results":"458","hashOfConfig":"290"},{"size":2085,"mtime":1667378184591,"results":"459","hashOfConfig":"290"},{"size":2036,"mtime":1667378184583,"results":"460","hashOfConfig":"290"},{"size":1535,"mtime":1667373973626,"results":"461","hashOfConfig":"290"},{"size":2415,"mtime":1667373973627,"results":"462","hashOfConfig":"290"},{"size":2087,"mtime":1667373973626,"results":"463","hashOfConfig":"290"},{"size":2216,"mtime":1667373973625,"results":"464","hashOfConfig":"290"},{"size":2736,"mtime":1667373973696,"results":"465","hashOfConfig":"290"},{"size":3611,"mtime":1667373973780,"results":"466","hashOfConfig":"290"},{"size":3059,"mtime":1667373973745,"results":"467","hashOfConfig":"290"},{"size":1723,"mtime":1667373973775,"results":"468","hashOfConfig":"290"},{"size":10141,"mtime":1667373973786,"results":"469","hashOfConfig":"290"},{"size":2976,"mtime":1667373973787,"results":"470","hashOfConfig":"290"},{"size":6922,"mtime":1667373973809,"results":"471","hashOfConfig":"290"},{"size":2461,"mtime":1667373973755,"results":"472","hashOfConfig":"290"},{"size":2482,"mtime":1667373973765,"results":"473","hashOfConfig":"290"},{"size":1684,"mtime":1667373973777,"results":"474","hashOfConfig":"290"},{"size":10568,"mtime":1667378184556,"results":"475","hashOfConfig":"290"},{"size":4743,"mtime":1667373973796,"results":"476","hashOfConfig":"290"},{"size":3195,"mtime":1667373973785,"results":"477","hashOfConfig":"290"},{"size":1695,"mtime":1667373973785,"results":"478","hashOfConfig":"290"},{"size":747,"mtime":1667373973775,"results":"479","hashOfConfig":"290"},{"size":474,"mtime":1667373973787,"results":"480","hashOfConfig":"290"},{"size":1860,"mtime":1667373973692,"results":"481","hashOfConfig":"290"},{"size":1496,"mtime":1667373973691,"results":"482","hashOfConfig":"290"},{"size":1802,"mtime":1667373973699,"results":"483","hashOfConfig":"290"},{"size":2681,"mtime":1667373973697,"results":"484","hashOfConfig":"290"},{"size":1156,"mtime":1667373973788,"results":"485","hashOfConfig":"290"},{"size":4188,"mtime":1667373973692,"results":"486","hashOfConfig":"290"},{"size":2337,"mtime":1667373973690,"results":"487","hashOfConfig":"290"},{"size":1435,"mtime":1667373973698,"results":"488","hashOfConfig":"290"},{"size":1851,"mtime":1667373973697,"results":"489","hashOfConfig":"290"},{"size":2313,"mtime":1667674770330,"results":"490","hashOfConfig":"290"},{"size":2983,"mtime":1667668866105,"results":"491","hashOfConfig":"290"},{"size":6230,"mtime":1667373973783,"results":"492","hashOfConfig":"290"},{"size":650,"mtime":1667670462071,"results":"493","hashOfConfig":"290"},{"size":1583,"mtime":1667378191239,"results":"494","hashOfConfig":"290"},{"size":4149,"mtime":1667674240996,"results":"495","hashOfConfig":"290"},{"size":824,"mtime":1667668856917,"results":"496","hashOfConfig":"290"},{"size":1557,"mtime":1667378184552,"results":"497","hashOfConfig":"290"},{"size":1476,"mtime":1667378184554,"results":"498","hashOfConfig":"290"},{"size":1502,"mtime":1667378184554,"results":"499","hashOfConfig":"290"},{"size":2143,"mtime":1667378184554,"results":"500","hashOfConfig":"290"},{"size":1409,"mtime":1667378184569,"results":"501","hashOfConfig":"290"},{"size":843,"mtime":1667378184592,"results":"502","hashOfConfig":"290"},{"size":670,"mtime":1667486015578,"results":"503","hashOfConfig":"290"},{"size":580,"mtime":1667378184585,"results":"504","hashOfConfig":"290"},{"size":604,"mtime":1667378184593,"results":"505","hashOfConfig":"290"},{"size":628,"mtime":1667378184557,"results":"506","hashOfConfig":"290"},{"size":953,"mtime":1667378184570,"results":"507","hashOfConfig":"290"},{"size":1826,"mtime":1667378184586,"results":"508","hashOfConfig":"290"},{"size":3493,"mtime":1667378184577,"results":"509","hashOfConfig":"290"},{"size":3365,"mtime":1667378184558,"results":"510","hashOfConfig":"290"},{"size":2201,"mtime":1667378184571,"results":"511","hashOfConfig":"290"},{"size":1464,"mtime":1667378184575,"results":"512","hashOfConfig":"290"},{"size":1464,"mtime":1667378184592,"results":"513","hashOfConfig":"290"},{"size":1702,"mtime":1667378184592,"results":"514","hashOfConfig":"290"},{"size":275,"mtime":1667378184550,"results":"515","hashOfConfig":"290"},{"size":2819,"mtime":1667378184585,"results":"516","hashOfConfig":"290"},{"size":3166,"mtime":1667378184557,"results":"517","hashOfConfig":"290"},{"size":1949,"mtime":1667378184591,"results":"518","hashOfConfig":"290"},{"size":584,"mtime":1667378184551,"results":"519","hashOfConfig":"290"},{"size":1786,"mtime":1667378184583,"results":"520","hashOfConfig":"290"},{"size":1955,"mtime":1667378184562,"results":"521","hashOfConfig":"290"},{"size":2577,"mtime":1667378184587,"results":"522","hashOfConfig":"290"},{"size":5001,"mtime":1667378184588,"results":"523","hashOfConfig":"290"},{"size":2519,"mtime":1667378184587,"results":"524","hashOfConfig":"290"},{"size":3220,"mtime":1667378184589,"results":"525","hashOfConfig":"290"},{"size":138,"mtime":1667378184580,"results":"526","hashOfConfig":"290"},{"size":2108,"mtime":1667378184580,"results":"527","hashOfConfig":"290"},{"size":1681,"mtime":1667378184561,"results":"528","hashOfConfig":"290"},{"size":780,"mtime":1667378184559,"results":"529","hashOfConfig":"290"},{"size":1889,"mtime":1667378184559,"results":"530","hashOfConfig":"290"},{"size":1766,"mtime":1667378184560,"results":"531","hashOfConfig":"290"},{"size":418,"mtime":1667728157842,"results":"532","hashOfConfig":"290"},{"size":529,"mtime":1667378184549,"results":"533","hashOfConfig":"290"},{"size":767,"mtime":1667670909397,"results":"534","hashOfConfig":"290"},{"size":571,"mtime":1667378184572,"results":"535","hashOfConfig":"290"},{"size":240,"mtime":1667378184590,"results":"536","hashOfConfig":"290"},{"size":300,"mtime":1667378184581,"results":"537","hashOfConfig":"290"},{"size":450,"mtime":1667378184568,"results":"538","hashOfConfig":"290"},{"size":781,"mtime":1667378184578,"results":"539","hashOfConfig":"290"},{"size":1754,"mtime":1667378184578,"results":"540","hashOfConfig":"290"},{"size":2353,"mtime":1667378184579,"results":"541","hashOfConfig":"290"},{"size":1719,"mtime":1667378184590,"results":"542","hashOfConfig":"290"},{"size":559,"mtime":1667378184590,"results":"543","hashOfConfig":"290"},{"size":418,"mtime":1667378184589,"results":"544","hashOfConfig":"290"},{"size":413,"mtime":1667378184590,"results":"545","hashOfConfig":"290"},{"size":601,"mtime":1667378184580,"results":"546","hashOfConfig":"290"},{"size":413,"mtime":1667378184581,"results":"547","hashOfConfig":"290"},{"size":559,"mtime":1667378184581,"results":"548","hashOfConfig":"290"},{"size":375,"mtime":1667378184582,"results":"549","hashOfConfig":"290"},{"size":214,"mtime":1667378184582,"results":"550","hashOfConfig":"290"},{"size":286,"mtime":1667378184564,"results":"551","hashOfConfig":"290"},{"size":630,"mtime":1667378184565,"results":"552","hashOfConfig":"290"},{"size":225,"mtime":1667378184564,"results":"553","hashOfConfig":"290"},{"size":479,"mtime":1667378184563,"results":"554","hashOfConfig":"290"},{"size":898,"mtime":1667378184567,"results":"555","hashOfConfig":"290"},{"size":228,"mtime":1667378184567,"results":"556","hashOfConfig":"290"},{"size":223,"mtime":1667378184565,"results":"557","hashOfConfig":"290"},{"size":6654,"mtime":1667675257278,"results":"558","hashOfConfig":"290"},{"size":555,"mtime":1667378191282,"results":"559","hashOfConfig":"290"},{"size":2799,"mtime":1667668831702,"results":"560","hashOfConfig":"290"},{"size":2222,"mtime":1667664328907,"results":"561","hashOfConfig":"290"},{"size":4970,"mtime":1667675493670,"results":"562","hashOfConfig":"290"},{"size":2248,"mtime":1667672699519,"results":"563","hashOfConfig":"290"},{"size":1873,"mtime":1667722536095,"results":"564","hashOfConfig":"290"},{"size":649,"mtime":1667717709470,"results":"565","hashOfConfig":"290"},{"size":117,"mtime":1667717720604,"results":"566","hashOfConfig":"290"},{"size":2262,"mtime":1667719915972,"results":"567","hashOfConfig":"290"},{"size":4075,"mtime":1667756357318,"results":"568","hashOfConfig":"290"},{"size":2983,"mtime":1667668866105,"results":"569","hashOfConfig":"290"},{"size":571,"mtime":1667378184572,"results":"570","hashOfConfig":"290"},{"size":824,"mtime":1667668856917,"results":"571","hashOfConfig":"290"},{"size":1077,"mtime":1667761478057,"results":"572","hashOfConfig":"290"},{"size":1610,"mtime":1667736172872,"results":"573","hashOfConfig":"290"},{"size":2281,"mtime":1667751751241,"results":"574","hashOfConfig":"290"},{"size":5654,"mtime":1667750710857,"results":"575","hashOfConfig":"290"},{"size":2025,"mtime":1667750608310,"results":"576","hashOfConfig":"290"},{"size":4115,"mtime":1667761202024,"results":"577","hashOfConfig":"290"},{"filePath":"578","messages":"579","suppressedMessages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},"jh7xc4",{"filePath":"582","messages":"583","suppressedMessages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"585","messages":"586","suppressedMessages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"594","messages":"595","suppressedMessages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"597","messages":"598","suppressedMessages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"600","messages":"601","suppressedMessages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"581"},{"filePath":"607","messages":"608","suppressedMessages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"610","messages":"611","suppressedMessages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"613","messages":"614","suppressedMessages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"616","messages":"617","suppressedMessages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"619","messages":"620","suppressedMessages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"622","messages":"623","suppressedMessages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"625","messages":"626","suppressedMessages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"628","messages":"629","suppressedMessages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"631","messages":"632","suppressedMessages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"634","messages":"635","suppressedMessages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"637","messages":"638","suppressedMessages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"640","messages":"641","suppressedMessages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"643","messages":"644","suppressedMessages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"646","messages":"647","suppressedMessages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"649","messages":"650","suppressedMessages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"652","messages":"653","suppressedMessages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"655","messages":"656","suppressedMessages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"658","messages":"659","suppressedMessages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"661","messages":"662","suppressedMessages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"664","messages":"665","suppressedMessages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"667","messages":"668","suppressedMessages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"670","messages":"671","suppressedMessages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"673","messages":"674","suppressedMessages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"676","messages":"677","suppressedMessages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"679","messages":"680","suppressedMessages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"682","messages":"683","suppressedMessages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"685","messages":"686","suppressedMessages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"688","messages":"689","suppressedMessages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"691","messages":"692","suppressedMessages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"694","messages":"695","suppressedMessages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"697","messages":"698","suppressedMessages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"700","messages":"701","suppressedMessages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"703","messages":"704","suppressedMessages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"706","messages":"707","suppressedMessages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"709","messages":"710","suppressedMessages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"712","messages":"713","suppressedMessages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"715","messages":"716","suppressedMessages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"718","messages":"719","suppressedMessages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"721","messages":"722","suppressedMessages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"724","messages":"725","suppressedMessages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"727","messages":"728","suppressedMessages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"730","messages":"731","suppressedMessages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"733","messages":"734","suppressedMessages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"736","messages":"737","suppressedMessages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"739","messages":"740","suppressedMessages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"742","messages":"743","suppressedMessages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"745","messages":"746","suppressedMessages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"748","messages":"749","suppressedMessages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"751","messages":"752","suppressedMessages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"754","messages":"755","suppressedMessages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"757","messages":"758","suppressedMessages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"760","messages":"761","suppressedMessages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"763","messages":"764","suppressedMessages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"766","messages":"767","suppressedMessages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"769","messages":"770","suppressedMessages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"772","messages":"773","suppressedMessages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"775","messages":"776","suppressedMessages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"778","messages":"779","suppressedMessages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"781","messages":"782","suppressedMessages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"784","messages":"785","suppressedMessages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"787","messages":"788","suppressedMessages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"790","messages":"791","suppressedMessages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"793","messages":"794","suppressedMessages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"796","messages":"797","suppressedMessages":"798","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"799","messages":"800","suppressedMessages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"802","messages":"803","suppressedMessages":"804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"805","messages":"806","suppressedMessages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"808","messages":"809","suppressedMessages":"810","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"811","messages":"812","suppressedMessages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"814","messages":"815","suppressedMessages":"816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"817","messages":"818","suppressedMessages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820","usedDeprecatedRules":"581"},{"filePath":"821","messages":"822","suppressedMessages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"824","messages":"825","suppressedMessages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"827","messages":"828","suppressedMessages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"830","messages":"831","suppressedMessages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"833","messages":"834","suppressedMessages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"581"},{"filePath":"837","messages":"838","suppressedMessages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"840","messages":"841","suppressedMessages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"843","messages":"844","suppressedMessages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"846","messages":"847","suppressedMessages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"849","messages":"850","suppressedMessages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"852","messages":"853","suppressedMessages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"855","messages":"856","suppressedMessages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"858","messages":"859","suppressedMessages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"861","messages":"862","suppressedMessages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"864","messages":"865","suppressedMessages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"867","messages":"868","suppressedMessages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"870","messages":"871","suppressedMessages":"872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"873","messages":"874","suppressedMessages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"876","messages":"877","suppressedMessages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"879","messages":"880","suppressedMessages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"882","messages":"883","suppressedMessages":"884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"885","messages":"886","suppressedMessages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"888","messages":"889","suppressedMessages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"891","messages":"892","suppressedMessages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"894","messages":"895","suppressedMessages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"897","messages":"898","suppressedMessages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"900","messages":"901","suppressedMessages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"903","messages":"904","suppressedMessages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"906","messages":"907","suppressedMessages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"909","messages":"910","suppressedMessages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"912","messages":"913","suppressedMessages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"915","messages":"916","suppressedMessages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"918","messages":"919","suppressedMessages":"920","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"921","messages":"922","suppressedMessages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"924","messages":"925","suppressedMessages":"926","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"927","messages":"928","suppressedMessages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"930","messages":"931","suppressedMessages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"933","messages":"934","suppressedMessages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"936","messages":"937","suppressedMessages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"939","messages":"940","suppressedMessages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"942","messages":"943","suppressedMessages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"945","messages":"946","suppressedMessages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"948","messages":"949","suppressedMessages":"950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"951","messages":"952","suppressedMessages":"953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"954","messages":"955","suppressedMessages":"956","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"957","messages":"958","suppressedMessages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"960","messages":"961","suppressedMessages":"962","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"963","messages":"964","suppressedMessages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"966","messages":"967","suppressedMessages":"968","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"969","messages":"970","suppressedMessages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"972","messages":"973","suppressedMessages":"974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"975","messages":"976","suppressedMessages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"978","messages":"979","suppressedMessages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"981","messages":"982","suppressedMessages":"983","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"984","messages":"985","suppressedMessages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"987","messages":"988","suppressedMessages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"990","messages":"991","suppressedMessages":"992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"993","messages":"994","suppressedMessages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"996","messages":"997","suppressedMessages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"999","messages":"1000","suppressedMessages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1002","messages":"1003","suppressedMessages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1005","messages":"1006","suppressedMessages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1008","messages":"1009","suppressedMessages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1011","messages":"1012","suppressedMessages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1014","messages":"1015","suppressedMessages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1017","messages":"1018","suppressedMessages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1020","usedDeprecatedRules":"581"},{"filePath":"1021","messages":"1022","suppressedMessages":"1023","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1024","usedDeprecatedRules":"581"},{"filePath":"1025","messages":"1026","suppressedMessages":"1027","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1028","messages":"1029","suppressedMessages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1031","messages":"1032","suppressedMessages":"1033","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1034","messages":"1035","suppressedMessages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1037","messages":"1038","suppressedMessages":"1039","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1040","messages":"1041","suppressedMessages":"1042","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1043","messages":"1044","suppressedMessages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1046","messages":"1047","suppressedMessages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1049","usedDeprecatedRules":"581"},{"filePath":"1050","messages":"1051","suppressedMessages":"1052","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1053","messages":"1054","suppressedMessages":"1055","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1056","messages":"1057","suppressedMessages":"1058","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1059","messages":"1060","suppressedMessages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1062","messages":"1063","suppressedMessages":"1064","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1049","usedDeprecatedRules":"581"},{"filePath":"1065","messages":"1066","suppressedMessages":"1067","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1068","usedDeprecatedRules":"581"},{"filePath":"1069","messages":"1070","suppressedMessages":"1071","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1072","messages":"1073","suppressedMessages":"1074","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1075","messages":"1076","suppressedMessages":"1077","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1078","usedDeprecatedRules":"581"},{"filePath":"1079","messages":"1080","suppressedMessages":"1081","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1082","messages":"1083","suppressedMessages":"1084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1085","messages":"1086","suppressedMessages":"1087","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1088","usedDeprecatedRules":"581"},{"filePath":"1089","messages":"1090","suppressedMessages":"1091","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1092","messages":"1093","suppressedMessages":"1094","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1095","messages":"1096","suppressedMessages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1098","usedDeprecatedRules":"581"},{"filePath":"1099","messages":"1100","suppressedMessages":"1101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1102","usedDeprecatedRules":"581"},{"filePath":"1103","messages":"1104","suppressedMessages":"1105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1106","messages":"1107","suppressedMessages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1109","messages":"1110","suppressedMessages":"1111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1112","messages":"1113","suppressedMessages":"1114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1115","messages":"1116","suppressedMessages":"1117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1118","messages":"1119","suppressedMessages":"1120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1121","messages":"1122","suppressedMessages":"1123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1124","messages":"1125","suppressedMessages":"1126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1127","messages":"1128","suppressedMessages":"1129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1130","usedDeprecatedRules":"581"},{"filePath":"1131","messages":"1132","suppressedMessages":"1133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1134","messages":"1135","suppressedMessages":"1136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1137","messages":"1138","suppressedMessages":"1139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1140","messages":"1141","suppressedMessages":"1142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1143","messages":"1144","suppressedMessages":"1145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1146","usedDeprecatedRules":"581"},{"filePath":"1147","messages":"1148","suppressedMessages":"1149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1150","usedDeprecatedRules":"581"},{"filePath":"1151","messages":"1152","suppressedMessages":"1153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1154","messages":"1155","suppressedMessages":"1156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1157","messages":"1158","suppressedMessages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1160","messages":"1161","suppressedMessages":"1162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1163","messages":"1164","suppressedMessages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1166","messages":"1167","suppressedMessages":"1168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1169","messages":"1170","suppressedMessages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1172","messages":"1173","suppressedMessages":"1174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1175","messages":"1176","suppressedMessages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1178","messages":"1179","suppressedMessages":"1180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1181","messages":"1182","suppressedMessages":"1183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1184","messages":"1185","suppressedMessages":"1186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1187","messages":"1188","suppressedMessages":"1189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1190","messages":"1191","suppressedMessages":"1192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1193","messages":"1194","suppressedMessages":"1195","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1196","usedDeprecatedRules":"581"},{"filePath":"1197","messages":"1198","suppressedMessages":"1199","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1200","usedDeprecatedRules":"581"},{"filePath":"1201","messages":"1202","suppressedMessages":"1203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1204","messages":"1205","suppressedMessages":"1206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1207","messages":"1208","suppressedMessages":"1209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1210","usedDeprecatedRules":"581"},{"filePath":"1211","messages":"1212","suppressedMessages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214","usedDeprecatedRules":"581"},{"filePath":"1215","messages":"1216","suppressedMessages":"1217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1218","messages":"1219","suppressedMessages":"1220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1221","usedDeprecatedRules":"581"},{"filePath":"1222","messages":"1223","suppressedMessages":"1224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1225","usedDeprecatedRules":"581"},{"filePath":"1226","messages":"1227","suppressedMessages":"1228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1229","usedDeprecatedRules":"581"},{"filePath":"1230","messages":"1231","suppressedMessages":"1232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1233","usedDeprecatedRules":"581"},{"filePath":"1234","messages":"1235","suppressedMessages":"1236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1237","messages":"1238","suppressedMessages":"1239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1240","messages":"1241","suppressedMessages":"1242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1243","messages":"1244","suppressedMessages":"1245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1246","messages":"1247","suppressedMessages":"1248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1249","messages":"1250","suppressedMessages":"1251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1252","messages":"1253","suppressedMessages":"1254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1255","messages":"1256","suppressedMessages":"1257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1258","usedDeprecatedRules":"581"},{"filePath":"1259","messages":"1260","suppressedMessages":"1261","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1262","usedDeprecatedRules":"581"},{"filePath":"1263","messages":"1264","suppressedMessages":"1265","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"581"},{"filePath":"1267","messages":"1268","suppressedMessages":"1269","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1270","usedDeprecatedRules":"581"},{"filePath":"1271","messages":"1272","suppressedMessages":"1273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1274","messages":"1275","suppressedMessages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1277","messages":"1278","suppressedMessages":"1279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1280","messages":"1281","suppressedMessages":"1282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1283","messages":"1284","suppressedMessages":"1285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1286","messages":"1287","suppressedMessages":"1288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1289","messages":"1290","suppressedMessages":"1291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1292","messages":"1293","suppressedMessages":"1294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1295","messages":"1296","suppressedMessages":"1297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1298","messages":"1299","suppressedMessages":"1300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1301","messages":"1302","suppressedMessages":"1303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1304","messages":"1305","suppressedMessages":"1306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1307","messages":"1308","suppressedMessages":"1309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1310","messages":"1311","suppressedMessages":"1312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1313","messages":"1314","suppressedMessages":"1315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1316","messages":"1317","suppressedMessages":"1318","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1319","usedDeprecatedRules":"581"},{"filePath":"1320","messages":"1321","suppressedMessages":"1322","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1323","usedDeprecatedRules":"581"},{"filePath":"1324","messages":"1325","suppressedMessages":"1326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1327","messages":"1328","suppressedMessages":"1329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1330","messages":"1331","suppressedMessages":"1332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1333","messages":"1334","suppressedMessages":"1335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1336","messages":"1337","suppressedMessages":"1338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1339","messages":"1340","suppressedMessages":"1341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1342","messages":"1343","suppressedMessages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1345","messages":"1346","suppressedMessages":"1347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1348","messages":"1349","suppressedMessages":"1350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1351","messages":"1352","suppressedMessages":"1353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1354","messages":"1355","suppressedMessages":"1356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1357","messages":"1358","suppressedMessages":"1359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1360","messages":"1361","suppressedMessages":"1362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1363","messages":"1364","suppressedMessages":"1365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1366","messages":"1367","suppressedMessages":"1368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1369","messages":"1370","suppressedMessages":"1371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1372","messages":"1373","suppressedMessages":"1374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1375","messages":"1376","suppressedMessages":"1377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1378","messages":"1379","suppressedMessages":"1380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1381","messages":"1382","suppressedMessages":"1383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1384","messages":"1385","suppressedMessages":"1386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1387","usedDeprecatedRules":"581"},{"filePath":"1388","messages":"1389","suppressedMessages":"1390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1391","messages":"1392","suppressedMessages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1394","messages":"1395","suppressedMessages":"1396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1397","messages":"1398","suppressedMessages":"1399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1400","messages":"1401","suppressedMessages":"1402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1403","messages":"1404","suppressedMessages":"1405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1406","messages":"1407","suppressedMessages":"1408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1409","messages":"1410","suppressedMessages":"1411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1412","messages":"1413","suppressedMessages":"1414","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1415","usedDeprecatedRules":"581"},{"filePath":"1416","messages":"1417","suppressedMessages":"1418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1419","messages":"1420","suppressedMessages":"1421","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1422","usedDeprecatedRules":"581"},{"filePath":"1423","messages":"1424","suppressedMessages":"1425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1426","messages":"1427","suppressedMessages":"1428","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1429","usedDeprecatedRules":"581"},{"filePath":"1430","messages":"1431","suppressedMessages":"1432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1433","messages":"1434","suppressedMessages":"1435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1436","messages":"1437","suppressedMessages":"1438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1439","messages":"1440","suppressedMessages":"1441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1442","messages":"1443","suppressedMessages":"1444","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1445","usedDeprecatedRules":"581"},{"filePath":"1446","messages":"1447","suppressedMessages":"1448","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1449","usedDeprecatedRules":"581"},{"filePath":"1450","messages":"1451","suppressedMessages":"1452","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1200","usedDeprecatedRules":"581"},{"filePath":"1453","messages":"1454","suppressedMessages":"1455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1456","messages":"1457","suppressedMessages":"1458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"581"},{"filePath":"1459","messages":"1460","suppressedMessages":"1461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1462","messages":"1463","suppressedMessages":"1464","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1465","usedDeprecatedRules":"581"},{"filePath":"1466","messages":"1467","suppressedMessages":"1468","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1469","usedDeprecatedRules":"581"},{"filePath":"1470","messages":"1471","suppressedMessages":"1472","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1473","usedDeprecatedRules":"581"},{"filePath":"1474","messages":"1475","suppressedMessages":"1476","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1477","usedDeprecatedRules":"581"},{"filePath":"1478","messages":"1479","suppressedMessages":"1480","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1481","usedDeprecatedRules":"581"},"D:\\project ardhi\\getfit-admin\\src\\index.js",[],[],[],"D:\\project ardhi\\getfit-admin\\src\\App.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\context\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\routes.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Configurator\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDBox\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\extend\\Sidenav\\index.js",["1482"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useEffect } from \"react\";\r\n\r\n// react-router-dom components\r\nimport { useLocation, NavLink } from \"react-router-dom\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport List from \"@mui/material/List\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport SidenavCollapse from \"examples/Sidenav/SidenavCollapse\";\r\n\r\n// Custom styles for the Sidenav\r\nimport SidenavRoot from \"examples/Sidenav/SidenavRoot\";\r\nimport sidenavLogoLabel from \"examples/Sidenav/styles/sidenav\";\r\n\r\n// Material Dashboard 2 React context\r\nimport {\r\n  useMaterialUIController,\r\n  setMiniSidenav,\r\n  setTransparentSidenav,\r\n  setWhiteSidenav,\r\n} from \"context\";\r\n\r\nfunction Sidenav({ color, brand, brandName, routes, ...rest }) {\r\n  const [controller, dispatch] = useMaterialUIController();\r\n  const { miniSidenav, transparentSidenav, whiteSidenav, darkMode } = controller;\r\n  const location = useLocation();\r\n  const collapseName = location.pathname.replace(\"/\", \"\");\r\n\r\n  let textColor = \"white\";\r\n\r\n  if (transparentSidenav || (whiteSidenav && !darkMode)) {\r\n    textColor = \"dark\";\r\n  } else if (whiteSidenav && darkMode) {\r\n    textColor = \"inherit\";\r\n  }\r\n\r\n  const closeSidenav = () => setMiniSidenav(dispatch, true);\r\n\r\n  useEffect(() => {\r\n    // A function that sets the mini state of the sidenav.\r\n    function handleMiniSidenav() {\r\n      setMiniSidenav(dispatch, window.innerWidth < 1200);\r\n      setTransparentSidenav(dispatch, window.innerWidth < 1200 ? false : transparentSidenav);\r\n      setWhiteSidenav(dispatch, window.innerWidth < 1200 ? false : whiteSidenav);\r\n    }\r\n\r\n    /** \r\n     The event listener that's calling the handleMiniSidenav function when resizing the window.\r\n    */\r\n    window.addEventListener(\"resize\", handleMiniSidenav);\r\n\r\n    // Call the handleMiniSidenav function to set the state with the initial value.\r\n    handleMiniSidenav();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleMiniSidenav);\r\n  }, [dispatch, location]);\r\n\r\n  // Render all the routes from the routes.js (All the visible items on the Sidenav)\r\n  const renderRoutes = routes.map(({ type, name, icon, title, noCollapse, key, href, route, main_route }) => {\r\n    let returnValue;\r\n\r\n    if (type === \"collapse\") {\r\n      returnValue = href ? (\r\n        <Link\r\n          href={href}\r\n          key={key}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          sx={{ textDecoration: \"none\" }}\r\n        >\r\n          <SidenavCollapse\r\n            name={name}\r\n            icon={icon}\r\n            active={key === collapseName}\r\n            noCollapse={noCollapse}\r\n          />\r\n        </Link>\r\n      ) : (\r\n        <NavLink key={key} to={main_route}>\r\n          <SidenavCollapse name={name} icon={icon} active={key === collapseName} />\r\n        </NavLink>\r\n      );\r\n    } else if (type === \"title\") {\r\n      returnValue = (\r\n        <MDTypography\r\n          key={key}\r\n          color={textColor}\r\n          display=\"block\"\r\n          variant=\"caption\"\r\n          fontWeight=\"bold\"\r\n          textTransform=\"uppercase\"\r\n          pl={3}\r\n          mt={2}\r\n          mb={1}\r\n          ml={1}\r\n        >\r\n          {title}\r\n        </MDTypography>\r\n      );\r\n    } else if (type === \"divider\") {\r\n      returnValue = (\r\n        <Divider\r\n          key={key}\r\n          light={\r\n            (!darkMode && !whiteSidenav && !transparentSidenav) ||\r\n            (darkMode && !transparentSidenav && whiteSidenav)\r\n          }\r\n        />\r\n      );\r\n    }\r\n\r\n    return returnValue;\r\n  });\r\n\r\n  return (\r\n    <SidenavRoot\r\n      {...rest}\r\n      variant=\"permanent\"\r\n      ownerState={{ transparentSidenav, whiteSidenav, miniSidenav, darkMode }}\r\n    >\r\n      <MDBox pt={3} pb={1} px={4} textAlign=\"center\">\r\n        <MDBox\r\n          display={{ xs: \"block\", xl: \"none\" }}\r\n          position=\"absolute\"\r\n          top={0}\r\n          right={0}\r\n          p={1.625}\r\n          onClick={closeSidenav}\r\n          sx={{ cursor: \"pointer\" }}\r\n        >\r\n          <MDTypography variant=\"h6\" color=\"secondary\">\r\n            <Icon sx={{ fontWeight: \"bold\" }}>close</Icon>\r\n          </MDTypography>\r\n        </MDBox>\r\n        <MDBox component={NavLink} to=\"/\" display=\"flex\" alignItems=\"center\">\r\n          {brand && <MDBox component=\"img\" src={brand} alt=\"Brand\" width=\"2rem\" />}\r\n          <MDBox\r\n            width={!brandName && \"100%\"}\r\n            sx={(theme) => sidenavLogoLabel(theme, { miniSidenav })}\r\n          >\r\n            <MDTypography component=\"h6\" variant=\"button\" fontWeight=\"medium\" color={textColor}>\r\n              {brandName}\r\n            </MDTypography>\r\n          </MDBox>\r\n        </MDBox>\r\n      </MDBox>\r\n      <Divider\r\n        light={\r\n          (!darkMode && !whiteSidenav && !transparentSidenav) ||\r\n          (darkMode && !transparentSidenav && whiteSidenav)\r\n        }\r\n      />\r\n      <List>{renderRoutes}</List>\r\n    </SidenavRoot>\r\n  );\r\n}\r\n\r\n// Setting default values for the props of Sidenav\r\nSidenav.defaultProps = {\r\n  color: \"info\",\r\n  brand: \"\",\r\n};\r\n\r\n// Typechecking props for the Sidenav\r\nSidenav.propTypes = {\r\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\r\n  brand: PropTypes.string,\r\n  brandName: PropTypes.string.isRequired,\r\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Sidenav;\r\n","D:\\project ardhi\\getfit-admin\\src\\redux\\store.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\breakpoints.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\colors.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\globals.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\boxShadows.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\borders.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\base\\typography.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\functions\\boxShadow.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\functions\\hexToRgb.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\functions\\rgba.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\functions\\pxToRem.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\iconButton.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\divider.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\linearProgress.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\sidenav.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\functions\\linearGradient.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\breadcrumbs.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\tooltip.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\slider.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\avatar.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\appBar.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\container.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\popover.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\buttonBase.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\icon.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\svgIcon.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\link.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\card\\cardMedia.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\list\\listItem.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\card\\cardContent.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\list\\listItemText.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\inputLabel.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\input.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\inputOutlined.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\switchButton.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\textField.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\select.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\formControlLabel.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\RoutesValidation.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\checkbox.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\formLabel.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\radio.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\table\\tableHead.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\form\\autocomplete.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\tabs\\tab.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\table\\tableContainer.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\table\\tableCell.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\menu\\menuItem.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\typography.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\breakpoints.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\colors.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\boxShadows.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\stepper\\step.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\dialog\\dialogTitle.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\stepper\\stepIcon.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\stepper\\stepConnector.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\dialog\\dialogContentText.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\dialog\\dialogContent.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\dialog\\dialogActions.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\stepper\\stepLabel.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\borders.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\base\\globals.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\functions\\linearGradient.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\functions\\boxShadow.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\functions\\hexToRgb.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\functions\\pxToRem.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\functions\\rgba.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\sidenav.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\iconButton.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\index.jsx",["1483","1484","1485","1486"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport DashboardLayout from \"components/extend/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"components/extend/Navbars/DashboardNavbar\";\r\nimport Footer from \"components/extend/Footer\";\r\nimport MDButton from \"components/MDButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListTableMedicalRecord from \"./components/ListTableMedicalRecord\";\r\nimport DetailMedicalRecord from \"./components/DetailMedicalRecord\";\r\nimport CreateMedicalRecord from \"./components/CreateMedicalRecord\";\r\nimport { Routes, Route, useLocation } from \"react-router-dom\";\r\nimport { MedicalRecordUIProvider } from \"./medicalRecordUIContext\";\r\n\r\nfunction MedicalRecord() {\r\n  let location = useLocation();\r\n  return (\r\n    <DashboardLayout>\r\n      <MedicalRecordUIProvider>\r\n        <DashboardNavbar />\r\n        <MDBox pt={6} pb={3}>\r\n          <Grid container spacing={6}>\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <Routes>\r\n                  <Route path=\"list-medical-record\" element={<ListTableMedicalRecord />} />\r\n                  <Route path=\"create\" element={<CreateMedicalRecord />} />\r\n                  <Route path=\":id\" element={<DetailMedicalRecord />} />\r\n                </Routes>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </MDBox>\r\n        <Footer />\r\n      </MedicalRecordUIProvider>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default MedicalRecord;\r\n","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\list\\listItemText.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\card\\cardContent.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\card\\cardMedia.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\list\\listItem.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\authentication\\sign-in\\index.js",["1487"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// react-router-dom components\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Switch from \"@mui/material/Switch\";\r\n// import Grid from \"@mui/material/Grid\";\r\n// import MuiLink from \"@mui/material/Link\";\r\n\r\n// @mui icons\r\n// import FacebookIcon from \"@mui/icons-material/Facebook\";\r\n// import GitHubIcon from \"@mui/icons-material/GitHub\";\r\n// import GoogleIcon from \"@mui/icons-material/Google\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDInput from \"components/MDInput\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\n// Authentication layout components\r\nimport BasicLayout from \"layouts/authentication/components/BasicLayout\";\r\n\r\n// Images\r\n\r\nimport bgImage from \"assets/images/bg-sign-in-basic.jpeg\";\r\nimport * as actions from \"./action/userAction\";\r\n\r\nimport { useFormik } from \"formik\";\r\n\r\nfunction Basic() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.signIn.user);\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const navigate = useNavigate();\r\n  const handleSetRememberMe = () => setRememberMe(!rememberMe);\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [user]);\r\n\r\n  const login = (values) => {\r\n    dispatch(actions.loginUser({ email: values.email, password: values.password }));\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      login(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <BasicLayout image={bgImage}>\r\n      <Card>\r\n        <MDBox\r\n          variant=\"gradient\"\r\n          bgColor=\"info\"\r\n          borderRadius=\"lg\"\r\n          coloredShadow=\"info\"\r\n          mx={2}\r\n          mt={-3}\r\n          p={2}\r\n          mb={1}\r\n          textAlign=\"center\"\r\n        >\r\n          <MDTypography variant=\"h4\" fontWeight=\"medium\" color=\"white\" mt={1}>\r\n            Sign in\r\n          </MDTypography>\r\n          {/* <Grid container spacing={3} justifyContent=\"center\" sx={{ mt: 1, mb: 2 }}>\r\n            <Grid item xs={2}>\r\n              <MDTypography component={MuiLink} href=\"#\" variant=\"body1\" color=\"white\">\r\n                <FacebookIcon color=\"inherit\" />\r\n              </MDTypography>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <MDTypography component={MuiLink} href=\"#\" variant=\"body1\" color=\"white\">\r\n                <GitHubIcon color=\"inherit\" />\r\n              </MDTypography>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <MDTypography component={MuiLink} href=\"#\" variant=\"body1\" color=\"white\">\r\n                <GoogleIcon color=\"inherit\" />\r\n              </MDTypography>\r\n            </Grid>\r\n          </Grid> */}\r\n        </MDBox>\r\n        <MDBox pt={4} pb={3} px={3}>\r\n          <MDBox component=\"form\" role=\"form\" onSubmit={formik.handleSubmit}>\r\n            <MDBox mb={2}>\r\n              <MDInput\r\n                type=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                fullWidth\r\n                {...formik.getFieldProps(\"email\")}\r\n              />\r\n            </MDBox>\r\n            <MDBox mb={2}>\r\n              <MDInput\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                fullWidth\r\n                {...formik.getFieldProps(\"password\")}\r\n              />\r\n            </MDBox>\r\n            <MDBox display=\"flex\" alignItems=\"center\" ml={-1}>\r\n              <Switch checked={rememberMe} onChange={handleSetRememberMe} />\r\n              <MDTypography\r\n                variant=\"button\"\r\n                fontWeight=\"regular\"\r\n                color=\"text\"\r\n                onClick={handleSetRememberMe}\r\n                sx={{ cursor: \"pointer\", userSelect: \"none\", ml: -1 }}\r\n              >\r\n                &nbsp;&nbsp;Remember me\r\n              </MDTypography>\r\n            </MDBox>\r\n            <MDBox mt={4} mb={1}>\r\n              <MDButton type=\"submit\" variant=\"gradient\" color=\"info\" fullWidth>\r\n                sign in\r\n              </MDButton>\r\n            </MDBox>\r\n            {/* <MDBox mt={3} mb={1} textAlign=\"center\">\r\n              <MDTypography variant=\"button\" color=\"text\">\r\n                Don&apos;t have an account?{\" \"}\r\n                <MDTypography\r\n                  component={Link}\r\n                  to=\"/authentication/sign-up\"\r\n                  variant=\"button\"\r\n                  color=\"info\"\r\n                  fontWeight=\"medium\"\r\n                  textGradient\r\n                >\r\n                  Sign up\r\n                </MDTypography>\r\n              </MDTypography>\r\n            </MDBox> */}\r\n          </MDBox>\r\n        </MDBox>\r\n      </Card>\r\n    </BasicLayout>\r\n  );\r\n}\r\n\r\nexport default Basic;\r\n","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\inputOutlined.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\input.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\textField.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\inputLabel.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\breadcrumbs.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\divider.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\slider.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\avatar.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\appBar.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\tooltip.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\linearProgress.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\container.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\popover.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\buttonBase.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\list\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\menu\\menuItem.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\card\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\tabs\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\menu\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\stepper\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\formControlLabel.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\dialog\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\switchButton.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\formLabel.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\select.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\button\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\checkbox.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\table\\tableContainer.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\table\\tableHead.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\svgIcon.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\link.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\icon.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Configurator\\ConfiguratorRoot.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDBox\\MDBoxRoot.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Sidenav\\SidenavRoot.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Sidenav\\SidenavCollapse.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\radio.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\table\\tableCell.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\card\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\form\\autocomplete.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\stepper\\step.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\list\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\menu\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\stepper\\stepConnector.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\stepper\\stepLabel.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\stepper\\stepIcon.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDButton\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDTypography\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\tabs\\tab.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\dialog\\dialogContent.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\dialog\\dialogTitle.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\button\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\stepper\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\dialog\\dialogContentText.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\dialog\\dialogActions.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\tabs\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\dialog\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Sidenav\\styles\\sidenav.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\helpers\\LocalStorageHelpers.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\data\\reportsBarChartData.js",["1488"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nexport default {\r\n  labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\r\n  datasets: { label: \"Sales\", data: [50, 20, 10, 22, 50, 10, 40] },\r\n};\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\data\\reportsLineChartData.js",["1489"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nexport default {\r\n  sales: {\r\n    labels: [\"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    datasets: { label: \"Mobile apps\", data: [50, 40, 300, 320, 500, 350, 200, 230, 500] },\r\n  },\r\n  tasks: {\r\n    labels: [\"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    datasets: { label: \"Desktop apps\", data: [50, 40, 300, 220, 500, 250, 400, 230, 500] },\r\n  },\r\n};\r\n","D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\button\\outlined.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\button\\root.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Footer\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\button\\contained.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme\\components\\button\\text.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\extend\\Footer\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Navbars\\DashboardNavbar\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\LayoutContainers\\DashboardLayout\\index.js",["1490"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useEffect } from \"react\";\r\n\r\n// react-router-dom components\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\n\r\n// Material Dashboard 2 React context\r\nimport { useMaterialUIController, setLayout } from \"context\";\r\n\r\nfunction DashboardLayout({ children }) {\r\n  const [controller, dispatch] = useMaterialUIController();\r\n  const { miniSidenav } = controller;\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    setLayout(dispatch, \"dashboard\");\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <MDBox\r\n      sx={({ breakpoints, transitions, functions: { pxToRem } }) => ({\r\n        p: 3,\r\n        position: \"relative\",\r\n\r\n        [breakpoints.up(\"xl\")]: {\r\n          marginLeft: miniSidenav ? pxToRem(120) : pxToRem(274),\r\n          transition: transitions.create([\"margin-left\", \"margin-right\"], {\r\n            easing: transitions.easing.easeInOut,\r\n            duration: transitions.duration.standard,\r\n          }),\r\n        },\r\n      })}\r\n    >\r\n      {children}\r\n    </MDBox>\r\n  );\r\n}\r\n\r\n// Typechecking props for the DashboardLayout\r\nDashboardLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default DashboardLayout;\r\n","D:\\project ardhi\\getfit-admin\\src\\components\\MDInput\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDTypography\\MDTypographyRoot.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDButton\\MDButtonRoot.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\components\\Projects\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\extend\\LayoutContainers\\DashboardLayout\\index.js",["1491"],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Charts\\BarCharts\\ReportsBarChart\\index.js",["1492"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useMemo } from \"react\";\r\n\r\n// porp-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// react-chartjs-2 components\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\n\r\n// ReportsBarChart configurations\r\nimport configs from \"examples/Charts/BarCharts/ReportsBarChart/configs\";\r\n\r\nfunction ReportsBarChart({ color, title, description, date, chart }) {\r\n  const { data, options } = configs(chart.labels || [], chart.datasets || {});\r\n\r\n  return (\r\n    <Card sx={{ height: \"100%\" }}>\r\n      <MDBox padding=\"1rem\">\r\n        {useMemo(\r\n          () => (\r\n            <MDBox\r\n              variant=\"gradient\"\r\n              bgColor={color}\r\n              borderRadius=\"lg\"\r\n              coloredShadow={color}\r\n              py={2}\r\n              pr={0.5}\r\n              mt={-5}\r\n              height=\"12.5rem\"\r\n            >\r\n              <Bar data={data} options={options} />\r\n            </MDBox>\r\n          ),\r\n          [chart, color]\r\n        )}\r\n        <MDBox pt={3} pb={1} px={1}>\r\n          <MDTypography variant=\"h6\" textTransform=\"capitalize\">\r\n            {title}\r\n          </MDTypography>\r\n          <MDTypography component=\"div\" variant=\"button\" color=\"text\" fontWeight=\"light\">\r\n            {description}\r\n          </MDTypography>\r\n          <Divider />\r\n          <MDBox display=\"flex\" alignItems=\"center\">\r\n            <MDTypography variant=\"button\" color=\"text\" lineHeight={1} sx={{ mt: 0.15, mr: 0.5 }}>\r\n              <Icon>schedule</Icon>\r\n            </MDTypography>\r\n            <MDTypography variant=\"button\" color=\"text\" fontWeight=\"light\">\r\n              {date}\r\n            </MDTypography>\r\n          </MDBox>\r\n        </MDBox>\r\n      </MDBox>\r\n    </Card>\r\n  );\r\n}\r\n\r\n// Setting default values for the props of ReportsBarChart\r\nReportsBarChart.defaultProps = {\r\n  color: \"dark\",\r\n  description: \"\",\r\n};\r\n\r\n// Typechecking props for the ReportsBarChart\r\nReportsBarChart.propTypes = {\r\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  date: PropTypes.string.isRequired,\r\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\r\n};\r\n\r\nexport default ReportsBarChart;\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\components\\OrdersOverview\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\extend\\Navbars\\DashboardNavbar\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Charts\\LineCharts\\ReportsLineChart\\index.js",["1493"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useMemo } from \"react\";\r\n\r\n// porp-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// react-chartjs-2 components\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\n\r\n// ReportsLineChart configurations\r\nimport configs from \"examples/Charts/LineCharts/ReportsLineChart/configs\";\r\n\r\nfunction ReportsLineChart({ color, title, description, date, chart }) {\r\n  const { data, options } = configs(chart.labels || [], chart.datasets || {});\r\n\r\n  return (\r\n    <Card sx={{ height: \"100%\" }}>\r\n      <MDBox padding=\"1rem\">\r\n        {useMemo(\r\n          () => (\r\n            <MDBox\r\n              variant=\"gradient\"\r\n              bgColor={color}\r\n              borderRadius=\"lg\"\r\n              coloredShadow={color}\r\n              py={2}\r\n              pr={0.5}\r\n              mt={-5}\r\n              height=\"12.5rem\"\r\n            >\r\n              <Line data={data} options={options} />\r\n            </MDBox>\r\n          ),\r\n          [chart, color]\r\n        )}\r\n        <MDBox pt={3} pb={1} px={1}>\r\n          <MDTypography variant=\"h6\" textTransform=\"capitalize\">\r\n            {title}\r\n          </MDTypography>\r\n          <MDTypography component=\"div\" variant=\"button\" color=\"text\" fontWeight=\"light\">\r\n            {description}\r\n          </MDTypography>\r\n          <Divider />\r\n          <MDBox display=\"flex\" alignItems=\"center\">\r\n            <MDTypography variant=\"button\" color=\"text\" lineHeight={1} sx={{ mt: 0.15, mr: 0.5 }}>\r\n              <Icon>schedule</Icon>\r\n            </MDTypography>\r\n            <MDTypography variant=\"button\" color=\"text\" fontWeight=\"light\">\r\n              {date}\r\n            </MDTypography>\r\n          </MDBox>\r\n        </MDBox>\r\n      </MDBox>\r\n    </Card>\r\n  );\r\n}\r\n\r\n// Setting default values for the props of ReportsLineChart\r\nReportsLineChart.defaultProps = {\r\n  color: \"dark\",\r\n  description: \"\",\r\n};\r\n\r\n// Typechecking props for the ReportsLineChart\r\nReportsLineChart.propTypes = {\r\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  date: PropTypes.string.isRequired,\r\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\r\n};\r\n\r\nexport default ReportsLineChart;\r\n","D:\\project ardhi\\getfit-admin\\src\\examples\\Cards\\StatisticsCards\\ComplexStatisticsCard\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Sidenav\\styles\\sidenavCollapse.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\index.jsx",["1494","1495"],[],"import React, { useEffect, useMemo } from \"react\";\r\nimport DataTable from \"components/extend/Tables/DataTable\";\r\nimport appointmentTableData from \"./data/appointmentTableData\";\r\nimport MDBox from \"components/MDBox\";\r\nimport { Card, Grid } from \"@mui/material\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport { useAppointmentUIContext } from \"layouts/appointment/appointmentUIContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../appointmentAction\";\r\n\r\nexport default function ListTableAppointment() {\r\n  // Appointment UI Context\r\n  const appointmentUIContext = useAppointmentUIContext();\r\n  const appointmentUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: appointmentUIContext.queryParams,\r\n      setQueryParams: appointmentUIContext.setQueryParams,\r\n    };\r\n  }, [appointmentUIContext]);\r\n\r\n  // Get Redux\r\n  const { currentState } = useSelector((state) => ({ currentState: state.appointment }));\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  // Dispatch\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.datatable(appointmentUIProps.queryParams));\r\n  }, [appointmentUIProps.queryParams]);\r\n\r\n  const { columns, rows } = appointmentTableData(entities);\r\n  return (\r\n    <MDBox pt={6} pb={3}>\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <MDBox\r\n              mx={2}\r\n              mt={-3}\r\n              py={3}\r\n              px={2}\r\n              variant=\"gradient\"\r\n              bgColor=\"info\"\r\n              borderRadius=\"lg\"\r\n              coloredShadow=\"info\"\r\n            >\r\n              <MDTypography variant=\"h6\" color=\"white\">\r\n                Appointment Table\r\n              </MDTypography>\r\n            </MDBox>\r\n            <MDBox p={2}>\r\n              <DataTable\r\n                table={{ columns, rows }}\r\n                totalCount={totalCount}\r\n                params={appointmentUIProps.queryParams}\r\n                setParams={appointmentUIProps.setQueryParams}\r\n              />\r\n            </MDBox>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </MDBox>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\components\\extend\\Button\\BackButton\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\authentication\\components\\BasicLayout\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\index.jsx",["1496","1497"],[],"import React, { useEffect, useMemo } from \"react\";\r\nimport DataTable from \"components/extend/Tables/DataTable\";\r\nimport patientTableData from \"./data/patientTableData\";\r\nimport { usePatientUIContext } from \"layouts/patient/patientUIContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../patientAction\";\r\nimport MDBox from \"components/MDBox\";\r\nimport { Card, Grid } from \"@mui/material\";\r\nimport MDTypography from \"components/MDTypography\";\r\n\r\nexport default function ListTablePatient() {\r\n  // Patient UI Context\r\n  const patientUIContext = usePatientUIContext();\r\n\r\n  const patientUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: patientUIContext.queryParams,\r\n      setQueryParams: patientUIContext.setQueryParams,\r\n    };\r\n  }, [patientUIContext]);\r\n\r\n  // Get Redux\r\n  const { currentState } = useSelector((state) => ({ currentState: state.patient }));\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.datatablePatient(patientUIProps.queryParams));\r\n  }, [patientUIProps.queryParams]);\r\n\r\n  const { columns, rows } = patientTableData(entities);\r\n\r\n  return (\r\n    <MDBox pt={6} pb={3}>\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <MDBox\r\n              mx={2}\r\n              mt={-3}\r\n              py={3}\r\n              px={2}\r\n              variant=\"gradient\"\r\n              bgColor=\"info\"\r\n              borderRadius=\"lg\"\r\n              coloredShadow=\"info\"\r\n            >\r\n              <MDTypography variant=\"h6\" color=\"white\">\r\n                Patient Table\r\n              </MDTypography>\r\n            </MDBox>\r\n            <MDBox p={2}>\r\n              <DataTable\r\n                table={{ columns, rows }}\r\n                totalCount={totalCount}\r\n                params={patientUIProps.queryParams}\r\n                setParams={patientUIProps.setQueryParams}\r\n              />\r\n            </MDBox>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </MDBox>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\index.jsx",["1498","1499"],[],"import React, { useEffect, useMemo } from \"react\";\r\nimport DataTable from \"components/extend/Tables/DataTable\";\r\nimport orderTableData from \"./data/orderTableData\";\r\nimport MDBox from \"components/MDBox\";\r\nimport { Card, Grid } from \"@mui/material\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport { useOrderUIContext } from \"layouts/order/orderUIContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../orderAction\";\r\n\r\nexport default function ListTableOrder() {\r\n  // Order UI Context\r\n  const orderUIContext = useOrderUIContext();\r\n  const orderUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: orderUIContext.queryParams,\r\n      setQueryParams: orderUIContext.setQueryParams,\r\n    };\r\n  }, [orderUIContext]);\r\n\r\n  // Get Redux\r\n  const { currentState } = useSelector((state) => ({ currentState: state.order }));\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.datatable(orderUIProps.queryParams));\r\n  }, [orderUIProps.queryParams]);\r\n\r\n  const { columns, rows } = orderTableData(entities);\r\n  \r\n  return (\r\n    <MDBox pt={6} pb={3}>\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <MDBox\r\n              mx={2}\r\n              mt={-3}\r\n              py={3}\r\n              px={2}\r\n              variant=\"gradient\"\r\n              bgColor=\"info\"\r\n              borderRadius=\"lg\"\r\n              coloredShadow=\"info\"\r\n            >\r\n              <MDTypography variant=\"h6\" color=\"white\">\r\n                Order Table\r\n              </MDTypography>\r\n            </MDBox>\r\n            <MDBox p={2}>\r\n              <DataTable\r\n                table={{ columns, rows }}\r\n                totalCount={totalCount}\r\n                params={orderUIProps.queryParams}\r\n                setParams={orderUIProps.setQueryParams}\r\n              />\r\n            </MDBox>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </MDBox>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\button\\root.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\button\\text.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\button\\outlined.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\assets\\theme-dark\\components\\button\\contained.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDInput\\MDInputRoot.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Navbars\\DashboardNavbar\\styles.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Breadcrumbs\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Items\\NotificationItem\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Tables\\DataTable\\index.js",["1500"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useMemo, useEffect, useState } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// react-table components\r\nimport { useTable, usePagination, useGlobalFilter, useAsyncDebounce, useSortBy } from \"react-table\";\r\n\r\n// @mui material components\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Icon from \"@mui/material/Icon\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDInput from \"components/MDInput\";\r\nimport MDPagination from \"components/MDPagination\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DataTableHeadCell from \"examples/Tables/DataTable/DataTableHeadCell\";\r\nimport DataTableBodyCell from \"examples/Tables/DataTable/DataTableBodyCell\";\r\n\r\nfunction DataTable({\r\n  entriesPerPage,\r\n  canSearch,\r\n  showTotalEntries,\r\n  table,\r\n  pagination,\r\n  isSorted,\r\n  noEndBorder,\r\n}) {\r\n  const defaultValue = entriesPerPage.defaultValue ? entriesPerPage.defaultValue : 10;\r\n  const entries = entriesPerPage.entries\r\n    ? entriesPerPage.entries.map((el) => el.toString())\r\n    : [\"5\", \"10\", \"15\", \"20\", \"25\"];\r\n  const columns = useMemo(() => table.columns, [table]);\r\n  const data = useMemo(() => table.rows, [table]);\r\n\r\n  const tableInstance = useTable(\r\n    { columns, data, initialState: { pageIndex: 0 } },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    rows,\r\n    page,\r\n    pageOptions,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    setGlobalFilter,\r\n    state: { pageIndex, pageSize, globalFilter },\r\n  } = tableInstance;\r\n\r\n  // Set the default value for the entries per page when component mounts\r\n  useEffect(() => setPageSize(defaultValue || 10), [defaultValue]);\r\n\r\n  // Set the entries per page value based on the select value\r\n  const setEntriesPerPage = (value) => setPageSize(value);\r\n\r\n  // Render the paginations\r\n  const renderPagination = pageOptions.map((option) => (\r\n    <MDPagination\r\n      item\r\n      key={option}\r\n      onClick={() => gotoPage(Number(option))}\r\n      active={pageIndex === option}\r\n    >\r\n      {option + 1}\r\n    </MDPagination>\r\n  ));\r\n\r\n  // Handler for the input to set the pagination index\r\n  const handleInputPagination = ({ target: { value } }) =>\r\n    value > pageOptions.length || value < 0 ? gotoPage(0) : gotoPage(Number(value));\r\n\r\n  // Customized page options starting from 1\r\n  const customizedPageOptions = pageOptions.map((option) => option + 1);\r\n\r\n  // Setting value for the pagination input\r\n  const handleInputPaginationValue = ({ target: value }) => gotoPage(Number(value.value - 1));\r\n\r\n  // Search input value state\r\n  const [search, setSearch] = useState(globalFilter);\r\n\r\n  // Search input state handle\r\n  const onSearchChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 100);\r\n\r\n  // A function that sets the sorted value for the table\r\n  const setSortedValue = (column) => {\r\n    let sortedValue;\r\n\r\n    if (isSorted && column.isSorted) {\r\n      sortedValue = column.isSortedDesc ? \"desc\" : \"asce\";\r\n    } else if (isSorted) {\r\n      sortedValue = \"none\";\r\n    } else {\r\n      sortedValue = false;\r\n    }\r\n\r\n    return sortedValue;\r\n  };\r\n\r\n  // Setting the entries starting point\r\n  const entriesStart = pageIndex === 0 ? pageIndex + 1 : pageIndex * pageSize + 1;\r\n\r\n  // Setting the entries ending point\r\n  let entriesEnd;\r\n\r\n  if (pageIndex === 0) {\r\n    entriesEnd = pageSize;\r\n  } else if (pageIndex === pageOptions.length - 1) {\r\n    entriesEnd = rows.length;\r\n  } else {\r\n    entriesEnd = pageSize * (pageIndex + 1);\r\n  }\r\n\r\n  return (\r\n    <TableContainer sx={{ boxShadow: \"none\" }}>\r\n      {entriesPerPage || canSearch ? (\r\n        <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={3}>\r\n          {entriesPerPage && (\r\n            <MDBox display=\"flex\" alignItems=\"center\">\r\n              <Autocomplete\r\n                disableClearable\r\n                value={pageSize.toString()}\r\n                options={entries}\r\n                onChange={(event, newValue) => {\r\n                  setEntriesPerPage(parseInt(newValue, 10));\r\n                }}\r\n                size=\"small\"\r\n                sx={{ width: \"5rem\" }}\r\n                renderInput={(params) => <MDInput {...params} />}\r\n              />\r\n              <MDTypography variant=\"caption\" color=\"secondary\">\r\n                &nbsp;&nbsp;entries per page\r\n              </MDTypography>\r\n            </MDBox>\r\n          )}\r\n          {canSearch && (\r\n            <MDBox width=\"12rem\" ml=\"auto\">\r\n              <MDInput\r\n                placeholder=\"Search...\"\r\n                value={search}\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={({ currentTarget }) => {\r\n                  setSearch(search);\r\n                  onSearchChange(currentTarget.value);\r\n                }}\r\n              />\r\n            </MDBox>\r\n          )}\r\n        </MDBox>\r\n      ) : null}\r\n      <Table {...getTableProps()}>\r\n        <MDBox component=\"thead\">\r\n          {headerGroups.map((headerGroup) => (\r\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <DataTableHeadCell\r\n                  {...column.getHeaderProps(isSorted && column.getSortByToggleProps())}\r\n                  width={column.width ? column.width : \"auto\"}\r\n                  align={column.align ? column.align : \"left\"}\r\n                  sorted={setSortedValue(column)}\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </DataTableHeadCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </MDBox>\r\n        <TableBody {...getTableBodyProps()}>\r\n          {page.map((row, key) => {\r\n            prepareRow(row);\r\n            return (\r\n              <TableRow {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <DataTableBodyCell\r\n                    noBorder={noEndBorder && rows.length - 1 === key}\r\n                    align={cell.column.align ? cell.column.align : \"left\"}\r\n                    {...cell.getCellProps()}\r\n                  >\r\n                    {cell.render(\"Cell\")}\r\n                  </DataTableBodyCell>\r\n                ))}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <MDBox\r\n        display=\"flex\"\r\n        flexDirection={{ xs: \"column\", sm: \"row\" }}\r\n        justifyContent=\"space-between\"\r\n        alignItems={{ xs: \"flex-start\", sm: \"center\" }}\r\n        p={!showTotalEntries && pageOptions.length === 1 ? 0 : 3}\r\n      >\r\n        {showTotalEntries && (\r\n          <MDBox mb={{ xs: 3, sm: 0 }}>\r\n            <MDTypography variant=\"button\" color=\"secondary\" fontWeight=\"regular\">\r\n              Showing {entriesStart} to {entriesEnd} of {rows.length} entries\r\n            </MDTypography>\r\n          </MDBox>\r\n        )}\r\n        {pageOptions.length > 1 && (\r\n          <MDPagination\r\n            variant={pagination.variant ? pagination.variant : \"gradient\"}\r\n            color={pagination.color ? pagination.color : \"info\"}\r\n          >\r\n            {canPreviousPage && (\r\n              <MDPagination item onClick={() => previousPage()}>\r\n                <Icon sx={{ fontWeight: \"bold\" }}>chevron_left</Icon>\r\n              </MDPagination>\r\n            )}\r\n            {renderPagination.length > 6 ? (\r\n              <MDBox width=\"5rem\" mx={1}>\r\n                <MDInput\r\n                  inputProps={{ type: \"number\", min: 1, max: customizedPageOptions.length }}\r\n                  value={customizedPageOptions[pageIndex]}\r\n                  onChange={(handleInputPagination, handleInputPaginationValue)}\r\n                />\r\n              </MDBox>\r\n            ) : (\r\n              renderPagination\r\n            )}\r\n            {canNextPage && (\r\n              <MDPagination item onClick={() => nextPage()}>\r\n                <Icon sx={{ fontWeight: \"bold\" }}>chevron_right</Icon>\r\n              </MDPagination>\r\n            )}\r\n          </MDPagination>\r\n        )}\r\n      </MDBox>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n// Setting default values for the props of DataTable\r\nDataTable.defaultProps = {\r\n  entriesPerPage: { defaultValue: 10, entries: [5, 10, 15, 20, 25] },\r\n  canSearch: false,\r\n  showTotalEntries: true,\r\n  pagination: { variant: \"gradient\", color: \"info\" },\r\n  isSorted: true,\r\n  noEndBorder: false,\r\n};\r\n\r\n// Typechecking props for the DataTable\r\nDataTable.propTypes = {\r\n  entriesPerPage: PropTypes.oneOfType([\r\n    PropTypes.shape({\r\n      defaultValue: PropTypes.number,\r\n      entries: PropTypes.arrayOf(PropTypes.number),\r\n    }),\r\n    PropTypes.bool,\r\n  ]),\r\n  canSearch: PropTypes.bool,\r\n  showTotalEntries: PropTypes.bool,\r\n  table: PropTypes.objectOf(PropTypes.array).isRequired,\r\n  pagination: PropTypes.shape({\r\n    variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\r\n    color: PropTypes.oneOf([\r\n      \"primary\",\r\n      \"secondary\",\r\n      \"info\",\r\n      \"success\",\r\n      \"warning\",\r\n      \"error\",\r\n      \"dark\",\r\n      \"light\",\r\n    ]),\r\n  }),\r\n  isSorted: PropTypes.bool,\r\n  noEndBorder: PropTypes.bool,\r\n};\r\n\r\nexport default DataTable;\r\n","D:\\project ardhi\\getfit-admin\\src\\examples\\Timeline\\TimelineItem\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\dashboard\\components\\Projects\\data\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Charts\\BarCharts\\ReportsBarChart\\configs\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Charts\\LineCharts\\ReportsLineChart\\configs\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\LayoutContainers\\PageLayout\\index.js",["1501"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useEffect } from \"react\";\r\n\r\n// react-router-dom components\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\n\r\n// Material Dashboard 2 React context\r\nimport { useMaterialUIController, setLayout } from \"context\";\r\n\r\nfunction PageLayout({ background, children }) {\r\n  const [, dispatch] = useMaterialUIController();\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    setLayout(dispatch, \"page\");\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <MDBox\r\n      width=\"100vw\"\r\n      height=\"100%\"\r\n      minHeight=\"100vh\"\r\n      bgColor={background}\r\n      sx={{ overflowX: \"hidden\" }}\r\n    >\r\n      {children}\r\n    </MDBox>\r\n  );\r\n}\r\n\r\n// Setting default values for the props for PageLayout\r\nPageLayout.defaultProps = {\r\n  background: \"default\",\r\n};\r\n\r\n// Typechecking props for the PageLayout\r\nPageLayout.propTypes = {\r\n  background: PropTypes.oneOf([\"white\", \"light\", \"default\"]),\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default PageLayout;\r\n","D:\\project ardhi\\getfit-admin\\src\\components\\extend\\Tables\\DataTable\\index.js",["1502","1503"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useMemo, useEffect, useState } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// react-table components\r\nimport { useTable, usePagination, useGlobalFilter, useAsyncDebounce, useSortBy } from \"react-table\";\r\n\r\n// @mui material components\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Icon from \"@mui/material/Icon\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDInput from \"components/MDInput\";\r\nimport MDPagination from \"components/MDPagination\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DataTableHeadCell from \"examples/Tables/DataTable/DataTableHeadCell\";\r\nimport DataTableBodyCell from \"examples/Tables/DataTable/DataTableBodyCell\";\r\n\r\nfunction DataTable({\r\n  params,\r\n  setParams,\r\n  entriesPerPage,\r\n  canSearch,\r\n  showTotalEntries,\r\n  table,\r\n  totalCount,\r\n  pagination,\r\n  isSorted,\r\n  noEndBorder,\r\n}) {\r\n  const defaultValue = params.pageSize ? params.pageSize : 10;\r\n  const entries = params.entries\r\n    ? params.entries.map((el) => el.toString())\r\n    : [\"5\", \"10\", \"15\", \"20\", \"25\"];\r\n  const columns = useMemo(() => table.columns, [table]);\r\n  const data = useMemo(() => table.rows, [table]);\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: params.pageIndex },\r\n      pageOptions: {\r\n        length: 10,\r\n      },\r\n      manualPagination: true,\r\n      pageCount: Math.ceil(totalCount / defaultValue),\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n    \r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    rows,\r\n    page,\r\n    pageOptions,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    setGlobalFilter,\r\n    state: { pageIndex, pageSize, globalFilter },\r\n  } = tableInstance;\r\n\r\n  // Set the default value for the entries per page when component mounts\r\n  useEffect(() => {\r\n    setPageSize(defaultValue || 10);\r\n  }, [defaultValue]);\r\n\r\n  useEffect(() => {\r\n    setParams({\r\n      ...params,\r\n      pageIndex: pageIndex\r\n    })\r\n  }, [pageIndex])\r\n  \r\n\r\n  // Set the entries per page value based on the select value\r\n  const setEntriesPerPage = (value) => setPageSize(value);\r\n\r\n  // Render the paginations\r\n  const renderPagination = pageOptions.map((option) => (\r\n    <MDPagination item key={option} onClick={() => gotoPage(Number(option))} active={pageIndex === option}>\r\n      {option + 1}\r\n    </MDPagination>\r\n  ));\r\n\r\n  // Handler for the input to set the pagination index\r\n  const handleInputPagination = ({ target: { value } }) => {\r\n    if (value > pageOptions.length || value < 0) {\r\n      gotoPage(0);\r\n    } else {\r\n      gotoPage(Number(value));\r\n    }\r\n  };\r\n\r\n  // Customized page options starting from 1\r\n  const customizedPageOptions = pageOptions.map((option) => option + 1);\r\n\r\n  // Setting value for the pagination input\r\n  const handleInputPaginationValue = ({ target: value }) => gotoPage(Number(value.value) - 1);\r\n\r\n  // Search input value state\r\n  const [search, setSearch] = useState(globalFilter);\r\n\r\n  // Search input state handle\r\n  const onSearchChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 100);\r\n\r\n  // A function that sets the sorted value for the table\r\n  const setSortedValue = (column) => {\r\n    let sortedValue;\r\n\r\n    if (isSorted && column.isSorted) {\r\n      sortedValue = column.isSortedDesc ? \"desc\" : \"asc\";\r\n    } else if (isSorted) {\r\n      sortedValue = \"none\";\r\n    } else {\r\n      sortedValue = false;\r\n    }\r\n\r\n    return sortedValue;\r\n  };\r\n\r\n  // Setting the entries starting point\r\n  const entriesStart = pageIndex === 0 ? pageIndex + 1 : pageIndex * pageSize + 1;\r\n\r\n  // Setting the entries ending point\r\n  let entriesEnd;\r\n\r\n  if (pageIndex === 0) {\r\n    entriesEnd = pageSize;\r\n  } else if (pageIndex === pageOptions.length - 1) {\r\n    entriesEnd = rows.length;\r\n  } else {\r\n    entriesEnd = pageSize * (pageIndex + 1);\r\n  }\r\n\r\n  return (\r\n    <TableContainer sx={{ boxShadow: \"none\" }}>\r\n      {entriesPerPage || canSearch ? (\r\n        <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={3}>\r\n          {entriesPerPage && (\r\n            <MDBox display=\"flex\" alignItems=\"center\">\r\n              <Autocomplete\r\n                disableClearable\r\n                value={pageSize.toString()}\r\n                options={entries}\r\n                onChange={(event, newValue) => {\r\n                  setEntriesPerPage(parseInt(newValue, 10));\r\n                }}\r\n                size=\"small\"\r\n                sx={{ width: \"5rem\" }}\r\n                renderInput={(params) => <MDInput {...params} />}\r\n              />\r\n              <MDTypography variant=\"caption\" color=\"secondary\">\r\n                &nbsp;&nbsp;entries per page\r\n              </MDTypography>\r\n            </MDBox>\r\n          )}\r\n          {canSearch && (\r\n            <MDBox width=\"12rem\" ml=\"auto\">\r\n              <MDInput\r\n                placeholder=\"Search...\"\r\n                value={search}\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={({ currentTarget }) => {\r\n                  setSearch(search);\r\n                  onSearchChange(currentTarget.value);\r\n                }}\r\n              />\r\n            </MDBox>\r\n          )}\r\n        </MDBox>\r\n      ) : null}\r\n      <Table {...getTableProps()}>\r\n        <MDBox component=\"thead\">\r\n          {headerGroups.map((headerGroup) => (\r\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <DataTableHeadCell\r\n                  {...column.getHeaderProps(isSorted && column.getSortByToggleProps())}\r\n                  width={column.width ? column.width : \"auto\"}\r\n                  align={column.align ? column.align : \"left\"}\r\n                  sorted={setSortedValue(column)}\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </DataTableHeadCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </MDBox>\r\n        <TableBody {...getTableBodyProps()}>\r\n          {page.map((row, key) => {\r\n            prepareRow(row);\r\n            return (\r\n              <TableRow {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <DataTableBodyCell\r\n                    noBorder={noEndBorder && rows.length - 1 === key}\r\n                    align={cell.column.align ? cell.column.align : \"left\"}\r\n                    {...cell.getCellProps()}\r\n                  >\r\n                    {cell.render(\"Cell\")}\r\n                  </DataTableBodyCell>\r\n                ))}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <MDBox\r\n        display=\"flex\"\r\n        flexDirection={{ xs: \"column\", sm: \"row\" }}\r\n        justifyContent=\"space-between\"\r\n        alignItems={{ xs: \"flex-start\", sm: \"center\" }}\r\n        p={!showTotalEntries && pageOptions.length === 1 ? 0 : 3}\r\n      >\r\n        {showTotalEntries && (\r\n          <MDBox mb={{ xs: 3, sm: 0 }}>\r\n            <MDTypography variant=\"button\" color=\"secondary\" fontWeight=\"regular\">\r\n              Showing {entriesStart} to {entriesEnd} of {pageOptions.length} entries\r\n            </MDTypography>\r\n          </MDBox>\r\n        )}\r\n        {pageOptions.length > 1 && (\r\n          <MDPagination\r\n            variant={pagination.variant ? pagination.variant : \"gradient\"}\r\n            color={pagination.color ? pagination.color : \"info\"}\r\n          >\r\n            {canPreviousPage && (\r\n              <MDPagination item onClick={() => previousPage()}>\r\n                <Icon sx={{ fontWeight: \"bold\" }}>chevron_left</Icon>\r\n              </MDPagination>\r\n            )}\r\n            {renderPagination.length > 6 ? (\r\n              <MDBox width=\"5rem\" mx={1}>\r\n                <MDInput\r\n                  inputProps={{ type: \"number\", min: 1, max: customizedPageOptions.length }}\r\n                  value={customizedPageOptions[pageIndex]}\r\n                  onChange={(handleInputPagination, handleInputPaginationValue)}\r\n                />\r\n              </MDBox>\r\n            ) : (\r\n              renderPagination\r\n            )}\r\n            {canNextPage && (\r\n              <MDPagination item onClick={() => nextPage()}>\r\n                <Icon sx={{ fontWeight: \"bold\" }}>chevron_right</Icon>\r\n              </MDPagination>\r\n            )}\r\n          </MDPagination>\r\n        )}\r\n      </MDBox>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n// Setting default values for the props of DataTable\r\nDataTable.defaultProps = {\r\n  entriesPerPage: { defaultValue: 10, entries: [5, 10, 15, 20, 25] },\r\n  canSearch: false,\r\n  showTotalEntries: true,\r\n  pagination: { variant: \"gradient\", color: \"info\" },\r\n  isSorted: true,\r\n  noEndBorder: false,\r\n};\r\n\r\n// Typechecking props for the DataTable\r\nDataTable.propTypes = {\r\n  params: PropTypes.object,\r\n  totalCount: PropTypes.number,\r\n  setParams: PropTypes.func,\r\n  entriesPerPage: PropTypes.oneOfType([\r\n    PropTypes.shape({\r\n      defaultValue: PropTypes.number,\r\n      entries: PropTypes.arrayOf(PropTypes.number),\r\n    }),\r\n    PropTypes.bool,\r\n  ]),\r\n  canSearch: PropTypes.bool,\r\n  showTotalEntries: PropTypes.bool,\r\n  table: PropTypes.objectOf(PropTypes.array).isRequired,\r\n  pagination: PropTypes.shape({\r\n    variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\r\n    color: PropTypes.oneOf([\r\n      \"primary\",\r\n      \"secondary\",\r\n      \"info\",\r\n      \"success\",\r\n      \"warning\",\r\n      \"error\",\r\n      \"dark\",\r\n      \"light\",\r\n    ]),\r\n  }),\r\n  isSorted: PropTypes.bool,\r\n  noEndBorder: PropTypes.bool,\r\n};\r\n\r\nexport default DataTable;\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\authentication\\components\\Footer\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Tables\\DataTable\\DataTableHeadCell.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Tables\\DataTable\\DataTableBodyCell.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Items\\NotificationItem\\styles.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Timeline\\TimelineItem\\styles.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDBadge\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDAvatar\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDProgress\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDPagination\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\examples\\Timeline\\context\\index.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDBadge\\MDBadgeRoot.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDAvatar\\MDAvatarRoot.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDProgress\\MDProgressRoot.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\components\\MDPagination\\MDPaginationItemRoot.js",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\ListTableMedicalRecord\\index.jsx",["1504","1505","1506","1507"],[],"import React, { useEffect, useMemo } from \"react\";\r\nimport DataTable from \"components/extend/Tables/DataTable\";\r\nimport medicalRecordTableData from \"./data/medicalRecordTableData\";\r\nimport { dataTableMedicalRecord } from \"layouts/medicalRecord/medicalRecordAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useMedicalRecordUIContext } from \"layouts/medicalRecord/medicalRecordUIContext\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\nexport default function ListTableMedicalRecord() {\r\n  const { currentState } = useSelector((state) => ({ currentState: state.medicalRecord }));\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  const medicalRecordUIContext = useMedicalRecordUIContext();\r\n  const medicalRecordUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: medicalRecordUIContext.queryParams,\r\n      setQueryParams: medicalRecordUIContext.setQueryParams,\r\n    };\r\n  }, [medicalRecordUIContext]);\r\n\r\n  useEffect(() => {\r\n    dispatch(dataTableMedicalRecord(medicalRecordUIProps.queryParams));\r\n  }, [medicalRecordUIProps.queryParams]);\r\n\r\n  const { columns, rows } = medicalRecordTableData(entities);\r\n\r\n  return (\r\n    <>\r\n      <MDBox\r\n        mx={2}\r\n        mt={-3}\r\n        py={3}\r\n        px={2}\r\n        variant=\"gradient\"\r\n        bgColor=\"info\"\r\n        borderRadius=\"lg\"\r\n        coloredShadow=\"info\"\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <MDTypography variant=\"h6\" color=\"white\">\r\n          Medical Record\r\n        </MDTypography>\r\n        <Link to=\"/medical-record/create\">\r\n          <MDTypography variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n            <MDButton variant=\"gradient\" color=\"success\">\r\n              Create New\r\n            </MDButton>\r\n          </MDTypography>\r\n        </Link>\r\n      </MDBox>\r\n      <MDBox p={2}>\r\n        <DataTable\r\n          params={medicalRecordUIProps.queryParams}\r\n          setParams={medicalRecordUIProps.setQueryParams}\r\n          table={{ columns, rows }}\r\n        />\r\n      </MDBox>\r\n    </>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\ListTableMedicalRecord\\data\\medicalRecordTableData.jsx",["1508","1509","1510","1511"],[],"/* eslint-disable react/prop-types */\r\n/* eslint-disable react/function-component-definition */\r\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDButton from \"components/MDButton\";\r\nimport MDBadge from \"components/MDBadge\";\r\n\r\n// Images\r\nimport team2 from \"assets/images/team-2.jpg\";\r\nimport team3 from \"assets/images/team-3.jpg\";\r\nimport team4 from \"assets/images/team-4.jpg\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// formatter\r\n\r\nimport { NameColumnFormatter } from \"./formatter/nameFormatter\";\r\nimport { TimeColumnFormatter } from \"./formatter/timeFormatter\";\r\n\r\nexport default function data(entities) {\r\n  const data = entities.map((item) => {\r\n    return {\r\n      patient: (\r\n        <NameColumnFormatter\r\n          image={team2}\r\n          name={item.patient_detail.name}\r\n          phoneNumber={item.patient_detail.phone_number}\r\n        />\r\n      ),\r\n      physio: (\r\n        <MDTypography display=\"block\" variant=\"caption\" color=\"text\" fontWeight=\"bold\">\r\n          {item.therapist_detail.name}\r\n        </MDTypography>\r\n      ),\r\n      date: (\r\n        <TimeColumnFormatter from={`${item.date} ${item.time}`} to={`${item.date} ${item.time}`} />\r\n      ),\r\n      type: (\r\n        <MDBadge\r\n          badgeContent={item.appointment_type}\r\n          color=\"primary\"\r\n          variant=\"gradient\"\r\n          size=\"sm\"\r\n        />\r\n      ),\r\n      status: <MDBadge badgeContent=\"Finished\" color=\"success\" variant=\"gradient\" size=\"sm\" />,\r\n      action: (\r\n        <Link to={`/medical-record/${item._id}`}>\r\n          <MDTypography variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n            <MDButton variant=\"gradient\" color=\"info\">\r\n              Detail\r\n            </MDButton>\r\n          </MDTypography>\r\n        </Link>\r\n      ),\r\n    };\r\n  });\r\n\r\n  return {\r\n    columns: [\r\n      { Header: \"Patient\", accessor: \"patient\", width: \"20%\", align: \"left\" },\r\n      { Header: \"Physio\", accessor: \"physio\", width: \"20%\", align: \"left\" },\r\n      { Header: \"Date\", accessor: \"date\", width: \"20%\", align: \"center\" },\r\n      { Header: \"Type\", accessor: \"type\", width: \"10%\", align: \"center\" },\r\n      { Header: \"Status\", accessor: \"status\", width: \"10%\", align: \"center\" },\r\n      { Header: \"action\", accessor: \"action\", width: \"20%\", align: \"center\" },\r\n    ],\r\n\r\n    rows: data,\r\n  };\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\examples\\Sidenav\\index.js",["1512"],[],"D:\\project ardhi\\getfit-admin\\src\\_api\\medicalRecordApi.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\_slices\\medicalRecordSlice.jsx",["1513","1514"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialMedicalRecordState = {\r\n  listLoading: false,\r\n  actionLoading: false,\r\n  error: null,\r\n  medicalRecord: undefined,\r\n  entities: [],\r\n  totalCount: 0,\r\n};\r\n\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\",\r\n};\r\n\r\nexport const medicalRecordSlice = createSlice({\r\n  name: \"MedicalRecord\",\r\n  initialState: initialMedicalRecordState,\r\n  reducers: {\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionLoading = true;\r\n      }\r\n    },\r\n    medicalRecordDataTable: (state, action) => {\r\n      const { entities, totalCount } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    medicalRecordDetail: (state, action) => {\r\n      state.actionLoading = false;\r\n      state.error = null;\r\n      state.medicalRecord = action.payload.medicalRecord;\r\n    },\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}:${action.payload.error}`;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionLoading = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { startCall, medicalRecordDataTable, medicalRecordDetail, catchError } =\r\n  medicalRecordSlice.actions;\r\n\r\nexport default medicalRecordSlice.reducer;\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\medicalRecordAction.jsx",["1515","1516"],[],"import { callTypes } from \"_slices/medicalRecordSlice\";\r\nimport { startCall } from \"_slices/medicalRecordSlice\";\r\nimport { catchError } from \"_slices/medicalRecordSlice\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { medicalRecordDataTable, medicalRecordDetail } from \"_slices/medicalRecordSlice\";\r\nimport {\r\n  getOneMedicalRecord,\r\n  updateMedicalRecord,\r\n  getAllMedicalRecordsDatatable,\r\n  createMedicalRecord,\r\n} from \"_api/medicalRecordApi\";\r\nimport { getAllAppointment } from \"_api/appointmentApi\";\r\nimport { dateFormater } from \"helpers/DateHelpers\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport const dataTableMedicalRecord = (payload) => (dispatch) => {\r\n  dispatch(startCall({ callType: callTypes.list }));\r\n  return getAllMedicalRecordsDatatable(payload)\r\n    .then((response) => {\r\n      const data = response.data.data;\r\n      dispatch(medicalRecordDataTable({ entities: data.entities, totalCount: data.totalCount }));\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Can't show patient\",\r\n        icon: \"error\",\r\n      });\r\n      dispatch(catchError({ err, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\n// export const getAllAppointmentAction = () => (dispatch) => {\r\n//   return getAllAppointment()\r\n//     .then((response) => {\r\n//       return response.data.data;\r\n//     })\r\n//     .catch((err) => {\r\n//       err.clientMessage = \"Something went wrong\";\r\n//       MySwal.fire({\r\n//         title: \"Can't show Appointment\",\r\n//         icon: \"error\",\r\n//       });\r\n//       dispatch(catchError({ err, callType: callTypes.list }));\r\n//     });\r\n// };\r\n\r\nexport const detailMedicalRecord = (medicalRecordId) => (dispatch) => {\r\n  if (!medicalRecordId) {\r\n    return dispatch(medicalRecordDetail({ medicalRecord: undefined }));\r\n  }\r\n  dispatch(startCall({ callType: callTypes.action }));\r\n  return getOneMedicalRecord(medicalRecordId)\r\n    .then((response) => {\r\n      const data = response.data.data;\r\n      dispatch(medicalRecordDetail({ medicalRecord: data }));\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Can't show detail patient\",\r\n        icon: \"error\",\r\n      });\r\n      dispatch(catchError({ err, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateMedicalRecordAction = (medicalRecordData, medicalRecordValue) => (dispatch) => {\r\n  const body = {\r\n    appointment_id: medicalRecordData.appointment_id,\r\n    records: medicalRecordValue,\r\n    date: dateFormater(medicalRecordData.date),\r\n    time: medicalRecordData.time,\r\n    appointment_type: medicalRecordData.appointment_type,\r\n  };\r\n  dispatch(startCall({ callType: callTypes.action }));\r\n  return updateMedicalRecord(medicalRecordData._id, body)\r\n    .then((response) => {\r\n      const data = response.data.data;\r\n      MySwal.fire({\r\n        title: \"Success, Edit\",\r\n        icon: \"success\",\r\n      });\r\n      dispatch(medicalRecordDetail({ medicalRecord: data }));\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Can't show detail patient\",\r\n        icon: \"error\",\r\n      });\r\n      dispatch(catchError({ err, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createMedicalRecordAction = (appointmentData, records) => (dispatch) => {\r\n  const body = {\r\n    appointment_id: appointmentData._id,\r\n    records: records,\r\n    date: dateFormater(appointmentData.date_appointment),\r\n    time: appointmentData.time_appointment,\r\n    appointment_type: appointmentData.appointment_type,\r\n  };\r\n\r\n  return createMedicalRecord(body)\r\n    .then((response) => {\r\n      const data = response.data.data;\r\n      MySwal.fire({\r\n        title: \"Success Create Medical Record\",\r\n        icon: \"success\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Can't show detail patient\",\r\n        icon: \"error\",\r\n      });\r\n      dispatch(catchError({ err, callType: callTypes.action }));\r\n    });\r\n};\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\ListTableMedicalRecord\\data\\formatter\\timeFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\_slices\\appointmentSlice.jsx",["1517","1518"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialAppointmentState = {\r\n  listLoading: false,\r\n  actionLoading: false,\r\n  error: null,\r\n  appointment: undefined,\r\n  entities: [],\r\n  totalCount: 0,\r\n};\r\n\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\",\r\n};\r\n\r\nexport const appointmentSlice = createSlice({\r\n  name: \"Appointment\",\r\n  initialState: initialAppointmentState,\r\n  reducers: {\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionLoading = true;\r\n      }\r\n    },\r\n    appointmentDatatable: (state, action) => {\r\n      const { entities, totalCount } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    appointmentDetail: (state, action) => {\r\n      state.actionLoading = false;\r\n      state.error = null;\r\n      state.appointment = action.payload.appointment;\r\n    },\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}:${action.payload.error}`;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionLoading = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { startCall, appointmentDatatable, appointmentDetail, catchError } =\r\n  appointmentSlice.actions;\r\n\r\nexport default appointmentSlice.reducer;\r\n","D:\\project ardhi\\getfit-admin\\src\\_slices\\orderSlice.jsx",["1519","1520"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialOrderState = {\r\n  listLoading: false,\r\n  actionLoading: false,\r\n  error: null,\r\n  order: undefined,\r\n  entities: [],\r\n  totalCount: 0,\r\n};\r\n\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\",\r\n};\r\n\r\nexport const orderSlice = createSlice({\r\n  name: \"Order\",\r\n  initialState: initialOrderState,\r\n  reducers: {\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionLoading = true;\r\n      }\r\n    },\r\n    orderDatatable: (state, action) => {\r\n      const { entities, totalCount } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    orderDetail: (state, action) => {\r\n      state.actionLoading = false;\r\n      state.error = null;\r\n      state.order = action.payload.order;\r\n    },\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}:${action.payload.error}`;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionLoading = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { startCall, orderDatatable, orderDetail, catchError } = orderSlice.actions;\r\n\r\nexport default orderSlice.reducer;\r\n","D:\\project ardhi\\getfit-admin\\src\\_slices\\patientSlice.jsx",["1521","1522"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialPatientState = {\r\n  listLoading: false,\r\n  actionLoading: false,\r\n  error: null,\r\n  patient: undefined,\r\n  entities: [],\r\n  totalCount: 0,\r\n};\r\n\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\",\r\n};\r\n\r\nexport const patientSlice = createSlice({\r\n  name: \"Patient\",\r\n  initialState: initialPatientState,\r\n  reducers: {\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionLoading = true;\r\n      }\r\n    },\r\n    patientDatatable: (state, action) => {\r\n      const { entities, totalCount } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    patientDetail: (state, action) => {\r\n      state.actionLoading = false;\r\n      state.error = null;\r\n      state.patient = action.payload.patient;\r\n    },\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}:${action.payload.error}`;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionLoading = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { startCall, patientDatatable, patientDetail, catchError } = patientSlice.actions;\r\n\r\nexport default patientSlice.reducer;\r\n","D:\\project ardhi\\getfit-admin\\src\\_slices\\userSlice.jsx",["1523","1524"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setStorage, removeStorage } from \"helpers/LocalStorageHelpers\";\r\n\r\nconst initialUserState = {\r\n  listLoading: false,\r\n  actionLoading: false,\r\n  error: null,\r\n  user: undefined,\r\n};\r\n\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\",\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"Sign In\",\r\n  initialState: initialUserState,\r\n  reducers: {\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionLoading = true;\r\n      }\r\n    },\r\n    signIn: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      /* eslint-disable no-param-reassign */\r\n      state.user = {\r\n        email: action.payload.user.email,\r\n        token: action.payload.user.token,\r\n      };\r\n      state.actionLoading = false;\r\n\r\n      setStorage(\"credentials\", JSON.stringify(state.user), 360 * 24 * 60 * 60);\r\n    },\r\n    signOut: (state) => {\r\n      /* eslint-disable no-param-reassign */\r\n      state.user = null; // eslint-disable-line no-param-reassign\r\n      /* eslint-enable no-param-reassign */\r\n\r\n      removeStorage(\"credentials\");\r\n      console.log(state);\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      //   state.value += action.payload;\r\n      console.log(state);\r\n      console.log(action);\r\n    },\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}:${action.payload.error}`;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionLoading = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { startCall, signIn, signOut, incrementByAmount, catchError } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\medicalRecordUIContext.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\orderUIContext.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\patientUIContext.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\appointmentUIContext.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\authentication\\sign-in\\action\\userAction.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\DetailPatient\\Index.jsx",["1525"],[],"import { Divider, Grid } from \"@mui/material\";\r\nimport MDBox from \"components/MDBox\";\r\nimport React, { useEffect } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport DetailAccount from \"./partial/DetailAccount\";\r\nimport DetailProfile from \"./partial/DetailProfile\";\r\nimport Header from \"./partial/Header\";\r\nimport PlatformSettings from \"./partial/PlatformSettings\";\r\nimport * as actions from \"../../patientAction\";\r\n\r\nexport default function DetailPatient() {\r\n  // Get Params\r\n  const params = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const { patient } = useSelector(\r\n    (state) => ({\r\n      patient: state.patient.patient,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.detailPatient(params.id));\r\n\r\n    return () => {\r\n      dispatch(actions.detailPatient(undefined));\r\n    };\r\n  }, [params.id, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <MDBox mb={2} />\r\n      <Header>\r\n        <MDBox mt={5} mb={3}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} md={6} xl={4}>\r\n              {/* <PlatformSettings /> */}\r\n            </Grid>\r\n            <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n              <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} />\r\n              <DetailProfile\r\n                address={patient?.address}\r\n                fullName={patient?.name}\r\n                phoneNumber={patient?.user.phone_number}\r\n                email={patient?.user.email}\r\n              />\r\n\r\n              <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n            </Grid>\r\n            <Grid item xs={12} xl={4}>\r\n              <DetailAccount />\r\n            </Grid>\r\n          </Grid>\r\n        </MDBox>\r\n      </Header>\r\n    </>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\index.jsx",["1526","1527"],[],"/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport { Card, SvgIcon } from \"@mui/material\";\r\nimport MDButton from \"components/MDButton\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../orderAction\";\r\nimport { ProductDetail, PatientDetail, Header } from \"./partial\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport ProgressStatus from \"./partial/ProgressStatus\";\r\n\r\nfunction OrderDetail() {\r\n  // Get Params\r\n  const params = useParams();\r\n\r\n  // Redux\r\n  const dispatch = useDispatch();\r\n  const { order } = useSelector(\r\n    (state) => ({\r\n      order: state.order?.order,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.detailOrder(params?.id));\r\n\r\n    return () => {\r\n      dispatch(actions.detailOrder(undefined));\r\n    };\r\n  }, [params.id, dispatch]);\r\n\r\n  const cancelOrder = () => {\r\n    dispatch(actions.cancelOrderAction(params?.id)).then((response) => {\r\n      dispatch(actions.detailOrder(params?.id));\r\n    });\r\n  };\r\n  const completeOrder = () => {\r\n    dispatch(actions.completeOrderAction(params?.id)).then((response) => {\r\n      dispatch(actions.detailOrder(params?.id));\r\n    });\r\n  };\r\n  return (\r\n    <MDBox pt={6} pb={3}>\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <Header title=\"Detail Order\" />\r\n            <div className=\"flex\">\r\n              <PatientDetail\r\n                name={order?.patient?.name}\r\n                address={order?.patient?.address}\r\n                birth_date={order?.patient?.birth_date}\r\n              />\r\n\r\n              <ProductDetail\r\n                name={order?.product?.name}\r\n                price={order?.price_paid}\r\n                desc={order?.product?.description}\r\n                facilities={order?.product?.facilities}\r\n              />\r\n            </div>\r\n\r\n            <ProgressStatus status={order?.status} />\r\n\r\n            <div className=\"w-full p-[20px] flex flex-col justify-center\">\r\n              <MDTypography fontSize=\"20px\" fontWeight=\"bold\">\r\n                Action\r\n              </MDTypography>\r\n              <div className=\"w-full flex gap-[10px]\">\r\n                {order?.status == \"unpaid\" ? (\r\n                  <>\r\n                    <MDButton variant=\"gradient\" color=\"info\" onClick={completeOrder}>\r\n                      Set To Paid\r\n                    </MDButton>\r\n                    <MDButton variant=\"gradient\" color=\"primary\" onClick={cancelOrder}>\r\n                      Cancel Transaction\r\n                    </MDButton>\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nexport default OrderDetail;\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\DetailAppointment\\index.jsx",["1528","1529","1530"],[],"import { Card, Grid } from \"@mui/material\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDButton from \"components/MDButton\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport React, { useEffect } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AppointmentDetail from \"./partial/AppointmentDetail\";\r\nimport Header from \"./partial/Header\";\r\nimport PatientDetail from \"./partial/PatientDetail\";\r\nimport * as actions from \"../../appointmentAction\";\r\nimport ProgressStatus from \"./partial/ProgressStatus\";\r\nimport { appointmentStatusStep } from \"_shareVar\";\r\n\r\nexport default function DetailAppointment() {\r\n  // Get Params\r\n  const params = useParams();\r\n\r\n  // Redux\r\n  const dispatch = useDispatch();\r\n  const { appointment } = useSelector(\r\n    (state) => ({\r\n      appointment: state.appointment.appointment,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.detailAppointment(params?.id));\r\n\r\n    return () => {\r\n      dispatch(actions.detailAppointment(undefined));\r\n    };\r\n  }, [params.id, dispatch]);\r\n\r\n  const cancelAppointment = () => {\r\n    dispatch(actions.cancelAppointmentAction(params?.id)).then((response) => {\r\n      dispatch(actions.detailAppointment(params?.id));\r\n    });\r\n  };\r\n  const updateAppointment = () => {\r\n    const currentStepIndex = appointmentStatusStep.findIndex((item, index) => {\r\n      if (appointment?.status == item.key) {\r\n        return true;\r\n      }\r\n    });\r\n    const nextStep = appointmentStatusStep[currentStepIndex + 1];\r\n    dispatch(actions.updateAppointmentAction(params?.id, { status: nextStep.key })).then(\r\n      (response) => {\r\n        dispatch(actions.detailAppointment(params?.id));\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <MDBox pt={6} pb={3}>\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <Header title=\"Appointment Detail\" />\r\n            <div className=\"flex\">\r\n              <PatientDetail\r\n                name={appointment?.patient_detail?.name}\r\n                address={appointment?.address}\r\n                phone_number={appointment?.patient_detail?.phone_number}\r\n              />\r\n\r\n              <AppointmentDetail\r\n                appointment_date={appointment?.date_appointment}\r\n                appointment_time={appointment?.time_appointment}\r\n                physiotherapy={appointment?.therapist_detail?.name}\r\n              />\r\n            </div>\r\n\r\n            <ProgressStatus status={appointment?.status} />\r\n            {appointment?.status != \"cancel\" ? (\r\n              <div className=\"w-full p-[20px] flex flex-col justify-center\">\r\n                <MDTypography fontSize=\"20px\" fontWeight=\"bold\">\r\n                  Action\r\n                </MDTypography>\r\n                <div className=\"w-full flex gap-[10px]\">\r\n                  <MDButton variant=\"gradient\" color=\"info\" onClick={updateAppointment}>\r\n                    To Next Step\r\n                  </MDButton>\r\n                  <MDButton variant=\"gradient\" color=\"primary\" onClick={cancelAppointment}>\r\n                    Cancel\r\n                  </MDButton>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </MDBox>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\authentication\\sign-in\\reduxSlice\\signInSlice.js",["1531","1532"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setStorage, removeStorage } from \"helpers/LocalStorageHelpers\";\r\n\r\nconst initialUserState = {\r\n  listLoading: false,\r\n  actionLoading: false,\r\n  error: null,\r\n};\r\n\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\",\r\n};\r\n\r\nexport const signInSlice = createSlice({\r\n  name: \"Sign In\",\r\n  initialState: initialUserState,\r\n  reducers: {\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionLoading = true;\r\n      }\r\n    },\r\n    signIn: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      /* eslint-disable no-param-reassign */\r\n      state.user = {\r\n        username: \"mardhiansyah12\",\r\n        role: \"admin\",\r\n        status: \"verfied\",\r\n      }; // eslint-disable-line no-param-reassign\r\n      /* eslint-enable no-param-reassign */\r\n\r\n      setStorage(\"credentials\", JSON.stringify(state.user), 360 * 24 * 60 * 60);\r\n      console.log(state);\r\n    },\r\n    signOut: (state) => {\r\n      /* eslint-disable no-param-reassign */\r\n      state.user = null; // eslint-disable-line no-param-reassign\r\n      /* eslint-enable no-param-reassign */\r\n\r\n      removeStorage(\"credentials\");\r\n      console.log(state);\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      //   state.value += action.payload;\r\n      console.log(state);\r\n      console.log(action);\r\n    },\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}:${action.payload.error}`;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionLoading = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { startCall, signIn, signOut, incrementByAmount, catchError } = signInSlice.actions;\r\n\r\nexport default signInSlice.reducer;\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\medicalRecordShareVar.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\patientShareVar.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\patientAction.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\_api\\userApi.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\orderAction.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\appointmentAction.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\patientTableData.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\_shareVar\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\orderTableData.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\appointmentTableData.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\DetailPatient\\partial\\DetailAccount\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\DetailPatient\\partial\\Header\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\DetailPatient\\partial\\DetailProfile\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\DetailPatient\\partial\\PlatformSettings\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\partial\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\partial\\ProgressStatus\\index.jsx",["1533","1534","1535","1536","1537","1538","1539"],[],"import { SvgIcon } from \"@mui/material\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport React from \"react\";\r\nimport { orderStatusStep } from \"_shareVar\";\r\n\r\nexport default function index({ status }) {\r\n  let flagCurrent = false;\r\n\r\n  if (status == \"cancel\") {\r\n    return (\r\n      <div className=\"w-full p-[20px] flex flex-col justify-center\">\r\n        <MDTypography fontSize=\"20px\" fontWeight=\"bold\">\r\n          Progress Status\r\n        </MDTypography>\r\n        <div className=\"w-full flex gap-[10px] items-center\">\r\n          <div className={`w-full min-h-[100px] bg-green-500 rounded-xl p-[10px]`}>\r\n            <MDTypography width=\"60%\" color=\"white\" fontSize=\"14px\">\r\n              Cancel\r\n            </MDTypography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const steps = orderStatusStep.map((item, index) => {\r\n    if (item.key == \"cancel\") {\r\n      return \"\";\r\n    }\r\n    let color = \"bg-green-500\";\r\n    if (flagCurrent == false && item.key == status) {\r\n      color = \"bg-blue-500\";\r\n      flagCurrent = true;\r\n    } else if (flagCurrent == true && item.key != status) {\r\n      color = \"bg-gray-500\";\r\n    } else {\r\n      color = \"bg-green-500\";\r\n    }\r\n    return (\r\n      <>\r\n        <div className={`w-full min-h-[100px] ${color} rounded-xl p-[10px]`}>\r\n          <MDTypography width=\"60%\" color=\"white\" fontSize=\"14px\">\r\n            {item.value}\r\n          </MDTypography>\r\n        </div>\r\n\r\n        {index != orderStatusStep.length - 1 ? (\r\n          <SvgIcon color=\"primary\">\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M5.59,7.41L7,6L13,12L7,18L5.59,16.59L10.17,12L5.59,7.41M11.59,7.41L13,6L19,12L13,18L11.59,16.59L16.17,12L11.59,7.41Z\"\r\n            />\r\n          </SvgIcon>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"w-full p-[20px] flex flex-col justify-center\">\r\n      <MDTypography fontSize=\"20px\" fontWeight=\"bold\">\r\n        Progress Status\r\n      </MDTypography>\r\n      <div className=\"w-full flex gap-[10px] items-center\">{steps}</div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\DetailAppointment\\partial\\ProgressStatus\\index.jsx",["1540","1541","1542","1543","1544","1545"],[],"import MDTypography from \"components/MDTypography\";\r\nimport React from \"react\";\r\nimport { appointmentStatusStep } from \"_shareVar\";\r\n\r\nexport default function ProgressStatus({ status }) {\r\n  let flagCurrent = false;\r\n\r\n  if (status == \"cancel\") {\r\n    return (\r\n      <div className=\"w-full p-[20px] flex flex-col justify-center\">\r\n        <MDTypography fontSize=\"20px\" fontWeight=\"bold\">\r\n          Progress Status\r\n        </MDTypography>\r\n        <div className=\"w-full flex gap-[10px] items-center\">\r\n          <div className={`w-full min-h-[100px] bg-green-500 rounded-xl p-[10px]`}>\r\n            <MDTypography width=\"60%\" color=\"white\" fontSize=\"14px\">\r\n              Cancel\r\n            </MDTypography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const steps = appointmentStatusStep.map((item, index) => {\r\n    if (item.key == \"cancel\") {\r\n      return \"\";\r\n    }\r\n    let color = \"bg-green-500\";\r\n    if (flagCurrent == false && item.key == status) {\r\n      color = \"bg-blue-500\";\r\n      flagCurrent = true;\r\n    } else if (flagCurrent == true && item.key != status) {\r\n      color = \"bg-gray-500\";\r\n    } else {\r\n      color = \"bg-green-500\";\r\n    }\r\n    return (\r\n      <div className={`w-full ${color} rounded-xl p-[10px]`} key={index}>\r\n        <MDTypography width=\"60%\" color=\"white\" fontSize=\"14px\">\r\n          {item.value}\r\n        </MDTypography>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"w-full p-[20px] flex flex-col justify-center\">\r\n      <MDTypography fontSize=\"20px\" fontWeight=\"bold\">\r\n        Progress Status\r\n      </MDTypography>\r\n      <div className=\"w-full flex gap-[10px]\">{steps}</div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\DetailAppointment\\partial\\Header\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\DetailAppointment\\partial\\AppointmentDetail\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\DetailAppointment\\partial\\PatientDetail\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\_api\\patientApi.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\_api\\orderApi.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\_api\\appointmentApi.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\ListTableMedicalRecord\\data\\formatter\\nameFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\formatter\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\partial\\Header\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\partial\\PatientDetail\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\DetailOrder\\partial\\ProductDetail\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\formatter\\statusFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\formatter\\nameFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\formatter\\actionFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\patient\\components\\ListTablePatient\\data\\formatter\\birthDateFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\actionFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\orderDateFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\nameFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\statusFormatter.jsx",["1546"],[],"import MDBadge from \"components/MDBadge\";\r\n\r\nexport const StatusColumnFormatter = ({ status }) => {\r\n  return (\r\n    <>\r\n      {status == \"complete\" ? (\r\n        <MDBadge badgeContent=\"completed\" color=\"success\" variant=\"gradient\" size=\"sm\" />\r\n      ) : (\r\n        <MDBadge badgeContent=\"active\" color=\"warning\" variant=\"gradient\" size=\"sm\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\order\\components\\ListTableOrder\\data\\formatter\\priceFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\AddressColumnFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\NameColumnFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\BadgeColumnFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\ActionColumnFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\TimeColumnFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\TypeColumnFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\appointment\\components\\ListTableAppointment\\data\\formatter\\StatusColumnFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\DetailMedicalRecord\\index.jsx",["1547","1548","1549","1550"],[],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\r\nimport * as actions from \"../../medicalRecordAction\";\r\nimport { dateFormater } from \"helpers/DateHelpers\";\r\nimport MDButton from \"components/MDButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport MDInput from \"components/MDInput\";\r\nimport EditMedicalRecordForm from \"./EditMedicalRecordForm\";\r\nimport MDBox from \"components/MDBox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BackButton from \"components/extend/Button/BackButton\";\r\n\r\nexport default function DetailMedicalRecord() {\r\n  const [editMode, setEditMode] = useState(false);\r\n  // Get Params\r\n\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const { medicalRecord, medicalRecordActionLoading } = useSelector(\r\n    (state) => ({\r\n      medicalRecord: state.medicalRecord.medicalRecord,\r\n      medicalRecordActionLoading: state.medicalRecord.actionLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.detailMedicalRecord(params.id));\r\n\r\n    return () => {\r\n      dispatch(actions.detailMedicalRecord(undefined));\r\n    };\r\n  }, [params.id]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <MDBox\r\n        mx={2}\r\n        mt={-3}\r\n        py={3}\r\n        px={2}\r\n        variant=\"gradient\"\r\n        bgColor=\"info\"\r\n        borderRadius=\"lg\"\r\n        coloredShadow=\"info\"\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <MDBox display=\"flex\" alignItems=\"center\" gap=\"20px\">\r\n          <BackButton to=\"/medical-record/list-medical-record\" />\r\n          <MDTypography variant=\"h6\" color=\"white\">\r\n            Detail Medical Record\r\n          </MDTypography>\r\n        </MDBox>\r\n        <Link to=\"/medical-record/create\">\r\n          <MDTypography variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n            <MDButton variant=\"gradient\" color=\"success\">\r\n              Create New\r\n            </MDButton>\r\n          </MDTypography>\r\n        </Link>\r\n      </MDBox>\r\n      <div className=\"flex\">\r\n        <div className=\"w-1/2 p-[20px]\">\r\n          <MDTypography fontSize=\"20px\" fontWeight=\"bold\">\r\n            Appointment Detail\r\n          </MDTypography>\r\n\r\n          <div className=\" flex gap-[10px] \">\r\n            <MDTypography width=\"40%\" color=\"text\" fontSize=\"14px\">\r\n              Appointment Date\r\n            </MDTypography>\r\n            <MDTypography width=\"10%\" color=\"text\" fontSize=\"14px\">\r\n              :\r\n            </MDTypography>\r\n            <MDTypography width=\"50%\" color=\"text\" fontSize=\"14px\">\r\n              {dateFormater(medicalRecord?.date)}\r\n            </MDTypography>\r\n          </div>\r\n          <div className=\" flex gap-[10px] \">\r\n            <MDTypography width=\"40%\" color=\"text\" fontSize=\"14px\">\r\n              Appointment Hours\r\n            </MDTypography>\r\n            <MDTypography width=\"10%\" color=\"text\" fontSize=\"14px\">\r\n              :\r\n            </MDTypography>\r\n            <MDTypography width=\"50%\" color=\"text\" fontSize=\"14px\">\r\n              {`${medicalRecord?.time} WIB`}\r\n            </MDTypography>\r\n          </div>\r\n          <div className=\" flex gap-[10px] \">\r\n            <MDTypography width=\"40%\" color=\"text\" fontSize=\"14px\">\r\n              Physiotherapy\r\n            </MDTypography>\r\n            <MDTypography width=\"10%\" color=\"text\" fontSize=\"14px\">\r\n              :\r\n            </MDTypography>\r\n            <MDTypography width=\"50%\" color=\"text\" fontSize=\"14px\">\r\n              {`${medicalRecord?.therapist_detail.name}`}\r\n            </MDTypography>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-1/2 p-[20px]\">\r\n          <MDTypography fontSize=\"20px\" fontWeight=\"bold\">\r\n            Patient Detail\r\n          </MDTypography>\r\n\r\n          <div className=\" flex gap-[10px] \">\r\n            <MDTypography width=\"40%\" color=\"text\" fontSize=\"14px\">\r\n              Name\r\n            </MDTypography>\r\n            <MDTypography width=\"10%\" color=\"text\" fontSize=\"14px\">\r\n              :\r\n            </MDTypography>\r\n            <MDTypography width=\"50%\" color=\"text\" fontSize=\"14px\">\r\n              {medicalRecord?.patient_detail.name}\r\n            </MDTypography>\r\n          </div>\r\n          <div className=\" flex gap-[10px] \">\r\n            <MDTypography width=\"40%\" color=\"text\" fontSize=\"14px\">\r\n              Phone Number\r\n            </MDTypography>\r\n            <MDTypography width=\"10%\" color=\"text\" fontSize=\"14px\">\r\n              :\r\n            </MDTypography>\r\n            <MDTypography width=\"50%\" color=\"text\" fontSize=\"14px\">\r\n              {medicalRecord?.patient_detail.phone_number}\r\n            </MDTypography>\r\n          </div>\r\n          <div className=\" flex gap-[10px] \">\r\n            <MDTypography width=\"40%\" color=\"text\" fontSize=\"14px\">\r\n              Email\r\n            </MDTypography>\r\n            <MDTypography width=\"10%\" color=\"text\" fontSize=\"14px\">\r\n              :\r\n            </MDTypography>\r\n            <MDTypography width=\"50%\" color=\"text\" fontSize=\"14px\">\r\n              {medicalRecord?.patient_detail.email}\r\n            </MDTypography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full p-[20px] flex flex-col justify-center\">\r\n        <MDTypography color=\"dark\" fontSize=\"20px\" fontWeight=\"bold\">\r\n          Medical Record\r\n        </MDTypography>\r\n        {medicalRecord ? (\r\n          <EditMedicalRecordForm\r\n            editMode={editMode}\r\n            setEditMode={(value) => setEditMode(value)}\r\n            medicalRecord={medicalRecord ? medicalRecord : null}\r\n          />\r\n        ) : null}\r\n      </div>\r\n\r\n      <div className=\"w-full p-[20px] flex flex-col justify-center\">\r\n        <MDTypography color=\"dark\" fontSize=\"20px\" fontWeight=\"bold\">\r\n          Action\r\n        </MDTypography>\r\n        <div className=\"w-full flex gap-[10px]\">\r\n          <MDButton\r\n            variant=\"gradient\"\r\n            onClick={() => setEditMode(!editMode)}\r\n            color={editMode ? \"primary\" : \"warning\"}\r\n          >\r\n            {editMode ? \"Cancel Edit\" : \"Edit\"}\r\n          </MDButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nDetailMedicalRecord.defaultProps = {\r\n  appointment_date: \"2022-08-11T00:00:00.000Z\",\r\n  appointment_time: \"19.00\",\r\n  physiotherapy: \"test\",\r\n};\r\n\r\nDetailMedicalRecord.propTypes = {\r\n  appointment_date: PropTypes.string,\r\n  appointment_time: PropTypes.string,\r\n  physiotherapy: PropTypes.string,\r\n};\r\n","D:\\project ardhi\\getfit-admin\\src\\helpers\\DateHelpers.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\DetailMedicalRecord\\EditMedicalRecordForm\\index.jsx",["1551","1552"],[],"import React, { useEffect } from \"react\";\r\nimport MDButton from \"components/MDButton\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport { useState } from \"react\";\r\nimport DynamicForm from \"./DynamicForm\";\r\nimport { updateMedicalRecordAction } from \"layouts/medicalRecord/medicalRecordAction\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function EditMedicalRecordForm({ medicalRecord, editMode, setEditMode }) {\r\n  const [fieldMedicalRecord, setFieldMedicalRecord] = useState(medicalRecord.records);\r\n  const dispatch = useDispatch();\r\n\r\n  function addFieldHandle(index) {\r\n    setFieldMedicalRecord([...fieldMedicalRecord, { key: index, value: \" \" }]);\r\n  }\r\n\r\n  function removeFieldHandle(index) {\r\n    let tempField = [...fieldMedicalRecord];\r\n    tempField.splice(index, 1);\r\n    setFieldMedicalRecord(tempField);\r\n  }\r\n\r\n  function editFieldHandle(index, keyInput, valueInput) {\r\n    let tempField = [...fieldMedicalRecord];\r\n    if (keyInput || valueInput) {\r\n      let tempValue = {\r\n        key: keyInput ? keyInput : fieldMedicalRecord[index].key,\r\n        value: valueInput ? valueInput : fieldMedicalRecord[index].value,\r\n      };\r\n\r\n      tempField[index] = tempValue;\r\n    }\r\n    setFieldMedicalRecord(tempField);\r\n  }\r\n\r\n  function submitFieldHandle() {\r\n    dispatch(updateMedicalRecordAction(medicalRecord, fieldMedicalRecord));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFieldMedicalRecord(medicalRecord.records);\r\n  }, [editMode, medicalRecord]);\r\n\r\n  useEffect(() => {\r\n    setEditMode(false);\r\n  }, [medicalRecord.records]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full flex flex-col justify-center gap-[20px] px-[20px] border-blue-500 border-solid border-l-4\">\r\n        {editMode ? (\r\n          <DynamicForm\r\n            removeHandle={(index) => removeFieldHandle(index)}\r\n            fieldList={fieldMedicalRecord}\r\n            addHandle={(index) => addFieldHandle(index)}\r\n            editHandle={(index, key, value) => editFieldHandle(index, key, value)}\r\n            submitHandle={() => submitFieldHandle()}\r\n          />\r\n        ) : null}\r\n\r\n        {!editMode\r\n          ? fieldMedicalRecord.map((item, index) => {\r\n              return (\r\n                <div key={index} className=\"w-full flex flex-col gap-[5px] py-[20px]\">\r\n                  <MDTypography color=\"dark\" fontSize=\"14px\" fontWeight=\"bold\">\r\n                    {item.key}\r\n                  </MDTypography>\r\n                  <div className=\"w-full bg-gray-100 p-2 rounded-xl\">\r\n                    <MDTypography color=\"dark\" fontSize=\"14px\" fontWeight=\"regular\">\r\n                      {item.value}\r\n                    </MDTypography>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\DetailMedicalRecord\\EditMedicalRecordForm\\DynamicForm\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\CreateMedicalRecord\\index.jsx",["1553"],[],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport DynamicForm from \"./DynamicForm\";\r\nimport { getAllAppointment } from \"_api/appointmentApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { dateFormater } from \"helpers/DateHelpers\";\r\nimport MDInput from \"components/MDInput\";\r\nimport { createMedicalRecordAction } from \"layouts/medicalRecord/medicalRecordAction\";\r\nimport MDBox from \"components/MDBox\";\r\nimport BackButton from \"components/extend/Button/BackButton\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\nexport default function CreateMedicalRecord() {\r\n  const [fieldMedicalRecord, setFieldMedicalRecord] = useState([{ key: \"\", value: \"\" }]);\r\n  const [appointmentData, setAppointmentData] = useState(null);\r\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const MySwal = withReactContent(Swal);\r\n\r\n  useEffect(() => {\r\n    if (appointmentData === null) {\r\n      getAllAppointment()\r\n        .then((response) => {\r\n          setAppointmentData(response.data.data);\r\n        })\r\n        .catch((err) => {\r\n          err.clientMessage = \"Something went wrong\";\r\n          MySwal.fire({\r\n            title: \"Can't show Appointment\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  function addFieldHandle(index) {\r\n    setFieldMedicalRecord([...fieldMedicalRecord, { key: index, value: \" \" }]);\r\n  }\r\n\r\n  function removeFieldHandle(index) {\r\n    let tempField = [...fieldMedicalRecord];\r\n    tempField.splice(index, 1);\r\n    setFieldMedicalRecord(tempField);\r\n  }\r\n\r\n  function editFieldHandle(index, keyInput, valueInput) {\r\n    let tempField = [...fieldMedicalRecord];\r\n    if (keyInput || valueInput) {\r\n      let tempValue = {\r\n        key: keyInput ? keyInput : fieldMedicalRecord[index].key,\r\n        value: valueInput ? valueInput : fieldMedicalRecord[index].value,\r\n      };\r\n\r\n      tempField[index] = tempValue;\r\n    }\r\n    setFieldMedicalRecord(tempField);\r\n  }\r\n\r\n  function submitFieldHandle() {\r\n    if (\r\n      fieldMedicalRecord.length === 0 ||\r\n      !fieldMedicalRecord[0].key ||\r\n      !fieldMedicalRecord[0].value\r\n    ) {\r\n      MySwal.fire({\r\n        title: \"Medical Record Can't be Empty\",\r\n        icon: \"error\",\r\n      });\r\n    } else if (!selectedAppointment) {\r\n      MySwal.fire({\r\n        title: \"Select Appointment First\",\r\n        icon: \"error\",\r\n      });\r\n    } else {\r\n      dispatch(createMedicalRecordAction(appointmentData[selectedAppointment], fieldMedicalRecord));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MDBox\r\n        mx={2}\r\n        mt={-3}\r\n        py={3}\r\n        px={2}\r\n        variant=\"gradient\"\r\n        bgColor=\"info\"\r\n        borderRadius=\"lg\"\r\n        coloredShadow=\"info\"\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <MDBox display=\"flex\" alignItems=\"center\" gap=\"20px\">\r\n          <BackButton to=\"/medical-record/list-medical-record\" />\r\n          <MDTypography variant=\"h6\" color=\"white\">\r\n            Detail Medical Record\r\n          </MDTypography>\r\n        </MDBox>\r\n        <Link to=\"/medical-record/create\">\r\n          <MDTypography variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n            <MDButton variant=\"gradient\" color=\"success\">\r\n              Create New\r\n            </MDButton>\r\n          </MDTypography>\r\n        </Link>\r\n      </MDBox>\r\n      <div className=\"w-full flex flex-col justify-center items-center gap-[20px] px-[20px] my-[40px]\">\r\n        <div className=\"w-2/3  p-2 rounded-xl flex flex-col gap-[10px] relative\">\r\n          <MDInput\r\n            id=\"appointment\"\r\n            select\r\n            label=\"Select Appointment\"\r\n            onChange={(e) => setSelectedAppointment(e.target.value)}\r\n            SelectProps={{\r\n              native: true,\r\n            }}\r\n            fullWidth\r\n            helperText=\"Please Select the Appointment first...\"\r\n          >\r\n            <option value=\"\" selected></option>\r\n            {appointmentData?.map((option, index) => (\r\n              <option key={option._id} value={index}>\r\n                {`${option.appointment_type} ____ ${option.patient_detail.name} ____ ${dateFormater(\r\n                  option.date_appointment\r\n                )} ____ ${option.time_appointment} WIB`}\r\n              </option>\r\n            ))}\r\n          </MDInput>\r\n          <DynamicForm\r\n            removeHandle={(index) => removeFieldHandle(index)}\r\n            fieldList={fieldMedicalRecord}\r\n            addHandle={(index) => addFieldHandle(index)}\r\n            editHandle={(index, key, value) => editFieldHandle(index, key, value)}\r\n            submitHandle={() => submitFieldHandle()}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\medicalRecord\\components\\CreateMedicalRecord\\DynamicForm\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\index.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\notificationUIContext.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\notificationShareVar.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\ListTableNotification\\index.jsx",["1554","1555"],[],"import React, { useEffect, useMemo } from \"react\";\r\nimport DataTable from \"components/extend/Tables/DataTable\";\r\nimport notificationTableData from \"./data/notificationTableData\";\r\nimport { dataTableNotification } from \"layouts/notification/notificationAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNotificationUIContext } from \"layouts/notification/notificationUIContext\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\nexport default function ListTableNotification() {\r\n  const { currentState } = useSelector((state) => ({ currentState: state.notification }));\r\n  const { entities } = currentState;\r\n  const dispatch = useDispatch();\r\n  const notificationUIContext = useNotificationUIContext();\r\n  const notificationUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: notificationUIContext.queryParams,\r\n      setQueryParams: notificationUIContext.setQueryParams,\r\n    };\r\n  }, [notificationUIContext]);\r\n\r\n  useEffect(() => {\r\n    dispatch(dataTableNotification(notificationUIProps.queryParams));\r\n  }, [notificationUIProps.queryParams]);\r\n\r\n  const { columns, rows } = notificationTableData(entities);\r\n\r\n  return (\r\n    <>\r\n      <MDBox\r\n        mx={2}\r\n        mt={-3}\r\n        py={3}\r\n        px={2}\r\n        variant=\"gradient\"\r\n        bgColor=\"info\"\r\n        borderRadius=\"lg\"\r\n        coloredShadow=\"info\"\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <MDTypography variant=\"h6\" color=\"white\">\r\n          Notification\r\n        </MDTypography>\r\n        <Link to=\"/notification/create\">\r\n          <MDTypography variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n            <MDButton variant=\"gradient\" color=\"success\">\r\n              Create New\r\n            </MDButton>\r\n          </MDTypography>\r\n        </Link>\r\n      </MDBox>\r\n      <MDBox p={2}>\r\n        <DataTable\r\n          params={notificationUIProps.queryParams}\r\n          setParams={notificationUIProps.setQueryParams}\r\n          table={{ columns, rows }}\r\n        />\r\n      </MDBox>\r\n    </>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\notificationAction.jsx",["1556","1557"],[],"import { callTypes } from \"_slices/notificationSlice\";\r\nimport { startCall } from \"_slices/notificationSlice\";\r\nimport { catchError } from \"_slices/notificationSlice\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { notificationDataTable, notificationCategory } from \"_slices/notificationSlice\";\r\nimport {\r\n  getAllNotificationDatatable,\r\n  getAllNotificationCategory,\r\n  createNotification,\r\n  createNotificationCategory,\r\n  createNotificationWhatsapp,\r\n} from \"_api/notificationApi\";\r\nimport {} from \"_api/notificationApi\";\r\nimport { getAllAppointment } from \"_api/appointmentApi\";\r\nimport { dateFormater } from \"helpers/DateHelpers\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport const dataTableNotification = (payload) => (dispatch) => {\r\n  dispatch(startCall({ callType: callTypes.list }));\r\n  return getAllNotificationDatatable(payload)\r\n    .then((response) => {\r\n      const data = response.data.data;\r\n      dispatch(notificationDataTable({ entities: data.entities, totalCount: data.totalCount }));\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Can't show Notification List\",\r\n        icon: \"error\",\r\n      });\r\n      dispatch(catchError({ err, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const categoryNotificationAction = () => (dispatch) => {\r\n  dispatch(startCall({ callType: callTypes.list }));\r\n  return getAllNotificationCategory()\r\n    .then((response) => {\r\n      const data = response.data.data;\r\n      dispatch(notificationCategory({ entities: data }));\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Can't show Notification Category List\",\r\n        icon: \"error\",\r\n      });\r\n      dispatch(catchError({ err, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const createNotificationAction =\r\n  (patientId, isImportant, categoryId, title, description) => (dispatch) => {\r\n    const body = {\r\n      title: title,\r\n      description: description,\r\n      category_id: +categoryId,\r\n      user_id: +patientId,\r\n      is_important: isImportant,\r\n    };\r\n    dispatch(startCall({ callType: callTypes.list }));\r\n    return createNotification(body)\r\n      .then((response) => {\r\n        MySwal.fire({\r\n          title: \"Success Create Notification\",\r\n          icon: \"success\",\r\n        });\r\n        const data = response.data.data;\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        err.clientMessage = \"Something went wrong\";\r\n        MySwal.fire({\r\n          title: \"Can't show Notification Category List\",\r\n          icon: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\nexport const createNotificationCategoryAction = (title, description) => (dispatch) => {\r\n  const body = {\r\n    title: title,\r\n    description: description,\r\n  };\r\n  dispatch(startCall({ callType: callTypes.list }));\r\n  return createNotificationCategory(body)\r\n    .then((response) => {\r\n      MySwal.fire({\r\n        title: \"Success Create Notification Category\",\r\n        icon: \"success\",\r\n      });\r\n      const data = response.data.data;\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Failed Create Notification Category\",\r\n        icon: \"error\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const createNotificationWhatsappAction = (phoneNumber, message) => (dispatch) => {\r\n  const body = {\r\n    phone: phoneNumber,\r\n    messageType: \"text\",\r\n    body: message,\r\n  };\r\n  dispatch(startCall({ callType: callTypes.list }));\r\n  return createNotificationWhatsapp(body)\r\n    .then((response) => {\r\n      MySwal.fire({\r\n        title: \"Success Create Notification Category\",\r\n        icon: \"success\",\r\n      });\r\n      const data = response.data.data;\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Failed Create Notification Category\",\r\n        icon: \"error\",\r\n      });\r\n    });\r\n};\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\ListTableNotification\\data\\notificationTableData.jsx",["1558","1559","1560","1561"],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\ListTableNotification\\data\\formatter\\nameFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\ListTableNotification\\data\\formatter\\timeFormatter.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\_api\\notificationApi.jsx",[],[],"D:\\project ardhi\\getfit-admin\\src\\_slices\\notificationSlice.jsx",["1562","1563"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialNotificationState = {\r\n  listLoading: false,\r\n  actionLoading: false,\r\n  error: null,\r\n  notification: undefined,\r\n  entities: [],\r\n  category: [],\r\n  totalCount: 0,\r\n};\r\n\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\",\r\n};\r\n\r\nexport const notificationSlice = createSlice({\r\n  name: \"Notification\",\r\n  initialState: initialNotificationState,\r\n  reducers: {\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionLoading = true;\r\n      }\r\n    },\r\n    notificationDataTable: (state, action) => {\r\n      const { entities, totalCount } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    notificationCategory: (state, action) => {\r\n      const { entities } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.category = entities;\r\n    },\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}:${action.payload.error}`;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionLoading = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { startCall, notificationDataTable, notificationCategory, catchError } =\r\n  notificationSlice.actions;\r\n\r\nexport default notificationSlice.reducer;\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\CreateNotification\\index.jsx",["1564"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport MDBox from \"components/MDBox\";\r\nimport BackButton from \"components/extend/Button/BackButton\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport NotificationForm from \"./notificationForm\";\r\nimport CategoryForm from \"./categoryForm\";\r\nimport WhatsappForm from \"./whatsAppForm\";\r\n\r\nimport MDButton from \"components/MDButton\";\r\n\r\nexport default function CreateNotification() {\r\n  const [mode, setMode] = useState(\"notification\");\r\n  return (\r\n    <>\r\n      <MDBox\r\n        mx={2}\r\n        mt={-3}\r\n        py={3}\r\n        px={2}\r\n        variant=\"gradient\"\r\n        bgColor=\"info\"\r\n        borderRadius=\"lg\"\r\n        coloredShadow=\"info\"\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <MDBox display=\"flex\" alignItems=\"center\" gap=\"20px\">\r\n          <BackButton to=\"/notification/list-notification\" />\r\n          <MDTypography variant=\"h6\" color=\"white\">\r\n            Create Notification\r\n          </MDTypography>\r\n        </MDBox>\r\n        <div className=\"flex gap-[10px]\">\r\n          <MDButton\r\n            variant=\"gradient\"\r\n            onClick={() => setMode(\"category\")}\r\n            color={mode === \"category\" ? \"success\" : \"secondary\"}\r\n          >\r\n            Create Category\r\n          </MDButton>\r\n          <MDButton\r\n            variant=\"gradient\"\r\n            onClick={() => setMode(\"notification\")}\r\n            color={mode === \"notification\" ? \"success\" : \"secondary\"}\r\n          >\r\n            Create Notification\r\n          </MDButton>\r\n          <MDButton\r\n            variant=\"gradient\"\r\n            onClick={() => setMode(\"whatsapp\")}\r\n            color={mode === \"whatsapp\" ? \"success\" : \"secondary\"}\r\n          >\r\n            Whatsapp Message\r\n          </MDButton>\r\n        </div>\r\n      </MDBox>\r\n\r\n      <div className=\"w-full flex flex-col justify-center items-center gap-[20px] px-[20px] my-[40px]\">\r\n        <div className=\"w-2/3  p-2 rounded-xl flex flex-col gap-[10px] relative \">\r\n          {mode === \"notification\" ? <NotificationForm /> : null}\r\n          {mode === \"category\" ? <CategoryForm /> : null}\r\n          {mode === \"whatsapp\" ? <WhatsappForm /> : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\CreateNotification\\notificationForm\\index.jsx",["1565","1566","1567","1568","1569","1570","1571","1572"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport MDBox from \"components/MDBox\";\r\nimport BackButton from \"components/extend/Button/BackButton\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDInput from \"components/MDInput\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MDButton from \"components/MDButton\";\r\nimport { getAllPatient } from \"_api/patientApi\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { categoryNotificationAction } from \"layouts/notification/notificationAction\";\r\nimport { createNotificationAction } from \"layouts/notification/notificationAction\";\r\n\r\nexport default function NotificationForm() {\r\n  const dispatch = useDispatch();\r\n  const [patientData, setPatientData] = useState();\r\n  const [patientOptions, setPatientOptions] = useState([]);\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedPatient, setSelectedPatient] = useState();\r\n  const [selectedPriority, setSelectedPriority] = useState();\r\n  const [selectedCategory, setSelectedCategory] = useState();\r\n  const [inputMessage, setInputMessage] = useState();\r\n  const [inputTitle, setInputTitle] = useState();\r\n  const animatedComponents = makeAnimated();\r\n  const MySwal = withReactContent(Swal);\r\n  const priorityOptions = [\r\n    { value: true, label: \"important\" },\r\n    { value: false, label: \"Regular\" },\r\n  ];\r\n  const { category } = useSelector((state) => ({ category: state.notification.category }));\r\n\r\n  useEffect(() => {\r\n    if (!patientData) {\r\n      getAllPatient()\r\n        .then((response) => {\r\n          setPatientData(response.data.data);\r\n        })\r\n        .catch((error) => {\r\n          MySwal.fire({\r\n            title: \"Error Get Patient Data\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    } else {\r\n      let tempOptions = [];\r\n      patientData.map((item, index) => {\r\n        tempOptions = [...tempOptions, { value: item.user_id, label: item.user.name }];\r\n      });\r\n      setPatientOptions(tempOptions);\r\n    }\r\n  }, [patientData]);\r\n\r\n  // if redux category is not define , re fetch from action\r\n  useEffect(() => {\r\n    dispatch(categoryNotificationAction());\r\n  }, []);\r\n\r\n  //filling the options for category\r\n  useEffect(() => {\r\n    let tempOptions = [];\r\n    category?.map((item, index) => {\r\n      tempOptions = [...tempOptions, { value: item.id, label: item.title }];\r\n    });\r\n    setCategoryOptions(tempOptions);\r\n  }, [category]);\r\n\r\n  function handleSubmit() {\r\n    selectedPatient.map((patientId) => {\r\n      dispatch(\r\n        createNotificationAction(\r\n          patientId,\r\n          selectedPriority,\r\n          selectedCategory,\r\n          inputTitle,\r\n          inputMessage\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  function handleSelectedPatient(e) {\r\n    let tempPatient = [];\r\n    e.map((item) => {\r\n      tempPatient = [...tempPatient, item.value];\r\n    });\r\n    setSelectedPatient(tempPatient);\r\n  }\r\n  return (\r\n    <div className=\"animation-popup flex flex-col gap-[20px] mt-[20px]\">\r\n      <MDBox display=\"flex\" justifyContent=\"center\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          CREATE NOTIFICATION\r\n        </MDTypography>\r\n      </MDBox>\r\n      <MDBox display=\"flex-column\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          Select Patient\r\n        </MDTypography>\r\n        <Select\r\n          className=\"basic-single text-[14px]\"\r\n          closeMenuOnSelect={false}\r\n          components={animatedComponents}\r\n          onChange={(e) => handleSelectedPatient(e)}\r\n          isMulti\r\n          options={patientOptions}\r\n        />\r\n      </MDBox>\r\n      <MDBox display=\"flex-column\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          Select Level\r\n        </MDTypography>\r\n        <Select\r\n          className=\"basic-single text-[14px]\"\r\n          classNamePrefix=\"select\"\r\n          isSearchable={true}\r\n          name=\"color\"\r\n          options={priorityOptions}\r\n          onChange={(e) => setSelectedPriority(e.value)}\r\n        />\r\n      </MDBox>\r\n      <MDBox display=\"flex-column\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          Select Category\r\n        </MDTypography>\r\n        <Select\r\n          className=\"basic-single text-[14px]\"\r\n          classNamePrefix=\"select\"\r\n          isSearchable={true}\r\n          name=\"color\"\r\n          options={categoryOptions}\r\n          onChange={(e) => setSelectedCategory(e.value)}\r\n        />\r\n      </MDBox>\r\n      <MDBox display=\"flex-column\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          Input Title\r\n        </MDTypography>\r\n        <MDInput\r\n          fullWidth\r\n          required\r\n          label=\"Message\"\r\n          onChange={(e) => setInputTitle(e.target.value)}\r\n          multiline\r\n          rows={1}\r\n        />\r\n      </MDBox>\r\n      <MDBox display=\"flex-column\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          Input Message\r\n        </MDTypography>\r\n        <MDInput\r\n          fullWidth\r\n          required\r\n          label=\"Message\"\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          multiline\r\n          rows={5}\r\n        />\r\n      </MDBox>\r\n\r\n      <MDButton variant=\"gradient\" color=\"success\" onClick={() => handleSubmit()}>\r\n        Send\r\n      </MDButton>\r\n    </div>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\CreateNotification\\categoryForm\\index.jsx",["1573"],[],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  categoryNotificationAction,\r\n  createNotificationCategoryAction,\r\n} from \"layouts/notification/notificationAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDInput from \"components/MDInput\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\nexport default function CategoryForm() {\r\n  const [inputTitle, setInputTitle] = useState();\r\n  const [inputDescription, setInputDescription] = useState();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(categoryNotificationAction());\r\n  }, []);\r\n\r\n  function handleSubmit() {\r\n    dispatch(createNotificationCategoryAction(inputTitle, inputDescription));\r\n  }\r\n  return (\r\n    <div className=\"animation-popup flex flex-col gap-[20px] mt-[20px]\">\r\n      <MDBox display=\"flex\" justifyContent=\"center\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          CREATE CATEGORY NOTIFICATION\r\n        </MDTypography>\r\n      </MDBox>\r\n\r\n      <MDBox display=\"flex-column\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          Input Title Category\r\n        </MDTypography>\r\n        <MDInput\r\n          fullWidth\r\n          required\r\n          label=\"Message\"\r\n          onChange={(e) => setInputTitle(e.target.value)}\r\n          multiline\r\n          rows={1}\r\n        />\r\n      </MDBox>\r\n      <MDBox display=\"flex-column\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          Input Description Category\r\n        </MDTypography>\r\n        <MDInput\r\n          fullWidth\r\n          required\r\n          label=\"Message\"\r\n          onChange={(e) => setInputDescription(e.target.value)}\r\n          multiline\r\n          rows={5}\r\n        />\r\n      </MDBox>\r\n\r\n      <MDButton variant=\"gradient\" color=\"success\" onClick={() => handleSubmit()}>\r\n        Send\r\n      </MDButton>\r\n    </div>\r\n  );\r\n}\r\n","D:\\project ardhi\\getfit-admin\\src\\layouts\\notification\\components\\CreateNotification\\whatsAppForm\\index.jsx",["1574","1575","1576","1577","1578","1579","1580"],[],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  categoryNotificationAction,\r\n  createNotificationCategoryAction,\r\n} from \"layouts/notification/notificationAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDInput from \"components/MDInput\";\r\nimport MDButton from \"components/MDButton\";\r\nimport { getAllPatient } from \"_api/patientApi\";\r\nimport Swal from \"sweetalert2\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Select from \"react-select\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport { createNotificationWhatsappAction } from \"layouts/notification/notificationAction\";\r\n\r\nexport default function WhatsappForm() {\r\n  const [inputMessage, setInputMessage] = useState();\r\n  const [patientData, setPatientData] = useState();\r\n  const [patientOptions, setPatientOptions] = useState([]);\r\n  const [selectedPatient, setSelectedPatient] = useState();\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const MySwal = withReactContent(Swal);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(categoryNotificationAction());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!patientData) {\r\n      getAllPatient()\r\n        .then((response) => {\r\n          setPatientData(response.data.data);\r\n        })\r\n        .catch((error) => {\r\n          MySwal.fire({\r\n            title: \"Error Get Patient Data\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    } else {\r\n      let tempOptions = [];\r\n      patientData.map((item, index) => {\r\n        tempOptions = [...tempOptions, { value: item.user.phone_number, label: item.user.name }];\r\n      });\r\n      setPatientOptions(tempOptions);\r\n    }\r\n  }, [patientData]);\r\n\r\n  function handleSelectedPatient(e) {\r\n    let tempPatient = [];\r\n    e.map((item) => {\r\n      tempPatient = [...tempPatient, item.value];\r\n    });\r\n    setSelectedPatient(tempPatient);\r\n  }\r\n\r\n  function handleSubmit() {\r\n    console.log(inputMessage);\r\n    console.log(selectedPatient);\r\n    if (selectedPatient.length > 0) {\r\n      let flag = true;\r\n      for (let i = 0; i < selectedPatient.length; i++) {\r\n        if (selectedPatient[i].charAt(0) !== \"6\") {\r\n          MySwal.fire({\r\n            title: `Please Change the first character on Phone Number with 62`,\r\n            icon: \"error\",\r\n          });\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        selectedPatient.map((item) => {\r\n          dispatch(createNotificationWhatsappAction(item, inputMessage));\r\n        });\r\n      }\r\n    } else {\r\n      MySwal.fire({\r\n        title: \"Please Select Patient/Input Phone Number First\",\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"animation-popup flex flex-col gap-[20px] mt-[20px]\">\r\n      <MDBox display=\"flex\" justifyContent=\"center\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          CREATE CATEGORY NOTIFICATION\r\n        </MDTypography>\r\n      </MDBox>\r\n      <MDBox display=\"flex-column\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          Select Patient\r\n        </MDTypography>\r\n        <CreatableSelect\r\n          className=\"basic-single text-[14px] z-10\"\r\n          closeMenuOnSelect={false}\r\n          components={animatedComponents}\r\n          onChange={(e) => handleSelectedPatient(e)}\r\n          isMulti\r\n          options={patientOptions}\r\n        />\r\n      </MDBox>\r\n      <MDBox display=\"flex-column\" alignItems=\"center\" gap=\"20px\">\r\n        <MDTypography variant=\"h6\" color=\"text\">\r\n          Input Message\r\n        </MDTypography>\r\n        <MDInput\r\n          fullWidth\r\n          required\r\n          label=\"Message\"\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          multiline\r\n          rows={5}\r\n        />\r\n      </MDBox>\r\n\r\n      <MDButton variant=\"gradient\" color=\"success\" onClick={() => handleSubmit()}>\r\n        Send\r\n      </MDButton>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"1581","severity":1,"message":"1582","line":83,"column":6,"nodeType":"1583","endLine":83,"endColumn":26,"suggestions":"1584"},{"ruleId":"1585","severity":1,"message":"1586","line":19,"column":8,"nodeType":"1587","messageId":"1588","endLine":19,"endColumn":20},{"ruleId":"1585","severity":1,"message":"1589","line":23,"column":8,"nodeType":"1587","messageId":"1588","endLine":23,"endColumn":16},{"ruleId":"1585","severity":1,"message":"1590","line":24,"column":10,"nodeType":"1587","messageId":"1588","endLine":24,"endColumn":14},{"ruleId":"1585","severity":1,"message":"1591","line":32,"column":7,"nodeType":"1587","messageId":"1588","endLine":32,"endColumn":15},{"ruleId":"1581","severity":1,"message":"1592","line":59,"column":6,"nodeType":"1583","endLine":59,"endColumn":12,"suggestions":"1593"},{"ruleId":"1594","severity":1,"message":"1595","line":16,"column":1,"nodeType":"1596","endLine":19,"endColumn":3},{"ruleId":"1594","severity":1,"message":"1595","line":16,"column":1,"nodeType":"1596","endLine":25,"endColumn":3},{"ruleId":"1581","severity":1,"message":"1597","line":37,"column":6,"nodeType":"1583","endLine":37,"endColumn":16,"suggestions":"1598"},{"ruleId":"1581","severity":1,"message":"1597","line":37,"column":6,"nodeType":"1583","endLine":37,"endColumn":16,"suggestions":"1599"},{"ruleId":"1581","severity":1,"message":"1600","line":57,"column":11,"nodeType":"1583","endLine":57,"endColumn":25,"suggestions":"1601"},{"ruleId":"1581","severity":1,"message":"1600","line":57,"column":11,"nodeType":"1583","endLine":57,"endColumn":25,"suggestions":"1602"},{"ruleId":"1585","severity":1,"message":"1603","line":23,"column":33,"nodeType":"1587","messageId":"1588","endLine":23,"endColumn":44},{"ruleId":"1581","severity":1,"message":"1597","line":29,"column":6,"nodeType":"1583","endLine":29,"endColumn":38,"suggestions":"1604"},{"ruleId":"1585","severity":1,"message":"1603","line":24,"column":33,"nodeType":"1587","messageId":"1588","endLine":24,"endColumn":44},{"ruleId":"1581","severity":1,"message":"1597","line":29,"column":6,"nodeType":"1583","endLine":29,"endColumn":34,"suggestions":"1605"},{"ruleId":"1585","severity":1,"message":"1603","line":23,"column":33,"nodeType":"1587","messageId":"1588","endLine":23,"endColumn":44},{"ruleId":"1581","severity":1,"message":"1597","line":28,"column":6,"nodeType":"1583","endLine":28,"endColumn":32,"suggestions":"1606"},{"ruleId":"1581","severity":1,"message":"1607","line":84,"column":52,"nodeType":"1583","endLine":84,"endColumn":66,"suggestions":"1608"},{"ruleId":"1581","severity":1,"message":"1597","line":36,"column":6,"nodeType":"1583","endLine":36,"endColumn":16,"suggestions":"1609"},{"ruleId":"1581","severity":1,"message":"1607","line":98,"column":6,"nodeType":"1583","endLine":98,"endColumn":20,"suggestions":"1610"},{"ruleId":"1581","severity":1,"message":"1611","line":105,"column":6,"nodeType":"1583","endLine":105,"endColumn":17,"suggestions":"1612"},{"ruleId":"1585","severity":1,"message":"1613","line":7,"column":8,"nodeType":"1587","messageId":"1588","endLine":7,"endColumn":16},{"ruleId":"1585","severity":1,"message":"1614","line":15,"column":11,"nodeType":"1587","messageId":"1588","endLine":15,"endColumn":21},{"ruleId":"1585","severity":1,"message":"1603","line":15,"column":33,"nodeType":"1587","messageId":"1588","endLine":15,"endColumn":44},{"ruleId":"1581","severity":1,"message":"1597","line":27,"column":6,"nodeType":"1583","endLine":27,"endColumn":40,"suggestions":"1615"},{"ruleId":"1585","severity":1,"message":"1616","line":19,"column":8,"nodeType":"1587","messageId":"1588","endLine":19,"endColumn":13},{"ruleId":"1585","severity":1,"message":"1613","line":21,"column":8,"nodeType":"1587","messageId":"1588","endLine":21,"endColumn":16},{"ruleId":"1585","severity":1,"message":"1617","line":27,"column":8,"nodeType":"1587","messageId":"1588","endLine":27,"endColumn":13},{"ruleId":"1585","severity":1,"message":"1618","line":28,"column":8,"nodeType":"1587","messageId":"1588","endLine":28,"endColumn":13},{"ruleId":"1581","severity":1,"message":"1582","line":83,"column":6,"nodeType":"1583","endLine":83,"endColumn":26,"suggestions":"1619"},{"ruleId":"1620","severity":1,"message":"1621","line":23,"column":35,"nodeType":"1622","messageId":"1623","endLine":23,"endColumn":37},{"ruleId":"1620","severity":1,"message":"1621","line":43,"column":35,"nodeType":"1622","messageId":"1623","endLine":43,"endColumn":37},{"ruleId":"1585","severity":1,"message":"1624","line":13,"column":10,"nodeType":"1587","messageId":"1588","endLine":13,"endColumn":27},{"ruleId":"1585","severity":1,"message":"1625","line":109,"column":13,"nodeType":"1587","messageId":"1588","endLine":109,"endColumn":17},{"ruleId":"1620","severity":1,"message":"1621","line":23,"column":35,"nodeType":"1622","messageId":"1623","endLine":23,"endColumn":37},{"ruleId":"1620","severity":1,"message":"1621","line":43,"column":35,"nodeType":"1622","messageId":"1623","endLine":43,"endColumn":37},{"ruleId":"1620","severity":1,"message":"1621","line":23,"column":35,"nodeType":"1622","messageId":"1623","endLine":23,"endColumn":37},{"ruleId":"1620","severity":1,"message":"1621","line":43,"column":35,"nodeType":"1622","messageId":"1623","endLine":43,"endColumn":37},{"ruleId":"1620","severity":1,"message":"1621","line":23,"column":35,"nodeType":"1622","messageId":"1623","endLine":23,"endColumn":37},{"ruleId":"1620","severity":1,"message":"1621","line":43,"column":35,"nodeType":"1622","messageId":"1623","endLine":43,"endColumn":37},{"ruleId":"1620","severity":1,"message":"1621","line":22,"column":35,"nodeType":"1622","messageId":"1623","endLine":22,"endColumn":37},{"ruleId":"1620","severity":1,"message":"1621","line":57,"column":35,"nodeType":"1622","messageId":"1623","endLine":57,"endColumn":37},{"ruleId":"1585","severity":1,"message":"1626","line":9,"column":8,"nodeType":"1587","messageId":"1588","endLine":9,"endColumn":24},{"ruleId":"1585","severity":1,"message":"1627","line":20,"column":16,"nodeType":"1587","messageId":"1588","endLine":20,"endColumn":23},{"ruleId":"1620","severity":1,"message":"1621","line":88,"column":32,"nodeType":"1622","messageId":"1623","endLine":88,"endColumn":34},{"ruleId":"1628","severity":1,"message":"1629","line":42,"column":76,"nodeType":"1630","messageId":"1631","endLine":42,"endColumn":78},{"ruleId":"1620","severity":1,"message":"1621","line":43,"column":31,"nodeType":"1622","messageId":"1623","endLine":43,"endColumn":33},{"ruleId":"1620","severity":1,"message":"1632","line":76,"column":34,"nodeType":"1622","messageId":"1623","endLine":76,"endColumn":36},{"ruleId":"1620","severity":1,"message":"1621","line":21,"column":35,"nodeType":"1622","messageId":"1623","endLine":21,"endColumn":37},{"ruleId":"1620","severity":1,"message":"1621","line":58,"column":35,"nodeType":"1622","messageId":"1623","endLine":58,"endColumn":37},{"ruleId":"1620","severity":1,"message":"1621","line":9,"column":14,"nodeType":"1622","messageId":"1623","endLine":9,"endColumn":16},{"ruleId":"1620","severity":1,"message":"1621","line":27,"column":18,"nodeType":"1622","messageId":"1623","endLine":27,"endColumn":20},{"ruleId":"1620","severity":1,"message":"1621","line":31,"column":21,"nodeType":"1622","messageId":"1623","endLine":31,"endColumn":23},{"ruleId":"1620","severity":1,"message":"1621","line":31,"column":42,"nodeType":"1622","messageId":"1623","endLine":31,"endColumn":44},{"ruleId":"1620","severity":1,"message":"1621","line":34,"column":28,"nodeType":"1622","messageId":"1623","endLine":34,"endColumn":30},{"ruleId":"1620","severity":1,"message":"1632","line":34,"column":48,"nodeType":"1622","messageId":"1623","endLine":34,"endColumn":50},{"ruleId":"1620","severity":1,"message":"1632","line":47,"column":16,"nodeType":"1622","messageId":"1623","endLine":47,"endColumn":18},{"ruleId":"1620","severity":1,"message":"1621","line":8,"column":14,"nodeType":"1622","messageId":"1623","endLine":8,"endColumn":16},{"ruleId":"1620","severity":1,"message":"1621","line":26,"column":18,"nodeType":"1622","messageId":"1623","endLine":26,"endColumn":20},{"ruleId":"1620","severity":1,"message":"1621","line":30,"column":21,"nodeType":"1622","messageId":"1623","endLine":30,"endColumn":23},{"ruleId":"1620","severity":1,"message":"1621","line":30,"column":42,"nodeType":"1622","messageId":"1623","endLine":30,"endColumn":44},{"ruleId":"1620","severity":1,"message":"1621","line":33,"column":28,"nodeType":"1622","messageId":"1623","endLine":33,"endColumn":30},{"ruleId":"1620","severity":1,"message":"1632","line":33,"column":48,"nodeType":"1622","messageId":"1623","endLine":33,"endColumn":50},{"ruleId":"1620","severity":1,"message":"1621","line":6,"column":15,"nodeType":"1622","messageId":"1623","endLine":6,"endColumn":17},{"ruleId":"1585","severity":1,"message":"1633","line":9,"column":10,"nodeType":"1587","messageId":"1588","endLine":9,"endColumn":17},{"ruleId":"1585","severity":1,"message":"1634","line":10,"column":8,"nodeType":"1587","messageId":"1588","endLine":10,"endColumn":15},{"ruleId":"1585","severity":1,"message":"1635","line":22,"column":26,"nodeType":"1587","messageId":"1588","endLine":22,"endColumn":52},{"ruleId":"1581","severity":1,"message":"1597","line":36,"column":6,"nodeType":"1583","endLine":36,"endColumn":17,"suggestions":"1636"},{"ruleId":"1585","severity":1,"message":"1589","line":2,"column":8,"nodeType":"1587","messageId":"1588","endLine":2,"endColumn":16},{"ruleId":"1581","severity":1,"message":"1637","line":46,"column":6,"nodeType":"1583","endLine":46,"endColumn":29,"suggestions":"1638"},{"ruleId":"1581","severity":1,"message":"1639","line":38,"column":6,"nodeType":"1583","endLine":38,"endColumn":8,"suggestions":"1640"},{"ruleId":"1585","severity":1,"message":"1613","line":7,"column":8,"nodeType":"1587","messageId":"1588","endLine":7,"endColumn":16},{"ruleId":"1581","severity":1,"message":"1597","line":27,"column":6,"nodeType":"1583","endLine":27,"endColumn":39,"suggestions":"1641"},{"ruleId":"1585","severity":1,"message":"1624","line":15,"column":10,"nodeType":"1587","messageId":"1588","endLine":15,"endColumn":27},{"ruleId":"1585","severity":1,"message":"1642","line":16,"column":10,"nodeType":"1587","messageId":"1588","endLine":16,"endColumn":22},{"ruleId":"1585","severity":1,"message":"1616","line":19,"column":8,"nodeType":"1587","messageId":"1588","endLine":19,"endColumn":13},{"ruleId":"1585","severity":1,"message":"1613","line":21,"column":8,"nodeType":"1587","messageId":"1588","endLine":21,"endColumn":16},{"ruleId":"1585","severity":1,"message":"1617","line":27,"column":8,"nodeType":"1587","messageId":"1588","endLine":27,"endColumn":13},{"ruleId":"1585","severity":1,"message":"1618","line":28,"column":8,"nodeType":"1587","messageId":"1588","endLine":28,"endColumn":13},{"ruleId":"1620","severity":1,"message":"1621","line":24,"column":35,"nodeType":"1622","messageId":"1623","endLine":24,"endColumn":37},{"ruleId":"1620","severity":1,"message":"1621","line":45,"column":35,"nodeType":"1622","messageId":"1623","endLine":45,"endColumn":37},{"ruleId":"1585","severity":1,"message":"1643","line":1,"column":17,"nodeType":"1587","messageId":"1588","endLine":1,"endColumn":26},{"ruleId":"1585","severity":1,"message":"1644","line":4,"column":8,"nodeType":"1587","messageId":"1588","endLine":4,"endColumn":18},{"ruleId":"1585","severity":1,"message":"1590","line":7,"column":10,"nodeType":"1587","messageId":"1588","endLine":7,"endColumn":14},{"ruleId":"1628","severity":1,"message":"1645","line":50,"column":37,"nodeType":"1630","messageId":"1646","endLine":50,"endColumn":39},{"ruleId":"1581","severity":1,"message":"1647","line":55,"column":6,"nodeType":"1583","endLine":55,"endColumn":19,"suggestions":"1648"},{"ruleId":"1581","severity":1,"message":"1597","line":60,"column":6,"nodeType":"1583","endLine":60,"endColumn":8,"suggestions":"1649"},{"ruleId":"1628","severity":1,"message":"1645","line":65,"column":33,"nodeType":"1630","messageId":"1646","endLine":65,"endColumn":35},{"ruleId":"1628","severity":1,"message":"1645","line":72,"column":37,"nodeType":"1630","messageId":"1646","endLine":72,"endColumn":39},{"ruleId":"1628","severity":1,"message":"1645","line":87,"column":18,"nodeType":"1630","messageId":"1646","endLine":87,"endColumn":20},{"ruleId":"1581","severity":1,"message":"1597","line":18,"column":6,"nodeType":"1583","endLine":18,"endColumn":8,"suggestions":"1650"},{"ruleId":"1585","severity":1,"message":"1651","line":4,"column":3,"nodeType":"1587","messageId":"1588","endLine":4,"endColumn":35},{"ruleId":"1585","severity":1,"message":"1652","line":15,"column":8,"nodeType":"1587","messageId":"1588","endLine":15,"endColumn":14},{"ruleId":"1581","severity":1,"message":"1597","line":30,"column":6,"nodeType":"1583","endLine":30,"endColumn":8,"suggestions":"1653"},{"ruleId":"1628","severity":1,"message":"1645","line":46,"column":37,"nodeType":"1630","messageId":"1646","endLine":46,"endColumn":39},{"ruleId":"1581","severity":1,"message":"1647","line":51,"column":6,"nodeType":"1583","endLine":51,"endColumn":19,"suggestions":"1654"},{"ruleId":"1628","severity":1,"message":"1645","line":55,"column":18,"nodeType":"1630","messageId":"1646","endLine":55,"endColumn":20},{"ruleId":"1628","severity":1,"message":"1645","line":78,"column":36,"nodeType":"1630","messageId":"1646","endLine":78,"endColumn":38},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'transparentSidenav' and 'whiteSidenav'. Either include them or remove the dependency array.","ArrayExpression",["1655"],"no-unused-vars","'MDTypography' is defined but never used.","Identifier","unusedVar","'MDButton' is defined but never used.","'Link' is defined but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["1656"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1657"],["1658"],"React Hook useMemo has missing dependencies: 'data' and 'options'. Either include them or remove the dependency array.",["1659"],["1660"],"'listLoading' is assigned a value but never used.",["1661"],["1662"],["1663"],"React Hook useEffect has a missing dependency: 'setPageSize'. Either include it or remove the dependency array.",["1664"],["1665"],["1666"],"React Hook useEffect has missing dependencies: 'params' and 'setParams'. Either include them or remove the dependency array. If 'setParams' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1667"],"'MDAvatar' is defined but never used.","'totalCount' is assigned a value but never used.",["1668"],"'MDBox' is defined but never used.","'team3' is defined but never used.","'team4' is defined but never used.",["1669"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getAllAppointment' is defined but never used.","'data' is assigned a value but never used.","'PlatformSettings' is defined but never used.","'SvgIcon' is defined but never used.","array-callback-return","Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","'useForm' is defined but never used.","'MDInput' is defined but never used.","'medicalRecordActionLoading' is assigned a value but never used.",["1670"],"React Hook useEffect has a missing dependency: 'setEditMode'. Either include it or remove the dependency array. If 'setEditMode' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1671"],"React Hook useEffect has missing dependencies: 'MySwal' and 'appointmentData'. Either include them or remove the dependency array.",["1672"],["1673"],"'dateFormater' is defined but never used.","'useEffect' is defined but never used.","'BackButton' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'MySwal'. Either include it or remove the dependency array.",["1674"],["1675"],["1676"],"'createNotificationCategoryAction' is defined but never used.","'Select' is defined but never used.",["1677"],["1678"],{"desc":"1679","fix":"1680"},{"desc":"1681","fix":"1682"},{"desc":"1683","fix":"1684"},{"desc":"1683","fix":"1685"},{"desc":"1686","fix":"1687"},{"desc":"1686","fix":"1688"},{"desc":"1689","fix":"1690"},{"desc":"1691","fix":"1692"},{"desc":"1693","fix":"1694"},{"desc":"1695","fix":"1696"},{"desc":"1683","fix":"1697"},{"desc":"1695","fix":"1698"},{"desc":"1699","fix":"1700"},{"desc":"1701","fix":"1702"},{"desc":"1679","fix":"1703"},{"desc":"1704","fix":"1705"},{"desc":"1706","fix":"1707"},{"desc":"1708","fix":"1709"},{"desc":"1710","fix":"1711"},{"desc":"1712","fix":"1713"},{"desc":"1714","fix":"1715"},{"desc":"1714","fix":"1716"},{"desc":"1714","fix":"1717"},{"desc":"1712","fix":"1718"},"Update the dependencies array to be: [dispatch, location, transparentSidenav, whiteSidenav]",{"range":"1719","text":"1720"},"Update the dependencies array to be: [navigate, user]",{"range":"1721","text":"1722"},"Update the dependencies array to be: [dispatch, pathname]",{"range":"1723","text":"1724"},{"range":"1725","text":"1724"},"Update the dependencies array to be: [color, data, options]",{"range":"1726","text":"1727"},{"range":"1728","text":"1727"},"Update the dependencies array to be: [appointmentUIProps.queryParams, dispatch]",{"range":"1729","text":"1730"},"Update the dependencies array to be: [dispatch, patientUIProps.queryParams]",{"range":"1731","text":"1732"},"Update the dependencies array to be: [dispatch, orderUIProps.queryParams]",{"range":"1733","text":"1734"},"Update the dependencies array to be: [defaultValue, setPageSize]",{"range":"1735","text":"1736"},{"range":"1737","text":"1724"},{"range":"1738","text":"1736"},"Update the dependencies array to be: [pageIndex, params, setParams]",{"range":"1739","text":"1740"},"Update the dependencies array to be: [dispatch, medicalRecordUIProps.queryParams]",{"range":"1741","text":"1742"},{"range":"1743","text":"1720"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"1744","text":"1745"},"Update the dependencies array to be: [medicalRecord.records, setEditMode]",{"range":"1746","text":"1747"},"Update the dependencies array to be: [MySwal, appointmentData]",{"range":"1748","text":"1749"},"Update the dependencies array to be: [dispatch, notificationUIProps.queryParams]",{"range":"1750","text":"1751"},"Update the dependencies array to be: [MySwal, patientData]",{"range":"1752","text":"1753"},"Update the dependencies array to be: [dispatch]",{"range":"1754","text":"1755"},{"range":"1756","text":"1755"},{"range":"1757","text":"1755"},{"range":"1758","text":"1753"},[2869,2889],"[dispatch, location, transparentSidenav, whiteSidenav]",[1964,1970],"[navigate, user]",[1188,1198],"[dispatch, pathname]",[1188,1198],[1784,1798],"[color, data, options]",[1790,1804],[1179,1211],"[appointmentUIProps.queryParams, dispatch]",[1109,1137],"[dispatch, patientUIProps.queryParams]",[1068,1094],"[dispatch, orderUIProps.queryParams]",[2676,2690],"[defaultValue, setPageSize]",[1141,1151],[2875,2889],[2992,3003],"[pageIndex, params, setParams]",[1269,1303],"[dispatch, medicalRecordUIProps.queryParams]",[2869,2889],[1314,1325],"[dispatch, params.id]",[1542,1565],"[medicalRecord.records, setEditMode]",[1499,1501],"[MySwal, appointmentData]",[1226,1259],"[dispatch, notificationUIProps.queryParams]",[2203,2216],"[MySwal, patientData]",[2354,2356],"[dispatch]",[670,672],[1253,1255],[1822,1835]]