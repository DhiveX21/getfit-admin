{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { setStorage, removeStorage } from \"helpers/LocalStorageHelpers\";\nconst initialUserState = {\n  listLoading: false,\n  actionLoading: false,\n  error: null,\n  user: undefined\n};\nexport const callTypes = {\n  list: \"list\",\n  action: \"action\"\n};\nexport const userSlice = createSlice({\n  name: \"Sign In\",\n  initialState: initialUserState,\n  reducers: {\n    startCall: (state, action) => {\n      state.error = null;\n\n      if (action.payload.callType == callTypes.list) {\n        state.listLoading = true;\n      } else {\n        state.actionLoading = true;\n      }\n    },\n    signIn: (state, action) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n\n      /* eslint-disable no-param-reassign */\n      state.user = {\n        email: action.payload.user.email,\n        token: action.payload.user.token\n      };\n      state.actionLoading = false;\n      setStorage(\"credentials\", JSON.stringify(state.user), 360 * 24 * 60 * 60);\n    },\n    signOut: state => {\n      /* eslint-disable no-param-reassign */\n      state.user = null; // eslint-disable-line no-param-reassign\n\n      /* eslint-enable no-param-reassign */\n\n      removeStorage(\"credentials\");\n      console.log(state);\n    },\n    incrementByAmount: (state, action) => {\n      //   state.value += action.payload;\n      console.log(state);\n      console.log(action);\n    },\n    catchError: (state, action) => {\n      state.error = `${action.type}:${action.payload.error}`;\n\n      if (action.payload.callType == callTypes.list) {\n        state.listLoading = false;\n      } else {\n        state.actionLoading = false;\n      }\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  startCall,\n  signIn,\n  signOut,\n  incrementByAmount,\n  catchError\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","setStorage","removeStorage","initialUserState","listLoading","actionLoading","error","user","undefined","callTypes","list","action","userSlice","name","initialState","reducers","startCall","state","payload","callType","signIn","email","token","JSON","stringify","signOut","console","log","incrementByAmount","catchError","type","actions","reducer"],"sources":["D:/project ardhi/getfit-admin/src/_slices/userSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setStorage, removeStorage } from \"helpers/LocalStorageHelpers\";\r\n\r\nconst initialUserState = {\r\n  listLoading: false,\r\n  actionLoading: false,\r\n  error: null,\r\n  user: undefined,\r\n};\r\n\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\",\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"Sign In\",\r\n  initialState: initialUserState,\r\n  reducers: {\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionLoading = true;\r\n      }\r\n    },\r\n    signIn: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      /* eslint-disable no-param-reassign */\r\n      state.user = {\r\n        email: action.payload.user.email,\r\n        token: action.payload.user.token,\r\n      };\r\n      state.actionLoading = false;\r\n\r\n      setStorage(\"credentials\", JSON.stringify(state.user), 360 * 24 * 60 * 60);\r\n    },\r\n    signOut: (state) => {\r\n      /* eslint-disable no-param-reassign */\r\n      state.user = null; // eslint-disable-line no-param-reassign\r\n      /* eslint-enable no-param-reassign */\r\n\r\n      removeStorage(\"credentials\");\r\n      console.log(state);\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      //   state.value += action.payload;\r\n      console.log(state);\r\n      console.log(action);\r\n    },\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}:${action.payload.error}`;\r\n      if (action.payload.callType == callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionLoading = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { startCall, signIn, signOut, incrementByAmount, catchError } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,6BAA1C;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,WAAW,EAAE,KADU;EAEvBC,aAAa,EAAE,KAFQ;EAGvBC,KAAK,EAAE,IAHgB;EAIvBC,IAAI,EAAEC;AAJiB,CAAzB;AAOA,OAAO,MAAMC,SAAS,GAAG;EACvBC,IAAI,EAAE,MADiB;EAEvBC,MAAM,EAAE;AAFe,CAAlB;AAKP,OAAO,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EACnCa,IAAI,EAAE,SAD6B;EAEnCC,YAAY,EAAEX,gBAFqB;EAGnCY,QAAQ,EAAE;IACRC,SAAS,EAAE,CAACC,KAAD,EAAQN,MAAR,KAAmB;MAC5BM,KAAK,CAACX,KAAN,GAAc,IAAd;;MACA,IAAIK,MAAM,CAACO,OAAP,CAAeC,QAAf,IAA2BV,SAAS,CAACC,IAAzC,EAA+C;QAC7CO,KAAK,CAACb,WAAN,GAAoB,IAApB;MACD,CAFD,MAEO;QACLa,KAAK,CAACZ,aAAN,GAAsB,IAAtB;MACD;IACF,CARO;IASRe,MAAM,EAAE,CAACH,KAAD,EAAQN,MAAR,KAAmB;MACzB;MACA;MACA;MACA;;MACA;MACAM,KAAK,CAACV,IAAN,GAAa;QACXc,KAAK,EAAEV,MAAM,CAACO,OAAP,CAAeX,IAAf,CAAoBc,KADhB;QAEXC,KAAK,EAAEX,MAAM,CAACO,OAAP,CAAeX,IAAf,CAAoBe;MAFhB,CAAb;MAIAL,KAAK,CAACZ,aAAN,GAAsB,KAAtB;MAEAJ,UAAU,CAAC,aAAD,EAAgBsB,IAAI,CAACC,SAAL,CAAeP,KAAK,CAACV,IAArB,CAAhB,EAA4C,MAAM,EAAN,GAAW,EAAX,GAAgB,EAA5D,CAAV;IACD,CAtBO;IAuBRkB,OAAO,EAAGR,KAAD,IAAW;MAClB;MACAA,KAAK,CAACV,IAAN,GAAa,IAAb,CAFkB,CAEC;;MACnB;;MAEAL,aAAa,CAAC,aAAD,CAAb;MACAwB,OAAO,CAACC,GAAR,CAAYV,KAAZ;IACD,CA9BO;IA+BRW,iBAAiB,EAAE,CAACX,KAAD,EAAQN,MAAR,KAAmB;MACpC;MACAe,OAAO,CAACC,GAAR,CAAYV,KAAZ;MACAS,OAAO,CAACC,GAAR,CAAYhB,MAAZ;IACD,CAnCO;IAoCRkB,UAAU,EAAE,CAACZ,KAAD,EAAQN,MAAR,KAAmB;MAC7BM,KAAK,CAACX,KAAN,GAAe,GAAEK,MAAM,CAACmB,IAAK,IAAGnB,MAAM,CAACO,OAAP,CAAeZ,KAAM,EAArD;;MACA,IAAIK,MAAM,CAACO,OAAP,CAAeC,QAAf,IAA2BV,SAAS,CAACC,IAAzC,EAA+C;QAC7CO,KAAK,CAACb,WAAN,GAAoB,KAApB;MACD,CAFD,MAEO;QACLa,KAAK,CAACZ,aAAN,GAAsB,KAAtB;MACD;IACF;EA3CO;AAHyB,CAAD,CAA7B,C,CAkDP;;AACA,OAAO,MAAM;EAAEW,SAAF;EAAaI,MAAb;EAAqBK,OAArB;EAA8BG,iBAA9B;EAAiDC;AAAjD,IAAgEjB,SAAS,CAACmB,OAAhF;AAEP,eAAenB,SAAS,CAACoB,OAAzB"},"metadata":{},"sourceType":"module"}