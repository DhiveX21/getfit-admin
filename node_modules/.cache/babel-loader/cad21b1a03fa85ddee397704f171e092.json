{"ast":null,"code":"import { getAllPatientDatatable } from \"_api/patientApi\";\nimport { callTypes } from \"_slices/patientSlice\";\nimport { startCall } from \"_slices/patientSlice\";\nimport { catchError } from \"_slices/patientSlice\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { patientDatatable } from \"_slices/patientSlice\";\nimport { patientDetail } from \"_slices/patientSlice\";\nimport { getOnePatient } from \"_api/patientApi\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nexport const datatablePatient = payload => dispatch => {\n  dispatch(startCall({\n    callType: callTypes.list\n  }));\n  return getAllPatientDatatable(payload).then(response => {\n    const data = response.data.data;\n    dispatch(patientDatatable({\n      entities: data.entities,\n      totalCount: data.totalCount\n    }));\n  }).catch(err => {\n    err.clientMessage = \"Something went wrong\";\n    MySwal.fire({\n      title: \"Can't show patient\",\n      icon: \"error\"\n    });\n    dispatch(catchError({\n      err,\n      callType: callTypes.list\n    }));\n  });\n};\nexport const detailPatient = patientId => dispatch => {\n  if (!patientId) {\n    return dispatch(patientDetail({\n      patient: undefined\n    }));\n  }\n\n  dispatch(startCall({\n    callType: callTypes.action\n  }));\n  return getOnePatient(patientId).then(response => {\n    const data = response.data.data;\n    dispatch(patientDetail({\n      patient: data\n    }));\n  }).catch(err => {\n    err.clientMessage = \"Something went wrong\";\n    MySwal.fire({\n      title: \"Can't show detail patient\",\n      icon: \"error\"\n    });\n    dispatch(catchError({\n      err,\n      callType: callTypes.action\n    }));\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MySwal\");","map":{"version":3,"names":["getAllPatientDatatable","callTypes","startCall","catchError","Swal","withReactContent","patientDatatable","patientDetail","getOnePatient","MySwal","datatablePatient","payload","dispatch","callType","list","then","response","data","entities","totalCount","catch","err","clientMessage","fire","title","icon","detailPatient","patientId","patient","undefined","action"],"sources":["D:/project ardhi/getfit-admin/src/layouts/medicalRecord/patientAction.jsx"],"sourcesContent":["import { getAllPatientDatatable } from \"_api/patientApi\";\r\nimport { callTypes } from \"_slices/patientSlice\";\r\nimport { startCall } from \"_slices/patientSlice\";\r\nimport { catchError } from \"_slices/patientSlice\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { patientDatatable } from \"_slices/patientSlice\";\r\nimport { patientDetail } from \"_slices/patientSlice\";\r\nimport { getOnePatient } from \"_api/patientApi\";\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport const datatablePatient = (payload) => (dispatch) => {\r\n  dispatch(startCall({ callType: callTypes.list }));\r\n  return getAllPatientDatatable(payload)\r\n    .then((response) => {\r\n      const data = response.data.data;\r\n      dispatch(patientDatatable({ entities: data.entities, totalCount: data.totalCount }));\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Can't show patient\",\r\n        icon: \"error\",\r\n      });\r\n      dispatch(catchError({ err, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const detailPatient = (patientId) => (dispatch) => {\r\n  if (!patientId) {\r\n    return dispatch(patientDetail({ patient: undefined }));\r\n  }\r\n  dispatch(startCall({ callType: callTypes.action }));\r\n  return getOnePatient(patientId)\r\n    .then((response) => {\r\n      const data = response.data.data;\r\n      dispatch(patientDetail({ patient: data }));\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Can't show detail patient\",\r\n        icon: \"error\",\r\n      });\r\n      dispatch(catchError({ err, callType: callTypes.action }));\r\n    });\r\n};\r\n"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,iBAAvC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,MAAMC,MAAM,GAAGJ,gBAAgB,CAACD,IAAD,CAA/B;KAAMK,M;AAEN,OAAO,MAAMC,gBAAgB,GAAIC,OAAD,IAAcC,QAAD,IAAc;EACzDA,QAAQ,CAACV,SAAS,CAAC;IAAEW,QAAQ,EAAEZ,SAAS,CAACa;EAAtB,CAAD,CAAV,CAAR;EACA,OAAOd,sBAAsB,CAACW,OAAD,CAAtB,CACJI,IADI,CACEC,QAAD,IAAc;IAClB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcA,IAA3B;IACAL,QAAQ,CAACN,gBAAgB,CAAC;MAAEY,QAAQ,EAAED,IAAI,CAACC,QAAjB;MAA2BC,UAAU,EAAEF,IAAI,CAACE;IAA5C,CAAD,CAAjB,CAAR;EACD,CAJI,EAKJC,KALI,CAKGC,GAAD,IAAS;IACdA,GAAG,CAACC,aAAJ,GAAoB,sBAApB;IACAb,MAAM,CAACc,IAAP,CAAY;MACVC,KAAK,EAAE,oBADG;MAEVC,IAAI,EAAE;IAFI,CAAZ;IAIAb,QAAQ,CAACT,UAAU,CAAC;MAAEkB,GAAF;MAAOR,QAAQ,EAAEZ,SAAS,CAACa;IAA3B,CAAD,CAAX,CAAR;EACD,CAZI,CAAP;AAaD,CAfM;AAiBP,OAAO,MAAMY,aAAa,GAAIC,SAAD,IAAgBf,QAAD,IAAc;EACxD,IAAI,CAACe,SAAL,EAAgB;IACd,OAAOf,QAAQ,CAACL,aAAa,CAAC;MAAEqB,OAAO,EAAEC;IAAX,CAAD,CAAd,CAAf;EACD;;EACDjB,QAAQ,CAACV,SAAS,CAAC;IAAEW,QAAQ,EAAEZ,SAAS,CAAC6B;EAAtB,CAAD,CAAV,CAAR;EACA,OAAOtB,aAAa,CAACmB,SAAD,CAAb,CACJZ,IADI,CACEC,QAAD,IAAc;IAClB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcA,IAA3B;IACAL,QAAQ,CAACL,aAAa,CAAC;MAAEqB,OAAO,EAAEX;IAAX,CAAD,CAAd,CAAR;EACD,CAJI,EAKJG,KALI,CAKGC,GAAD,IAAS;IACdA,GAAG,CAACC,aAAJ,GAAoB,sBAApB;IACAb,MAAM,CAACc,IAAP,CAAY;MACVC,KAAK,EAAE,2BADG;MAEVC,IAAI,EAAE;IAFI,CAAZ;IAIAb,QAAQ,CAACT,UAAU,CAAC;MAAEkB,GAAF;MAAOR,QAAQ,EAAEZ,SAAS,CAAC6B;IAA3B,CAAD,CAAX,CAAR;EACD,CAZI,CAAP;AAaD,CAlBM"},"metadata":{},"sourceType":"module"}