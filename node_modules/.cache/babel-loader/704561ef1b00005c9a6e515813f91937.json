{"ast":null,"code":"import { getAllAppointmentDatatable } from \"_api/appointmentApi\";\nimport { callTypes } from \"_slices/appointmentSlice\";\nimport { startCall } from \"_slices/appointmentSlice\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { catchError } from \"_slices/appointmentSlice\";\nimport { appointmentDatatable } from \"_slices/appointmentSlice\";\nimport { appointmentDetail } from \"_slices/appointmentSlice\";\nimport { getOneAppointment } from \"_api/appointmentApi\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nexport const datatable = payload => dispatch => {\n  dispatch(startCall({\n    callType: callTypes.list\n  }));\n  return getAllAppointmentDatatable(payload).then(response => {\n    const {\n      entities,\n      totalCount\n    } = response.data.data;\n    dispatch(appointmentDatatable({\n      entities: entities,\n      totalCount: totalCount\n    }));\n  }).catch(err => {\n    err.clientMessage = \"Something went wrong\";\n    MySwal.fire({\n      title: \"Can't show appointment\",\n      icon: \"error\"\n    });\n    dispatch(catchError({\n      err,\n      callType: callTypes.list\n    }));\n  });\n};\nexport const detailAppointment = appointmentId => dispatch => {\n  if (!appointmentId) {\n    return dispatch(appointmentDetail({\n      appointment: undefined\n    }));\n  }\n\n  dispatch(startCall({\n    callType: callTypes.action\n  }));\n  return getOneAppointment(appointmentId).then(response => {\n    const data = response.data.data;\n    dispatch(appointmentDetail({\n      appointment: data\n    }));\n  }).catch(err => {\n    err.clientMessage = \"Something went wrong\";\n    MySwal.fire({\n      title: \"Can't show appointment\",\n      icon: \"error\"\n    });\n    dispatch(catchError({\n      err,\n      callType: callTypes.action\n    }));\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MySwal\");","map":{"version":3,"names":["getAllAppointmentDatatable","callTypes","startCall","Swal","withReactContent","catchError","appointmentDatatable","appointmentDetail","getOneAppointment","MySwal","datatable","payload","dispatch","callType","list","then","response","entities","totalCount","data","catch","err","clientMessage","fire","title","icon","detailAppointment","appointmentId","appointment","undefined","action"],"sources":["D:/project ardhi/getfit-admin/src/layouts/appointment/appointmentAction.jsx"],"sourcesContent":["import { getAllAppointmentDatatable } from \"_api/appointmentApi\";\r\nimport { callTypes } from \"_slices/appointmentSlice\";\r\nimport { startCall } from \"_slices/appointmentSlice\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { catchError } from \"_slices/appointmentSlice\";\r\nimport { appointmentDatatable } from \"_slices/appointmentSlice\";\r\nimport { appointmentDetail } from \"_slices/appointmentSlice\";\r\nimport { getOneAppointment } from \"_api/appointmentApi\";\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport const datatable = (payload) => (dispatch) => {\r\n  dispatch(startCall({ callType: callTypes.list }));\r\n  return getAllAppointmentDatatable(payload)\r\n    .then((response) => {\r\n      const { entities, totalCount } = response.data.data;\r\n      dispatch(appointmentDatatable({ entities: entities, totalCount: totalCount }));\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Can't show appointment\",\r\n        icon: \"error\",\r\n      });\r\n      dispatch(catchError({ err, callType: callTypes.list }));\r\n    });\r\n};\r\nexport const detailAppointment = (appointmentId) => (dispatch) => {\r\n  if (!appointmentId) {\r\n    return dispatch(appointmentDetail({ appointment: undefined }));\r\n  }\r\n  dispatch(startCall({ callType: callTypes.action }));\r\n  return getOneAppointment(appointmentId)\r\n    .then((response) => {\r\n      const data = response.data.data;\r\n      dispatch(appointmentDetail({ appointment: data }));\r\n    })\r\n    .catch((err) => {\r\n      err.clientMessage = \"Something went wrong\";\r\n      MySwal.fire({\r\n        title: \"Can't show appointment\",\r\n        icon: \"error\",\r\n      });\r\n      dispatch(catchError({ err, callType: callTypes.action }));\r\n    });\r\n};\r\n"],"mappings":"AAAA,SAASA,0BAAT,QAA2C,qBAA3C;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,MAAMC,MAAM,GAAGL,gBAAgB,CAACD,IAAD,CAA/B;KAAMM,M;AAEN,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAcC,QAAD,IAAc;EAClDA,QAAQ,CAACV,SAAS,CAAC;IAAEW,QAAQ,EAAEZ,SAAS,CAACa;EAAtB,CAAD,CAAV,CAAR;EACA,OAAOd,0BAA0B,CAACW,OAAD,CAA1B,CACJI,IADI,CACEC,QAAD,IAAc;IAClB,MAAM;MAAEC,QAAF;MAAYC;IAAZ,IAA2BF,QAAQ,CAACG,IAAT,CAAcA,IAA/C;IACAP,QAAQ,CAACN,oBAAoB,CAAC;MAAEW,QAAQ,EAAEA,QAAZ;MAAsBC,UAAU,EAAEA;IAAlC,CAAD,CAArB,CAAR;EACD,CAJI,EAKJE,KALI,CAKGC,GAAD,IAAS;IACdA,GAAG,CAACC,aAAJ,GAAoB,sBAApB;IACAb,MAAM,CAACc,IAAP,CAAY;MACVC,KAAK,EAAE,wBADG;MAEVC,IAAI,EAAE;IAFI,CAAZ;IAIAb,QAAQ,CAACP,UAAU,CAAC;MAAEgB,GAAF;MAAOR,QAAQ,EAAEZ,SAAS,CAACa;IAA3B,CAAD,CAAX,CAAR;EACD,CAZI,CAAP;AAaD,CAfM;AAgBP,OAAO,MAAMY,iBAAiB,GAAIC,aAAD,IAAoBf,QAAD,IAAc;EAChE,IAAI,CAACe,aAAL,EAAoB;IAClB,OAAOf,QAAQ,CAACL,iBAAiB,CAAC;MAAEqB,WAAW,EAAEC;IAAf,CAAD,CAAlB,CAAf;EACD;;EACDjB,QAAQ,CAACV,SAAS,CAAC;IAAEW,QAAQ,EAAEZ,SAAS,CAAC6B;EAAtB,CAAD,CAAV,CAAR;EACA,OAAOtB,iBAAiB,CAACmB,aAAD,CAAjB,CACJZ,IADI,CACEC,QAAD,IAAc;IAClB,MAAMG,IAAI,GAAGH,QAAQ,CAACG,IAAT,CAAcA,IAA3B;IACAP,QAAQ,CAACL,iBAAiB,CAAC;MAAEqB,WAAW,EAAET;IAAf,CAAD,CAAlB,CAAR;EACD,CAJI,EAKJC,KALI,CAKGC,GAAD,IAAS;IACdA,GAAG,CAACC,aAAJ,GAAoB,sBAApB;IACAb,MAAM,CAACc,IAAP,CAAY;MACVC,KAAK,EAAE,wBADG;MAEVC,IAAI,EAAE;IAFI,CAAZ;IAIAb,QAAQ,CAACP,UAAU,CAAC;MAAEgB,GAAF;MAAOR,QAAQ,EAAEZ,SAAS,CAAC6B;IAA3B,CAAD,CAAX,CAAR;EACD,CAZI,CAAP;AAaD,CAlBM"},"metadata":{},"sourceType":"module"}