{"ast":null,"code":"var _jsxFileName = \"D:\\\\project ardhi\\\\getfit-admin\\\\src\\\\layouts\\\\medicalRecord\\\\components\\\\CreateMedicalRecord\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport DynamicForm from \"./DynamicForm\";\nimport { getAllAppointment } from \"_api/appointmentApi\";\nimport { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { dateFormater } from \"helpers/DateHelpers\";\nimport MDInput from \"components/MDInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateMedicalRecord() {\n  _s();\n\n  const [fieldMedicalRecord, setFieldMedicalRecord] = useState([{\n    key: \" \",\n    value: \" \"\n  }]);\n  const [appointmentData, setAppointmentData] = useState(null);\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n  const dispatch = useDispatch();\n  const MySwal = withReactContent(Swal);\n  useEffect(() => {\n    if (appointmentData === null) {\n      getAllAppointment().then(response => {\n        setAppointmentData(response.data.data);\n      }).catch(err => {\n        err.clientMessage = \"Something went wrong\";\n        MySwal.fire({\n          title: \"Can't show Appointment\",\n          icon: \"error\"\n        });\n      });\n    }\n  }, []);\n\n  function addFieldHandle(index) {\n    setFieldMedicalRecord([...fieldMedicalRecord, {\n      key: index,\n      value: \" \"\n    }]);\n  }\n\n  function removeFieldHandle(index) {\n    let tempField = [...fieldMedicalRecord];\n    tempField.splice(index, 1);\n    setFieldMedicalRecord(tempField);\n  }\n\n  function editFieldHandle(index, keyInput, valueInput) {\n    let tempField = [...fieldMedicalRecord];\n\n    if (keyInput || valueInput) {\n      let tempValue = {\n        key: keyInput ? keyInput : fieldMedicalRecord[index].key,\n        value: valueInput ? valueInput : fieldMedicalRecord[index].value\n      };\n      tempField[index] = tempValue;\n    }\n\n    setFieldMedicalRecord(tempField);\n  }\n\n  function submitFieldHandle() {\n    console.log(fieldMedicalRecord);\n\n    if (fieldMedicalRecord.length === 0) {\n      MySwal.fire({\n        title: \"Medical Record Can't be Empty\",\n        icon: \"error\"\n      });\n    } // dispatch(updateMedicalRecordAction(medicalRecord, fieldMedicalRecord));\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex flex-col justify-center gap-[20px] px-[20px] border-blue-500 border-solid border-l-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: /*#__PURE__*/_jsxDEV(MDInput, {\n          id: \"appointment\",\n          select: true,\n          label: \"Select Appointment\",\n          value: selectedAppointment,\n          onChange: e => setSelectedAppointment(e.target.value),\n          SelectProps: {\n            native: true\n          },\n          fullWidth: true,\n          helperText: \"Please Select the Appointment first...\",\n          children: appointmentData === null || appointmentData === void 0 ? void 0 : appointmentData.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option._id,\n            children: `${option.appointment_type} ____ ${option.patient_detail.name} ____ ${dateFormater(option.date_appointment)} ____ ${option.time_appointment} WIB`\n          }, option._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DynamicForm, {\n        removeHandle: index => removeFieldHandle(index),\n        fieldList: fieldMedicalRecord,\n        addHandle: index => addFieldHandle(index),\n        editHandle: (index, key, value) => editFieldHandle(index, key, value),\n        submitHandle: () => submitFieldHandle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CreateMedicalRecord, \"b9L2hjwIqvMX4OHAJ3kuzQb8p9Y=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateMedicalRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMedicalRecord\");","map":{"version":3,"names":["React","useEffect","useState","DynamicForm","getAllAppointment","useDispatch","Swal","withReactContent","dateFormater","MDInput","CreateMedicalRecord","fieldMedicalRecord","setFieldMedicalRecord","key","value","appointmentData","setAppointmentData","selectedAppointment","setSelectedAppointment","dispatch","MySwal","then","response","data","catch","err","clientMessage","fire","title","icon","addFieldHandle","index","removeFieldHandle","tempField","splice","editFieldHandle","keyInput","valueInput","tempValue","submitFieldHandle","console","log","length","e","target","native","map","option","_id","appointment_type","patient_detail","name","date_appointment","time_appointment"],"sources":["D:/project ardhi/getfit-admin/src/layouts/medicalRecord/components/CreateMedicalRecord/index.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport DynamicForm from \"./DynamicForm\";\r\nimport { getAllAppointment } from \"_api/appointmentApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { dateFormater } from \"helpers/DateHelpers\";\r\nimport MDInput from \"components/MDInput\";\r\n\r\nexport default function CreateMedicalRecord() {\r\n  const [fieldMedicalRecord, setFieldMedicalRecord] = useState([{ key: \" \", value: \" \" }]);\r\n  const [appointmentData, setAppointmentData] = useState(null);\r\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const MySwal = withReactContent(Swal);\r\n\r\n  useEffect(() => {\r\n    if (appointmentData === null) {\r\n      getAllAppointment()\r\n        .then((response) => {\r\n          setAppointmentData(response.data.data);\r\n        })\r\n        .catch((err) => {\r\n          err.clientMessage = \"Something went wrong\";\r\n          MySwal.fire({\r\n            title: \"Can't show Appointment\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  function addFieldHandle(index) {\r\n    setFieldMedicalRecord([...fieldMedicalRecord, { key: index, value: \" \" }]);\r\n  }\r\n\r\n  function removeFieldHandle(index) {\r\n    let tempField = [...fieldMedicalRecord];\r\n    tempField.splice(index, 1);\r\n    setFieldMedicalRecord(tempField);\r\n  }\r\n\r\n  function editFieldHandle(index, keyInput, valueInput) {\r\n    let tempField = [...fieldMedicalRecord];\r\n    if (keyInput || valueInput) {\r\n      let tempValue = {\r\n        key: keyInput ? keyInput : fieldMedicalRecord[index].key,\r\n        value: valueInput ? valueInput : fieldMedicalRecord[index].value,\r\n      };\r\n\r\n      tempField[index] = tempValue;\r\n    }\r\n    setFieldMedicalRecord(tempField);\r\n  }\r\n\r\n  function submitFieldHandle() {\r\n    console.log(fieldMedicalRecord);\r\n    if (fieldMedicalRecord.length === 0) {\r\n      MySwal.fire({\r\n        title: \"Medical Record Can't be Empty\",\r\n        icon: \"error\",\r\n      });\r\n    }\r\n    // dispatch(updateMedicalRecordAction(medicalRecord, fieldMedicalRecord));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full flex flex-col justify-center gap-[20px] px-[20px] border-blue-500 border-solid border-l-4\">\r\n        <div className=\"flex\">\r\n          <MDInput\r\n            id=\"appointment\"\r\n            select\r\n            label=\"Select Appointment\"\r\n            value={selectedAppointment}\r\n            onChange={(e) => setSelectedAppointment(e.target.value)}\r\n            SelectProps={{\r\n              native: true,\r\n            }}\r\n            fullWidth\r\n            helperText=\"Please Select the Appointment first...\"\r\n          >\r\n            {appointmentData?.map((option) => (\r\n              <option key={option._id} value={option._id}>\r\n                {`${option.appointment_type} ____ ${option.patient_detail.name} ____ ${dateFormater(\r\n                  option.date_appointment\r\n                )} ____ ${option.time_appointment} WIB`}\r\n              </option>\r\n            ))}\r\n          </MDInput>\r\n        </div>\r\n        <DynamicForm\r\n          removeHandle={(index) => removeFieldHandle(index)}\r\n          fieldList={fieldMedicalRecord}\r\n          addHandle={(index) => addFieldHandle(index)}\r\n          editHandle={(index, key, value) => editFieldHandle(index, key, value)}\r\n          submitHandle={() => submitFieldHandle()}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}