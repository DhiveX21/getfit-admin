{"ast":null,"code":"var _jsxFileName = \"D:\\\\project ardhi\\\\getfit-admin\\\\src\\\\layouts\\\\medicalRecord\\\\components\\\\ListTableMedicalRecord\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from \"react\";\nimport DataTable from \"components/extend/Tables/DataTable\";\nimport patientTableData from \"./data/patientTableData\";\nimport { usePatientUIContext } from \"layouts/patient/patientUIContext\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../medicalRecordAction\";\nimport MDBox from \"components/MDBox\";\nimport { Card, Grid } from \"@mui/material\";\nimport MDTypography from \"components/MDTypography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListTableMedicalRecord() {\n  _s();\n\n  // Patient UI Context\n  const patientUIContext = usePatientUIContext();\n  const patientUIProps = useMemo(() => {\n    return {\n      queryParams: patientUIContext.queryParams,\n      setQueryParams: patientUIContext.setQueryParams\n    };\n  }, [patientUIContext]); // Get Redux\n\n  const {\n    currentState\n  } = useSelector(state => ({\n    currentState: state.patient\n  }));\n  const {\n    totalCount,\n    entities,\n    listLoading\n  } = currentState;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(actions.datatablePatient(patientUIProps.queryParams));\n  }, [patientUIProps.queryParams]);\n  const {\n    columns,\n    rows\n  } = patientTableData(entities);\n  return /*#__PURE__*/_jsxDEV(MDBox, {\n    p: 2,\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      table: {\n        columns,\n        rows\n      },\n      totalCount: totalCount,\n      params: patientUIProps.queryParams,\n      setParams: patientUIProps.setQueryParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListTableMedicalRecord, \"O6DoVF0ajx21cG3kP7msYq9ns9E=\", false, function () {\n  return [usePatientUIContext, useSelector, useDispatch];\n});\n\n_c = ListTableMedicalRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTableMedicalRecord\");","map":{"version":3,"names":["React","useEffect","useMemo","DataTable","patientTableData","usePatientUIContext","useDispatch","useSelector","actions","MDBox","Card","Grid","MDTypography","ListTableMedicalRecord","patientUIContext","patientUIProps","queryParams","setQueryParams","currentState","state","patient","totalCount","entities","listLoading","dispatch","datatablePatient","columns","rows"],"sources":["D:/project ardhi/getfit-admin/src/layouts/medicalRecord/components/ListTableMedicalRecord/index.jsx"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport DataTable from \"components/extend/Tables/DataTable\";\r\nimport patientTableData from \"./data/patientTableData\";\r\nimport { usePatientUIContext } from \"layouts/patient/patientUIContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../medicalRecordAction\";\r\nimport MDBox from \"components/MDBox\";\r\nimport { Card, Grid } from \"@mui/material\";\r\nimport MDTypography from \"components/MDTypography\";\r\n\r\nexport default function ListTableMedicalRecord() {\r\n  // Patient UI Context\r\n  const patientUIContext = usePatientUIContext();\r\n\r\n  const patientUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: patientUIContext.queryParams,\r\n      setQueryParams: patientUIContext.setQueryParams,\r\n    };\r\n  }, [patientUIContext]);\r\n\r\n  // Get Redux\r\n  const { currentState } = useSelector((state) => ({ currentState: state.patient }));\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.datatablePatient(patientUIProps.queryParams));\r\n  }, [patientUIProps.queryParams]);\r\n\r\n  const { columns, rows } = patientTableData(entities);\r\n\r\n  return (\r\n    <MDBox p={2}>\r\n      <DataTable\r\n        table={{ columns, rows }}\r\n        totalCount={totalCount}\r\n        params={patientUIProps.queryParams}\r\n        setParams={patientUIProps.setQueryParams}\r\n      />\r\n    </MDBox>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,eAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,eAAe,SAASC,sBAAT,GAAkC;EAAA;;EAC/C;EACA,MAAMC,gBAAgB,GAAGT,mBAAmB,EAA5C;EAEA,MAAMU,cAAc,GAAGb,OAAO,CAAC,MAAM;IACnC,OAAO;MACLc,WAAW,EAAEF,gBAAgB,CAACE,WADzB;MAELC,cAAc,EAAEH,gBAAgB,CAACG;IAF5B,CAAP;EAID,CAL6B,EAK3B,CAACH,gBAAD,CAL2B,CAA9B,CAJ+C,CAW/C;;EACA,MAAM;IAAEI;EAAF,IAAmBX,WAAW,CAAEY,KAAD,KAAY;IAAED,YAAY,EAAEC,KAAK,CAACC;EAAtB,CAAZ,CAAD,CAApC;EACA,MAAM;IAAEC,UAAF;IAAcC,QAAd;IAAwBC;EAAxB,IAAwCL,YAA9C;EACA,MAAMM,QAAQ,GAAGlB,WAAW,EAA5B;EAEAL,SAAS,CAAC,MAAM;IACduB,QAAQ,CAAChB,OAAO,CAACiB,gBAAR,CAAyBV,cAAc,CAACC,WAAxC,CAAD,CAAR;EACD,CAFQ,EAEN,CAACD,cAAc,CAACC,WAAhB,CAFM,CAAT;EAIA,MAAM;IAAEU,OAAF;IAAWC;EAAX,IAAoBvB,gBAAgB,CAACkB,QAAD,CAA1C;EAEA,oBACE,QAAC,KAAD;IAAO,CAAC,EAAE,CAAV;IAAA,uBACE,QAAC,SAAD;MACE,KAAK,EAAE;QAAEI,OAAF;QAAWC;MAAX,CADT;MAEE,UAAU,EAAEN,UAFd;MAGE,MAAM,EAAEN,cAAc,CAACC,WAHzB;MAIE,SAAS,EAAED,cAAc,CAACE;IAJ5B;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAhCuBJ,sB;UAEGR,mB,EAUAE,W,EAERD,W;;;KAdKO,sB"},"metadata":{},"sourceType":"module"}