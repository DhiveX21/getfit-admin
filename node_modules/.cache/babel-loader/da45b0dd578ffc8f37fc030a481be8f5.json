{"ast":null,"code":"var _jsxFileName = \"D:\\\\project ardhi\\\\getfit-admin\\\\src\\\\layouts\\\\medicalRecord\\\\components\\\\CreateMedicalRecord\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MDButton from \"components/MDButton\";\nimport MDTypography from \"components/MDTypography\";\nimport { useState } from \"react\";\nimport DynamicForm from \"./DynamicForm\";\nimport { updateMedicalRecordAction } from \"layouts/medicalRecord/medicalRecordAction\";\nimport { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateMedicalRecord() {\n  _s();\n\n  const [fieldMedicalRecord, setFieldMedicalRecord] = useState([{\n    key: \" \",\n    value: \" \"\n  }]);\n  const dispatch = useDispatch();\n  const MySwal = withReactContent(Swal);\n\n  function addFieldHandle(index) {\n    setFieldMedicalRecord([...fieldMedicalRecord, {\n      key: index,\n      value: \" \"\n    }]);\n  }\n\n  function removeFieldHandle(index) {\n    let tempField = [...fieldMedicalRecord];\n    tempField.splice(index, 1);\n    setFieldMedicalRecord(tempField);\n  }\n\n  function editFieldHandle(index, keyInput, valueInput) {\n    let tempField = [...fieldMedicalRecord];\n\n    if (keyInput || valueInput) {\n      let tempValue = {\n        key: keyInput ? keyInput : fieldMedicalRecord[index].key,\n        value: valueInput ? valueInput : fieldMedicalRecord[index].value\n      };\n      tempField[index] = tempValue;\n    }\n\n    setFieldMedicalRecord(tempField);\n  }\n\n  function submitFieldHandle() {\n    console.log(fieldMedicalRecord);\n\n    if (fieldMedicalRecord.length === 0) {\n      MySwal.fire({\n        title: \"Medical Record Can't be Empty\",\n        icon: \"error\"\n      });\n    } // dispatch(updateMedicalRecordAction(medicalRecord, fieldMedicalRecord));\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex flex-col justify-center gap-[20px] px-[20px] border-blue-500 border-solid border-l-4\",\n      children: /*#__PURE__*/_jsxDEV(DynamicForm, {\n        removeHandle: index => removeFieldHandle(index),\n        fieldList: fieldMedicalRecord,\n        addHandle: index => addFieldHandle(index),\n        editHandle: (index, key, value) => editFieldHandle(index, key, value),\n        submitHandle: () => submitFieldHandle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CreateMedicalRecord, \"+Fzc+AHMkSNJs2X0umaeqKFCGGY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateMedicalRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMedicalRecord\");","map":{"version":3,"names":["React","useEffect","MDButton","MDTypography","useState","DynamicForm","updateMedicalRecordAction","useDispatch","Swal","CreateMedicalRecord","fieldMedicalRecord","setFieldMedicalRecord","key","value","dispatch","MySwal","withReactContent","addFieldHandle","index","removeFieldHandle","tempField","splice","editFieldHandle","keyInput","valueInput","tempValue","submitFieldHandle","console","log","length","fire","title","icon"],"sources":["D:/project ardhi/getfit-admin/src/layouts/medicalRecord/components/CreateMedicalRecord/index.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MDButton from \"components/MDButton\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport { useState } from \"react\";\r\nimport DynamicForm from \"./DynamicForm\";\r\nimport { updateMedicalRecordAction } from \"layouts/medicalRecord/medicalRecordAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function CreateMedicalRecord() {\r\n  const [fieldMedicalRecord, setFieldMedicalRecord] = useState([{ key: \" \", value: \" \" }]);\r\n  const dispatch = useDispatch();\r\n  const MySwal = withReactContent(Swal);\r\n\r\n  function addFieldHandle(index) {\r\n    setFieldMedicalRecord([...fieldMedicalRecord, { key: index, value: \" \" }]);\r\n  }\r\n\r\n  function removeFieldHandle(index) {\r\n    let tempField = [...fieldMedicalRecord];\r\n    tempField.splice(index, 1);\r\n    setFieldMedicalRecord(tempField);\r\n  }\r\n\r\n  function editFieldHandle(index, keyInput, valueInput) {\r\n    let tempField = [...fieldMedicalRecord];\r\n    if (keyInput || valueInput) {\r\n      let tempValue = {\r\n        key: keyInput ? keyInput : fieldMedicalRecord[index].key,\r\n        value: valueInput ? valueInput : fieldMedicalRecord[index].value,\r\n      };\r\n\r\n      tempField[index] = tempValue;\r\n    }\r\n    setFieldMedicalRecord(tempField);\r\n  }\r\n\r\n  function submitFieldHandle() {\r\n    console.log(fieldMedicalRecord);\r\n    if (fieldMedicalRecord.length === 0) {\r\n      MySwal.fire({\r\n        title: \"Medical Record Can't be Empty\",\r\n        icon: \"error\",\r\n      });\r\n    }\r\n    // dispatch(updateMedicalRecordAction(medicalRecord, fieldMedicalRecord));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full flex flex-col justify-center gap-[20px] px-[20px] border-blue-500 border-solid border-l-4\">\r\n        <DynamicForm\r\n          removeHandle={(index) => removeFieldHandle(index)}\r\n          fieldList={fieldMedicalRecord}\r\n          addHandle={(index) => addFieldHandle(index)}\r\n          editHandle={(index, key, value) => editFieldHandle(index, key, value)}\r\n          submitHandle={() => submitFieldHandle()}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,yBAAT,QAA0C,2CAA1C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,eAAe,SAASC,mBAAT,GAA+B;EAAA;;EAC5C,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,CAAC;IAAEQ,GAAG,EAAE,GAAP;IAAYC,KAAK,EAAE;EAAnB,CAAD,CAAD,CAA5D;EACA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAMQ,MAAM,GAAGC,gBAAgB,CAACR,IAAD,CAA/B;;EAEA,SAASS,cAAT,CAAwBC,KAAxB,EAA+B;IAC7BP,qBAAqB,CAAC,CAAC,GAAGD,kBAAJ,EAAwB;MAAEE,GAAG,EAAEM,KAAP;MAAcL,KAAK,EAAE;IAArB,CAAxB,CAAD,CAArB;EACD;;EAED,SAASM,iBAAT,CAA2BD,KAA3B,EAAkC;IAChC,IAAIE,SAAS,GAAG,CAAC,GAAGV,kBAAJ,CAAhB;IACAU,SAAS,CAACC,MAAV,CAAiBH,KAAjB,EAAwB,CAAxB;IACAP,qBAAqB,CAACS,SAAD,CAArB;EACD;;EAED,SAASE,eAAT,CAAyBJ,KAAzB,EAAgCK,QAAhC,EAA0CC,UAA1C,EAAsD;IACpD,IAAIJ,SAAS,GAAG,CAAC,GAAGV,kBAAJ,CAAhB;;IACA,IAAIa,QAAQ,IAAIC,UAAhB,EAA4B;MAC1B,IAAIC,SAAS,GAAG;QACdb,GAAG,EAAEW,QAAQ,GAAGA,QAAH,GAAcb,kBAAkB,CAACQ,KAAD,CAAlB,CAA0BN,GADvC;QAEdC,KAAK,EAAEW,UAAU,GAAGA,UAAH,GAAgBd,kBAAkB,CAACQ,KAAD,CAAlB,CAA0BL;MAF7C,CAAhB;MAKAO,SAAS,CAACF,KAAD,CAAT,GAAmBO,SAAnB;IACD;;IACDd,qBAAqB,CAACS,SAAD,CAArB;EACD;;EAED,SAASM,iBAAT,GAA6B;IAC3BC,OAAO,CAACC,GAAR,CAAYlB,kBAAZ;;IACA,IAAIA,kBAAkB,CAACmB,MAAnB,KAA8B,CAAlC,EAAqC;MACnCd,MAAM,CAACe,IAAP,CAAY;QACVC,KAAK,EAAE,+BADG;QAEVC,IAAI,EAAE;MAFI,CAAZ;IAID,CAP0B,CAQ3B;;EACD;;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,kGAAf;MAAA,uBACE,QAAC,WAAD;QACE,YAAY,EAAGd,KAAD,IAAWC,iBAAiB,CAACD,KAAD,CAD5C;QAEE,SAAS,EAAER,kBAFb;QAGE,SAAS,EAAGQ,KAAD,IAAWD,cAAc,CAACC,KAAD,CAHtC;QAIE,UAAU,EAAE,CAACA,KAAD,EAAQN,GAAR,EAAaC,KAAb,KAAuBS,eAAe,CAACJ,KAAD,EAAQN,GAAR,EAAaC,KAAb,CAJpD;QAKE,YAAY,EAAE,MAAMa,iBAAiB;MALvC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAaD;;GApDuBjB,mB;UAELF,W;;;KAFKE,mB"},"metadata":{},"sourceType":"module"}