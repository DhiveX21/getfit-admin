{"ast":null,"code":"var _jsxFileName = \"D:\\\\project ardhi\\\\getfit-admin\\\\src\\\\layouts\\\\medicalRecord\\\\components\\\\ListTableMedicalRecord\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from \"react\";\nimport DataTable from \"components/extend/Tables/DataTable\";\nimport medicalRecordTableData from \"./data/medicalRecordTableData\";\nimport { dataTableMedicalRecord } from \"layouts/medicalRecord/medicalRecordAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useMedicalRecordUIContext } from \"layouts/medicalRecord/medicalRecordUIContext\";\nimport MDAvatar from \"components/MDAvatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListTableMedicalRecord() {\n  _s();\n\n  const {\n    currentState\n  } = useSelector(state => ({\n    currentState: state.medicalRecord\n  }));\n  const {\n    totalCount,\n    entities,\n    listLoading\n  } = currentState;\n  const dispatch = useDispatch();\n  const medicalRecordUIContext = useMedicalRecordUIContext();\n  const medicalRecordUIProps = useMemo(() => {\n    return {\n      queryParams: medicalRecordUIContext.queryParams,\n      setQueryParams: medicalRecordUIContext.setQueryParams\n    };\n  }, [medicalRecordUIContext]);\n  useEffect(() => {\n    dispatch(dataTableMedicalRecord(medicalRecordUIProps.queryParams));\n  }, [medicalRecordUIProps.queryParams]);\n  const {\n    columns,\n    rows\n  } = medicalRecordTableData(entities);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    params: medicalRecordUIProps.queryParams,\n    setParams: medicalRecordUIProps.setQueryParams,\n    table: {\n      columns,\n      rows\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListTableMedicalRecord, \"QS1S2I6qzitEgWLFiU+4IduX9Tk=\", false, function () {\n  return [useSelector, useDispatch, useMedicalRecordUIContext];\n});\n\n_c = ListTableMedicalRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTableMedicalRecord\");","map":{"version":3,"names":["React","useEffect","useMemo","DataTable","medicalRecordTableData","dataTableMedicalRecord","useDispatch","useSelector","useMedicalRecordUIContext","MDAvatar","ListTableMedicalRecord","currentState","state","medicalRecord","totalCount","entities","listLoading","dispatch","medicalRecordUIContext","medicalRecordUIProps","queryParams","setQueryParams","columns","rows"],"sources":["D:/project ardhi/getfit-admin/src/layouts/medicalRecord/components/ListTableMedicalRecord/index.jsx"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport DataTable from \"components/extend/Tables/DataTable\";\r\nimport medicalRecordTableData from \"./data/medicalRecordTableData\";\r\nimport { dataTableMedicalRecord } from \"layouts/medicalRecord/medicalRecordAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useMedicalRecordUIContext } from \"layouts/medicalRecord/medicalRecordUIContext\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\n\r\nexport default function ListTableMedicalRecord() {\r\n  const { currentState } = useSelector((state) => ({ currentState: state.medicalRecord }));\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  const medicalRecordUIContext = useMedicalRecordUIContext();\r\n  const medicalRecordUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: medicalRecordUIContext.queryParams,\r\n      setQueryParams: medicalRecordUIContext.setQueryParams,\r\n    };\r\n  }, [medicalRecordUIContext]);\r\n\r\n  useEffect(() => {\r\n    dispatch(dataTableMedicalRecord(medicalRecordUIProps.queryParams));\r\n  }, [medicalRecordUIProps.queryParams]);\r\n\r\n  const { columns, rows } = medicalRecordTableData(entities);\r\n\r\n  return (\r\n    <DataTable\r\n      params={medicalRecordUIProps.queryParams}\r\n      setParams={medicalRecordUIProps.setQueryParams}\r\n      table={{ columns, rows }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,sBAAP,MAAmC,+BAAnC;AACA,SAASC,sBAAT,QAAuC,2CAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,yBAAT,QAA0C,8CAA1C;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,eAAe,SAASC,sBAAT,GAAkC;EAAA;;EAC/C,MAAM;IAAEC;EAAF,IAAmBJ,WAAW,CAAEK,KAAD,KAAY;IAAED,YAAY,EAAEC,KAAK,CAACC;EAAtB,CAAZ,CAAD,CAApC;EACA,MAAM;IAAEC,UAAF;IAAcC,QAAd;IAAwBC;EAAxB,IAAwCL,YAA9C;EACA,MAAMM,QAAQ,GAAGX,WAAW,EAA5B;EACA,MAAMY,sBAAsB,GAAGV,yBAAyB,EAAxD;EACA,MAAMW,oBAAoB,GAAGjB,OAAO,CAAC,MAAM;IACzC,OAAO;MACLkB,WAAW,EAAEF,sBAAsB,CAACE,WAD/B;MAELC,cAAc,EAAEH,sBAAsB,CAACG;IAFlC,CAAP;EAID,CALmC,EAKjC,CAACH,sBAAD,CALiC,CAApC;EAOAjB,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACZ,sBAAsB,CAACc,oBAAoB,CAACC,WAAtB,CAAvB,CAAR;EACD,CAFQ,EAEN,CAACD,oBAAoB,CAACC,WAAtB,CAFM,CAAT;EAIA,MAAM;IAAEE,OAAF;IAAWC;EAAX,IAAoBnB,sBAAsB,CAACW,QAAD,CAAhD;EAEA,oBACE,QAAC,SAAD;IACE,MAAM,EAAEI,oBAAoB,CAACC,WAD/B;IAEE,SAAS,EAAED,oBAAoB,CAACE,cAFlC;IAGE,KAAK,EAAE;MAAEC,OAAF;MAAWC;IAAX;EAHT;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAzBuBb,sB;UACGH,W,EAERD,W,EACcE,yB;;;KAJTE,sB"},"metadata":{},"sourceType":"module"}