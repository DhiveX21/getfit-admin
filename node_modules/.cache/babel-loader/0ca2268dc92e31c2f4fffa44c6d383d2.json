{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { setStorage, removeStorage } from \"helpers/LocalStorageHelpers\";\nexport const signInSlice = createSlice({\n  name: \"Sign In\",\n  initialState: {\n    user: null\n  },\n  reducers: {\n    signIn: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n\n      /* eslint-disable no-param-reassign */\n      state.user = {\n        username: \"mardhiansyah12\",\n        role: \"admin\",\n        status: \"verfied\"\n      }; // eslint-disable-line no-param-reassign\n\n      /* eslint-enable no-param-reassign */\n\n      setStorage(\"credentials\", JSON.stringify(state.user), 360 * 24 * 60 * 60);\n      console.log(state);\n    },\n    signOut: state => {\n      /* eslint-disable no-param-reassign */\n      state.user = null; // eslint-disable-line no-param-reassign\n\n      /* eslint-enable no-param-reassign */\n\n      removeStorage(\"credentials\");\n      console.log(state);\n    },\n    incrementByAmount: (state, action) => {\n      //   state.value += action.payload;\n      console.log(state);\n      console.log(action);\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  signIn,\n  signOut,\n  incrementByAmount\n} = signInSlice.actions;\nexport default signInSlice.reducer;","map":{"version":3,"names":["createSlice","setStorage","removeStorage","signInSlice","name","initialState","user","reducers","signIn","state","username","role","status","JSON","stringify","console","log","signOut","incrementByAmount","action","actions","reducer"],"sources":["D:/project ardhi/getfit-admin/src/layouts/authentication/sign-in/reduxSlice/signInSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setStorage, removeStorage } from \"helpers/LocalStorageHelpers\";\r\n\r\nexport const signInSlice = createSlice({\r\n  name: \"Sign In\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    signIn: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      /* eslint-disable no-param-reassign */\r\n      state.user = {\r\n        username: \"mardhiansyah12\",\r\n        role: \"admin\",\r\n        status: \"verfied\",\r\n      }; // eslint-disable-line no-param-reassign\r\n      /* eslint-enable no-param-reassign */\r\n\r\n      setStorage(\"credentials\", JSON.stringify(state.user), 360 * 24 * 60 * 60);\r\n      console.log(state);\r\n    },\r\n    signOut: (state) => {\r\n      /* eslint-disable no-param-reassign */\r\n      state.user = null; // eslint-disable-line no-param-reassign\r\n      /* eslint-enable no-param-reassign */\r\n\r\n      removeStorage(\"credentials\");\r\n      console.log(state);\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      //   state.value += action.payload;\r\n      console.log(state);\r\n      console.log(action);\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { signIn, signOut, incrementByAmount } = signInSlice.actions;\r\n\r\nexport default signInSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,6BAA1C;AAEA,OAAO,MAAMC,WAAW,GAAGH,WAAW,CAAC;EACrCI,IAAI,EAAE,SAD+B;EAErCC,YAAY,EAAE;IACZC,IAAI,EAAE;EADM,CAFuB;EAKrCC,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAD,IAAW;MACjB;MACA;MACA;MACA;;MACA;MACAA,KAAK,CAACH,IAAN,GAAa;QACXI,QAAQ,EAAE,gBADC;QAEXC,IAAI,EAAE,OAFK;QAGXC,MAAM,EAAE;MAHG,CAAb,CANiB,CAUd;;MACH;;MAEAX,UAAU,CAAC,aAAD,EAAgBY,IAAI,CAACC,SAAL,CAAeL,KAAK,CAACH,IAArB,CAAhB,EAA4C,MAAM,EAAN,GAAW,EAAX,GAAgB,EAA5D,CAAV;MACAS,OAAO,CAACC,GAAR,CAAYP,KAAZ;IACD,CAhBO;IAiBRQ,OAAO,EAAGR,KAAD,IAAW;MAClB;MACAA,KAAK,CAACH,IAAN,GAAa,IAAb,CAFkB,CAEC;;MACnB;;MAEAJ,aAAa,CAAC,aAAD,CAAb;MACAa,OAAO,CAACC,GAAR,CAAYP,KAAZ;IACD,CAxBO;IAyBRS,iBAAiB,EAAE,CAACT,KAAD,EAAQU,MAAR,KAAmB;MACpC;MACAJ,OAAO,CAACC,GAAR,CAAYP,KAAZ;MACAM,OAAO,CAACC,GAAR,CAAYG,MAAZ;IACD;EA7BO;AAL2B,CAAD,CAA/B,C,CAsCP;;AACA,OAAO,MAAM;EAAEX,MAAF;EAAUS,OAAV;EAAmBC;AAAnB,IAAyCf,WAAW,CAACiB,OAA3D;AAEP,eAAejB,WAAW,CAACkB,OAA3B"},"metadata":{},"sourceType":"module"}